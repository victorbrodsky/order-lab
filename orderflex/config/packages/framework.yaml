framework:
    #esi:             ~
#    translator:      { fallback: %locale% }
#    translator: ~
    #translator:
      #enabled: false
    assets:
          version: 'v1' #will be replaced by version's from services.yaml->assets_version.php every time when run deploy script
          #version_strategy: 'app.asset.my_versioning_strategy' //https://symfony.com/doc/current/frontend/custom_version_strategy.html
          #version_strategy: 'App\Asset\VersionStrategy\DateVersionStrategy'

    secret: '%secret%'
#    secret: '%env(APP_SECRET)%'
    #secret: '123'

#    router:
#        resource: "%kernel.project_dir%/config/routes.yml"
#        strict_requirements: ~
    form: 
    csrf_protection: true
    validation:      {enable_attributes: true} #{ enable_annotations: true }
    handle_all_throwables: true
    http_method_override: true
    #templating:
        #engines: ['twig']
#        assets_version: SomeVersionScheme
#    default_locale: ~ #"%defaultlocale%"
#    trusted_proxies: ~
#    session:         ~
#        save_path: ~
    session:
        handler_id: null
        cookie_lifetime: 0 #Setting a cookie_lifetime to 0 will cause the cookie to live only as long as the browser remains open
        cookie_secure: auto
        cookie_samesite: lax
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
        #http://blog.jmoz.co.uk/symfony2-warning-sessionstart-the-session-id/
        #storage_id: session.storage.filesystem
        storage_factory_id: session.storage.factory.native

    #fragments: ~
    fragments: {path: /_fragment}

    php_errors:
        log: true

    profiler:
        collect: true #show profiler toolbar
        #collect: false

    #Testing http cache: With HTTP Caching, you cache the full output of a page (i.e. the response) and bypass your application entirely on subsequent requests
    #http_cache: true

when@test:
    framework:
        test: true
        session:
            storage_factory_id: session.storage.factory.mock_file

