Apache:

<VirtualHost localhost:80>
	ServerName localhost

	DocumentRoot C:/Users/ch3/Documents/MyDocs/WCMC/ORDER/order-lab-2/orderflex/public/
	<Directory C:/Users/ch3/Documents/MyDocs/WCMC/ORDER/order-lab-2/orderflex/public/>
		Options +FollowSymLinks -Includes
		AllowOverride All
		Require all granted
    </Directory>
    Alias  "/c/test/institution-test-department" "C:/Users/ch3/Documents/MyDocs/WCMC/ORDER/order-lab-2/orderflex/public/"

	#
	# Configuration for default url '/' at the end of the VirtualHost
	#
	DocumentRoot C:/Users/ch3/Documents/MyDocs/WCMC/ORDER/order-lab/orderflex/public/
	<Directory C:/Users/ch3/Documents/MyDocs/WCMC/ORDER/order-lab/orderflex/public/>
		Options +FollowSymLinks -Includes
		AllowOverride All
		Require all granted
    </Directory>
    Alias  "/c/wcm/pathology" "C:/Users/ch3/Documents/MyDocs/WCMC/ORDER/order-lab/orderflex/public/"

</VirtualHost>


https://serverfault.com/questions/306439/apache-wildcard-documentroot
<VirtualHost *:80>
    ServerName placeholdername
    ServerAlias *.example.com
    VirtualDocumentRoot /var/www/%1
</VirtualHost>

Alternatives:
Nginx
HAProxy

Load balancing and HA for multiple applications with Apache, HAProxy and keepalived
https://backreference.org/2012/04/25/load-balancing-and-ha-for-multiple-applications-with-apache-haproxy-and-keepalived/index.html

Run Apache, Nginx & HAProxy on Same Server (Debian, Ubuntu, CentOS)
https://www.linuxbabe.com/linux-server/run-apache-nginx-haproxy-on-same-server-debian-ubuntu-centos

How to configure multiple instance of Apache on the same server in CentOS 6.7
https://www.linuxhelp.com/how-to-configure-multiple-instance-of-apache-on-the-same-server-in-centos-6-7

////// Configure port 8095 /////////
cp -p /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd2.conf
cp -pr /etc/httpd/conf.d/ /etc/httpd/conf.d1/
vim /etc/httpd/conf/httpd1.conf:
Listen 8095
PidFile run/httpd.pid1
Include conf.d1/*.conf

vim /etc/httpd/conf.d1/000-default.conf:
<VirtualHost *:8095>...

iptables -A INPUT -p tcp --dport 8080 -j ACCEPT
iptables -L
iptables -F
service iptables save

netstat -ln | grep 8095

sudo firewall-cmd --permanent --add-port=8081/tcp
sudo firewall-cmd --permanent --add-port=8082/tcp
sudo firewall-cmd --reload
Disable firewall (https://linuxize.com/post/how-to-stop-and-disable-firewalld-on-centos-7):
sudo systemctl stop firewalld
sudo systemctl disable firewalld
sudo systemctl mask --now firewalld

/usr/sbin/httpd -f /etc/httpd/conf/httpd1.conf -k restart

Why port 80 is accesibble but port 8083 is not?
Why custom port is not accesible by tcp?
Test: netcat -z -v localhost 8095

Firewall:
sudo systemctl status firewalld
firewall-cmd --zone=public --add-port=8095/tcp --permanent
firewall-cmd â€“-reload
firewall-cmd --zone=public --list-ports

//https://monovm.com/blog/changing-the-apache-port-in-centos/

netstat -na | grep :8095
iptables -A INPUT -p tcp --dport 8095 -j ACCEPT
telnet localhost 8095
nmap localhost -p 8095

Don't use vpn, it will block custom ports!

Seacrh listening ports: grep -ri listen /etc/httpd
Check status: sudo systemctl status httpd.service -l --no-pager

Use Email:
Question 6:

#### Example HAProxy Configuration
```apache
global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend http_front
    bind *:80
    acl url_app1 path_beg /clients/organization01/department01
    acl url_app2 path_beg /clients/organization02/department01
    use_backend app1_backend if url_app1
    use_backend app2_backend if url_app2

backend app1_backend
    server app1 127.0.0.1:8081 check

backend app2_backend
    server app2 127.0.0.1:8082 check
```

This configuration does the following:
- Defines global settings and defaults.
- Sets up a frontend that listens on port 80.
- Uses ACLs (Access Control Lists) to identify traffic based on the URL path.
- Forwards requests to different backends based on the ACLs.
- Each backend corresponds to a different Apache instance running on a specific port.

### 4. Restart and Enable HAProxy
After configuring HAProxy, restart the service and enable it to start on boot:
```bash
sudo systemctl restart haproxy
sudo systemctl enable haproxy
```
haproxy -f /etc/haproxy/haproxy.cfg -c
why the following haproxy configuration gives an error on restart haproxy: frontend http_front
    bind *:80
    acl url_app1 path_beg /clients/organization01/department01
    use_backend app1_backend if url_app1

backend app1_backend
    server app5 142.93.68.152:8082 check
ChatGPT

The HAProxy configuration you provided seems generally correct, but there are a few common reasons why you might be encountering an error when restarting HAProxy with this configuration:
    Syntax Errors: Ensure that the configuration syntax is correct. Even small mistakes like missing a space or a newline can cause issues. HAProxy is very particular about its configuration file format.
    Port Availability: Ensure that port 80 (the port you're binding to in the frontend http_front) is not already in use by another process on the machine. This is a common issue when working with web servers and proxies.

    Server Availability: Check if the server defined in the backend app1_backend section (142.93.68.152:8082) is reachable and that the service is running on port 8082.

    Configuration File Location: Make sure you are editing the correct HAProxy configuration file and that HAProxy is reading from the correct file when restarting.

    Permissions: Ensure that the user running HAProxy has the necessary permissions to bind to port 80 and access the configuration file.

    HAProxy Version: Make sure that your HAProxy version supports the syntax you are using. Some directives or features might not be available in older versions.

    Error Messages: Look at the error messages you receive when you try to restart HAProxy. They often provide valuable insights into what's going wrong.

To troubleshoot this further, you can check the HAProxy logs (often found in /var/log/haproxy.log or by running haproxy -f /etc/haproxy/haproxy.cfg -c to check the configuration for errors. The output from these logs or commands should give you more specific information about the error you are encountering.


Troubleshoot:
https://www.digitalocean.com/community/tutorials/haproxy-network-error-cannot-bind-socket
sudo systemctl status haproxy.service -l --no-pager

//How To Configure HAProxy Logging with Rsyslog on CentOS 8
https://www.digitalocean.com/community/tutorials/how-to-configure-haproxy-logging-with-rsyslog-on-centos-8-quickstart

How To Troubleshoot Common HAProxy Errors
https://www.digitalocean.com/community/tutorials/how-to-troubleshoot-common-haproxy-errors

https://www.haproxy.com/blog/path-based-routing-with-haproxy

sudo systemctl start httpd.service
sudo systemctl restart haproxy
httpd -f /etc/httpd/conf/httpd1.conf -k restart


sudo tail -n 30 /var/log/haproxy.log

Upgrade HAProxy
###########################
https://idolsgate.com/blog/how-to-install-the-latest-version-of-haproxy-on-centos-7/
https://discourse.haproxy.org/t/upgrading-haproxy1-5-to-1-7/1493

cd /usr/src/
wget http://www.haproxy.org/download/2.0/src/${LATEST_HAPROXY}.tar.gz
tar xzvf ${LATEST_HAPROXY}.tar.gz

yum install gcc-c++ openssl-devel pcre-static pcre-devel systemd-devel -y

cd /usr/src/${LATEST_HAPROXY}
make TARGET=linux-glibc USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1 USE_CRYPT_H=1 USE_LIBCRYPT=1 USE_SYSTEMD=1
mkdir /etc/haproxy
make install

sudo cp -f /usr/local/sbin/haproxy /usr/sbin # Overwrite version 1.5 with new 1.7
sudo service haproxy restart
sudo chkconfig haproxy on


###########################
