{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

{% extends "AppFellAppBundle/Default/base.html.twig" %}

{# Override base template to use minimal JS for anonymous users #}
{% block mainjs %}
    {# Essential JS + AJAX utilities for select2 #}
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/jquery/jquery-1.11.0.min.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/jquery-ui-1.11.2/jquery-ui.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/bootstrap/js/bootstrap.min.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/datepicker/js/bootstrap-datepicker.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/select2/js/select2.full.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/inputmask/jquery.inputmask.bundle.min.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/pnotify/pnotify.custom.min.js') }}"></script>
    
    {# FOSJsRoutingBundle for routing #}
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', {'callback': 'fos.Router.setData'}) }}"></script>
    
    {# Include common/selectAjax to enable getComboboxGeneric #}
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/form/js/user-form.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/form/js/user-common.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/form/js/user-selectAjax.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/form/js/user-masking.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/form/js/user-validation.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/form/js/user-fileuploads.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/store-js/dist/store.legacy.min.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/jquery-idleTimeout/jquery-idleTimeout.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/form/js/user-jquery-idleTimeout.js') }}"></script>
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/dropzone/dropzone.js') }}"></script>
{% endblock %}

{#{% block browsercheck %}{% endblock %}#}
{#{% block header %}{% endblock %}#}
{#{% block errorwatchjs %}{% endblock %}#}
{#{% block maincss %}{% endblock %}#}

{% block title %}
    Fellowship Application
{% endblock %}

{% block content %}

    <h3 class="text-info" align="center">
        Fellowship Application
    </h3>

    <input type="hidden" id="disableIdleTimeout" value="1" />

    {% if cycle == "download" %}
        {% set collapsein = "in" %}
    {% else %}
        {% if is_granted('ROLE_FELLAPP_ADMIN') or is_granted('ROLE_FELLAPP_COORDINATOR') %}
            {% set collapsein = "" %}
        {% endif %}
    {% endif %}

    {% include 'AppFellAppBundle/Form/applicant-content.html.twig' %}

{% endblock %}

{% block footer %}
    {#<div class="order-content text-center col-xs-12" style="margin-top: -85px;">#}
    {#<div class="order-content text-center col-xs-12">#}
        <!-- footer -->
        {#{% include 'AppUserdirectoryBundle/Default/footer.html.twig' %}#}

    <div class="order-content text-center col-xs-12" style="margin-bottom: 30px;">

        {% set environmentServer = user_security_utility.getSiteSettingParameter('environment') %}
        {% if environmentServer == 'demo' %}
            <a href="https://example.com/" class="arrow">Demo Department</a> at <a href="https://example.com/" class="arrow">Demo Institution</a>
        {% else %}
            {% if showcopyrightonfooter %}
                <a href="{{ path('main_common_home') }}" target="_blank">O R D E R</a>
                &copy; {{ "now"|date('Y') }}
                {% if institution_url and institution_name %}
                    <a href="{{ institution_url }}" target="_blank">{{ institution_name }}</a>.
                {% else %}
                    <a href="{{ path('employees_siteparameters') }}" target="_blank">[Add Your Institution's Name]</a>.
                {% endif %}

                <br>


                {% if department_url and department_name and subinstitution_url and subinstitution_name %}
                    <a href="{{ department_url }}" target="_blank">{{ department_name }}</a> at
                    <a href="{{ subinstitution_url }}" target="_blank">{{ subinstitution_name }}</a>.
                {% else %}
                    <a href="{{ path('employees_siteparameters') }}" target="_blank">[Add Your Department's Name]</a> at
                    <a href="{{ path('employees_siteparameters') }}" target="_blank">[Add Your Organization's Name]</a>.
                {% endif %}
            {% endif %}
        {% endif %}

    </div>

{% endblock %}

{#{% block mainjs %}#}
{#{% endblock %}#}

{% block additionaljs %}
    {% include 'AppFellAppBundle/Form/applicant-content-js.html.twig' %}

    <script language="Javascript">
        // Define cycle variable for anonymous users
        var cycle = 'new';
        
        // Minimal select2 initialization for anonymous users
        function initializeSelect2ForAnonymous() {
            // Initialize basic select2 dropdowns without AJAX calls
            $('select.combobox').each(function() {
                if (!$(this).hasClass('ajax-combobox-')) {
                    $(this).select2({
                        width: '100%',
                        dropdownAutoWidth: true,
                        placeholder: "Select an option",
                        allowClear: true,
                        selectOnBlur: false
                    });
                }
            });
            
            // For ajax-combobox fields, use preloaded data if available
            $('.ajax-combobox-fellowshipSubspecialty').each(function() {
                var options = [];
                $(this).find('option').each(function() {
                    if ($(this).val()) {
                        options.push({
                            id: $(this).val(),
                            text: $(this).text()
                        });
                    }
                });
                
                $(this).select2({
                    width: '100%',
                    dropdownAutoWidth: true,
                    placeholder: "Select a fellowship subspecialty",
                    allowClear: true,
                    data: options
                });
            });
            
            // Initialize ajax-combobox-city using getComboboxGeneric (AJAX)
            try {
                var _cities = [];
                getComboboxGeneric(null,'city',_cities,false,'public/generic/','employees',true,'Select a city',true);
                //getComboboxGeneric(newForm,'city',_cities,false);
            } catch (e) {
                // fallback: simple select2 without data
                $('.ajax-combobox-city').select2({
                    width: '100%',
                    dropdownAutoWidth: true,
                    placeholder: 'Select a city',
                    allowClear: true
                });
            }

            //getComboboxGeneric(newForm,'traininginstitution',_traininginstitution,false,'');
            try {
                var _traininginstitution = [];
                getComboboxGeneric(null,'traininginstitution',_traininginstitution,false,'public/generic/','employees',true,'Select an institution',true);
            } catch (e) {
                // fallback: simple select2 without data
                $('.ajax-combobox-traininginstitution').select2({
                    width: '100%',
                    dropdownAutoWidth: true,
                    placeholder: 'Select an institution',
                    allowClear: true
                });
            }

            //ajax-combobox-trainingmajors
            //TODO: test majors
            try {
                var _trainingmajors = [];
                var multipleFlag = true;
                getComboboxGeneric(null,'trainingmajors',_trainingmajors,multipleFlag,'public/generic/','employees',true,'Select a major',true);
            } catch (e) {
                // fallback: simple select2 without data
                //console.log('gajax-combobox-trainingmajors = no data');
                $('.ajax-combobox-trainingmajors').select2({
                    width: '100%',
                    dropdownAutoWidth: true,
                    placeholder: 'Select a major',
                    allowClear: true
                });
            }

            //ajax-combobox-jobtitle
            //TODO: fix
            try {
                var _jobTitles = [];
                getComboboxGeneric(null,'jobtitle',_jobTitles,false,'public/generic/','employees',true,'Select a job title',true);
            } catch (e) {
                // fallback: simple select2 without data
                //console.log('gajax-combobox-jobtitle = no data');
                $('.ajax-combobox-jobtitle').select2({
                    width: '100%',
                    dropdownAutoWidth: true,
                    placeholder: 'Select a job title',
                    allowClear: true
                });
            }

            //ajax-combobox-residencyspecialty
            try {
                var _residencySpecialtys = [];
                getComboboxGeneric(null,'residencyspecialty',_residencySpecialtys,false,'public/generic/','employees',true,'Select a residency specialty',true);
            } catch (e) {
                // fallback: simple select2 without data
                $('.ajax-combobox-residencyspecialty').select2({
                    width: '100%',
                    dropdownAutoWidth: true,
                    placeholder: 'Select a residency specialty',
                    allowClear: true
                });
            }
        }
        
        // Minimal expandTextarea function
        function expandTextarea(holder) {
            var targetid = ".textarea";
            targetid = getElementTargetByHolder(holder,targetid);

            if( $(targetid).length == 0 ) {
                return;
            }

            $(targetid).each( function() {
                var textarea = $(this);
                if( textarea.attr('data-autosize') == 'true' ) {
                    textarea.attr('rows', '3');
                }
            });
        }
        
        // Minimal getElementTargetByHolder function
        function getElementTargetByHolder(holder,target) {
            if( holder && typeof holder !== 'undefined' && holder.length > 0 ) {
                target = holder.find(target);
            }
            return target;
        }

        $(document).ready(function() {
            // Initialize select2 for anonymous users
            initializeSelect2ForAnonymous();

            // Initialize basic form elements
            $('input[type="text"], input[type="email"], textarea').each(function() {
                if (!$(this).hasClass('select2-input')) {
                    $(this).removeAttr('readonly');
                }
            });

            var hashValue = window.location.hash;
            //console.log("hashValue="+hashValue);
            if( hashValue == '#interviews' ) {
                //console.log("open panel");
                $('#interviews').collapse('show');
                expandTextarea($('#interviews'));
            }


            //Added
            var $inst = $('select.fellapp-institution');
            var $global = $('select.fellapp-globalFellowshipSpecialty');
            if ($inst.length === 0 || $global.length === 0) {
                console.log('FellApp selects not found:', 'inst len=', $inst.length, 'global len=', $global.length);
                return;
            }

            $inst.on('change', function(){
                var instId = $(this).val();
                console.log('Institution changed:', instId);
                filterGlobalByInstitution(instId);
            });

            var initInst = $inst.val();
            console.log('Initial institution:', initInst);
            filterGlobalByInstitution(initInst);
        });

        function filterGlobalByInstitution(instId) {
            console.log('filterGlobalByInstitution:', 'instId=', instId);

            if( !instId ) {
                console.log('filterGlobalByInstitution: instId is null');
                return;
            }

            var url = Routing.generate('fellapp-global-fellowship-types')
            if( instId ) {
                url = url + '/' + instId;
            }

            //const select = $('.fellapp-globalFellowshipSpecialty');

            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json'
            }).then(function (data) {
                console.log('Fetched data:', data);

                var comboboxEl = $('select.fellapp-globalFellowshipSpecialty');
                comboboxEl.empty();//.trigger("change");

                //first empty element
                var newOption = new Option('', '', false, false);
                comboboxEl.append(newOption);//.trigger('change');

                if( data.length > 0 ) {
                    data.forEach(function (item) {
                        var thisEncounterId = item['id'];
                        var thisEncounterText = item['text'];
                        //console.log('thisEncounterText='+thisEncounterText+", thisEncounterId="+thisEncounterId);
                        //text += thisEncounterText;
                        if (thisEncounterText) {
                            var newOption = new Option(thisEncounterText, thisEncounterId, false, false);
                            comboboxEl.append(newOption);//.trigger('change');
                        }
                    });

                    comboboxEl.trigger('change');
                }
            });
        }

    </script>

{% endblock %}


