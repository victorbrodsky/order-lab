{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}


{#macro for form label input inline#}

{% macro field_tooltip( field, tooltip ) %}

    {% set postfixLabel = '<span class="glyphicon glyphicon-question-sign element-with-tooltip-always"' %}
    {% set postfixLabel = postfixLabel~' data-toggle="tooltip"' %}
    {% set postfixLabel = postfixLabel~' title="'~tooltip~'">' %}
    {% set postfixLabel = postfixLabel~'</span>' %}

    {% set label = field.vars.label|replace({":":""}) %}

    <p>
    <div class="row">
        {{ form_errors(field) }}
        <div class="col-xs-6" align="right">
            {#{{ form_label(field) }}#}
            <strong>{{ label }}</strong> {{ postfixLabel|raw }}<strong>:</strong>
        </div>
        <div class="col-xs-6" align="left">
            {{ form_widget(field) }}
        </div>
        {{ form_rest(field) }}
    </div>
    </p>
{% endmacro %}

{% macro checkbox( field, attr ) %}
    <p>
    <div class="row">
        {{ form_errors(field) }}
        <div class="col-xs-6" align="right">
            {{ form_label(field) }}
        </div>
        <div class="col-xs-6 text-center" align="left" style="width: 50px;">
            {% if attr == "disabled" %}
                {{ form_widget(field,{ 'disabled':'disabled' }) }}
            {% elseif attr == "readonly" %}
                {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
            {% elseif attr == "required" %}
                {{ form_widget(field, { 'attr': {'required': 'true'} }) }}
            {% else %}
                {{ form_widget(field) }}
            {% endif %}
        </div>
    </div>
    </p>
{% endmacro %}
{% macro checkbox_with_value( field, attr, value ) %}

    {% if value is defined %}
        {% set colLeft = 6 %}
        {% set colMiddle = 1 %}
        {% set colRight = 4 %}
        {% set showRealValue = 1 %}
    {% else %}
        {% set colLeft = 6 %}
        {% set colMiddle = 6 %}
        {% set colRight = 0 %}
        {% set showRealValue = 0 %}
    {% endif %}

    <p>
    <div class="row">
        {{ form_errors(field) }}
        <div class="col-xs-{{ colLeft }}" align="right">
            {{ form_label(field) }}
        </div>
        <div class="col-xs-{{ colMiddle }} text-center" align="left" style="width: 50px;">
            {% if attr == "disabled" %}
                {{ form_widget(field,{ 'disabled':'disabled' }) }}
            {% elseif attr == "readonly" %}
                {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
            {% elseif attr == "required" %}
                {{ form_widget(field, { 'attr': {'required': 'true'} }) }}
            {% else %}
                {{ form_widget(field) }}
            {% endif %}
        </div>

        <div class="col-xs-{{ colRight }}" align="left">
            {% if showRealValue == 1 %}
                {#value={{ value }}<br>#}
                {% set currentValueStr = "Unknown" %}

                {% if value is same as(null) %}
                    {% set currentValueStr = "NULL" %}
                {% endif %}

                {% if value is same as(true) %}
                    {% set currentValueStr = "TRUE" %}
                {% endif %}

                {% if value is same as(false) %}
                    {% set currentValueStr = "FALSE" %}
                {% endif %}

                Current value is '{{ currentValueStr }}'
            {% endif %}
        </div>

    </div>
    </p>
{% endmacro %}

{% macro simplefield_checkbox( label, value, type, disabled ) %}
    {% if value %}
        {% set checked = 'checked' %}
    {% else %}
        {% set checked = '' %}
    {% endif %}
    <p>
    <div class="row">
        <div class="col-xs-6" align="right">
            <strong>{{ label }}</strong>
        </div>
        <div class="col-xs-6" align="left">
            {% if type is defined and (type == "input" or type == "simple-field") %}
                <input class="not-mapped-simplefield" type="checkbox" {{ checked }} {{ disabled }}>
            {% else %}
                <div class="not-mapped-simplefield" style="min-height:34px; height:auto;" {{ disabled }}>
                    <input type="checkbox" {{ checked }} {{ disabled }}>
                </div>
            {% endif %}
        </div>
    </div>
    </p>
{% endmacro %}

{% macro simplefield( label, value, type, disabled, tooltip, id, shift ) %}
    {% if id is not defined or id=="" %}
        {% set id = "not-mapped-simplefield" %}
    {% endif %}

    {% set xs1 = "col-xs-6" %}
    {% set xs2 = "col-xs-6" %}
    {% if shift is defined and shift == "2-6" %}
        {% set xs1 = "col-xs-2" %}
        {% set xs2 = "col-xs-6" %}
    {% endif %}

    <p>
    <div class="row">
        <div class="{{ xs1 }}" align="right">
            <label>{{ label }}</label>
        </div>
        <div class="{{ xs2 }}" align="left">
            {% if type is defined and type == "input" %}
                {% if tooltip is defined and tooltip %}
                    <input id="{{ id }}" class="form-control not-mapped-simplefield element-with-tooltip-always"
                           type="text" value="{{ value|raw }}" {{ disabled }}
                           data-toggle="tooltip" title="{{ tooltip }}"
                    >
                {% else %}
                    <input id="{{ id }}" class="form-control not-mapped-simplefield" type="text" value="{{ value|raw }}" {{ disabled }}>
                {% endif %}
            {% elseif type == "simple-field" %}
                {{ value|raw }}
            {% elseif type == "textarea" %}
                <textarea class="form-control textarea" {{ disabled }}>{{ value }}</textarea>
            {% elseif type == "xml" %}
                <pre lang="xml" >{{value}}</pre>
            {% elseif type == "combobox" %}
                <select class="combobox" {{ disabled }}>
                    {% for thisValue in value %}
                        {#thisValue={{ thisValue }}#}
                        <option value="{{ thisValue }}" selected>{{ thisValue }}</option>
                    {% endfor %}
                </select>
            {% elseif type == "array-as-string" %}
                <input id="{{ id }}" class="form-control not-mapped-simplefield" type="text" value="{{ value|join(', ') }}" {{ disabled }}>
            {% else %}
                {#<div class="well well-sm" style="margin-bottom:0; min-height:40px">#}
                    {#{{ value|raw }}#}
                {#</div>#}
                {% if tooltip is defined and tooltip %}
                    <div id="{{ id }}" class="form-control not-mapped-simplefield element-with-tooltip-always"
                         style="min-height:34px; height:auto;" {{ disabled }}
                         data-toggle="tooltip" title="{{ tooltip }}"
                    >
                        {{ value|raw }}
                    </div>
                {% else %}
                    <div id="{{ id }}" class="form-control not-mapped-simplefield" style="min-height:34px; height:auto;" {{ disabled }}>
                        {{ value|raw }}
                    </div>
                {% endif %}
            {% endif %}
        </div>
    </div>
    </p>
{% endmacro %}


{% macro field_notempty( field, cycle, label, attr ) %}
    {% import _self as formmacros %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {#{% if field.vars.value or not "show" in cycle %}#}
    {% if field.vars.value or not showFlag %}
        {{ formmacros.field(field, label, attr) }}
    {% else %}
        {% do field.setRendered %}
    {% endif %}
{% endmacro %}


{% macro field( field, label, attr ) %}
    {% if field is defined %}
        {% form_theme field 'AppOrderformBundle/Default/collection_widget.html.twig' %}
        <p>
        <div class="row">
            {{ form_errors(field) }}
            <div class="col-xs-6" align="right">
                {{ form_label(field,label) }}
            </div>
            <div class="col-xs-6" align="left">
                {% if attr == "disabled" %}
                    {#value of disabled field will be ignored#}
                    {{ form_widget(field,{ 'disabled':'disabled' }) }}
                {% elseif attr == "readonly" %}
                    {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
                {% elseif attr == "required" %}
                    {{ form_widget(field, { 'attr': {'required': 'true'} }) }}
                {% else %}
                    {{ form_widget(field) }}
                {% endif %}
            </div>
            {{ form_rest(field) }}
        </div>
        </p>
    {% endif %}
{% endmacro %}

{% macro field_left( field, label, attr ) %}
    {% if field is defined %}
        {% form_theme field 'AppOrderformBundle/Default/collection_widget.html.twig' %}
        <p>
        <div class="row">
            {{ form_errors(field) }}
            <div class="col-xs-2" align="right">
                {{ form_label(field,label) }}
            </div>
            <div class="col-xs-6" align="left">
                {% if attr == "disabled" %}
                    {#value of disabled field will be ignored#}
                    {{ form_widget(field,{ 'disabled':'disabled' }) }}
                {% elseif attr == "readonly" %}
                    {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
                {% elseif attr == "required" %}
                    {{ form_widget(field, { 'attr': {'required': 'true'} }) }}
                {% else %}
                    {{ form_widget(field) }}
                {% endif %}
            </div>
            <div class="col-xs-4" align="right">
            </div>
            {{ form_rest(field) }}
        </div>
        </p>
    {% endif %}
{% endmacro %}


{% macro fieldDateLabel_notempty( field, cycle, classname, attr ) %}
    {% import _self as formmacros %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if field.vars.value or not showFlag %}
        {{ formmacros.fieldDateLabel(field, classname, attr) }}
    {% else %}
        {% do field.setRendered %}
    {% endif %}
{% endmacro %}

{% macro fieldDateLabel_vertical( field, classname, attr ) %}
    <p>
        {{ form_errors(field) }}
        {{ form_label(field) }}

        <div class="input-group input-group-reg date {{ classname }}">
            {% if attr == "disabled" %}
                {#value of disabled field will be ignored#}
                {{ form_widget(field,{ 'disabled':'disabled' }) }}
            {% elseif attr == "readonly" %}
                {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
            {% else %}
                {{ form_widget(field) }}
            {% endif %}
            <span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>
        </div>

        {{ form_rest(field) }}
    </p>
{% endmacro %}

{% macro fieldDateLabel( field, classname, attr, noerror ) %}
    {% import _self as formmacros %}
    <p>
        {{ formmacros.fieldDateLabelNoP(field, classname, attr, noerror) }}
    </p>
{% endmacro %}
{% macro fieldDateLabelNoP( field, classname, attr, noerror ) %}
    <div class="row">
        {#TODO: quick fix for vacreq form error#}
        {% if noerror is not defined %}
            {{ form_errors(field) }}
        {% endif %}
        <div class="col-xs-6" align="right">
            {{ form_label(field) }}
        </div>
        <div class="col-xs-6" align="left" class="form_body_toggle_btn">

            <div class="input-group input-group-reg date {{ classname }}">
                {% if attr == "disabled" %}
                    {#value of disabled field will be ignored#}
                    {{ form_widget(field,{ 'disabled':'disabled' }) }}
                {% elseif attr == "readonly" %}
                    {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
                {% else %}
                    {{ form_widget(field) }}
                {% endif %}
                <span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>

            {#data-date-format="mm/yyyy"#}
            {#<div class="input-group input-group-reg date datepicker-only-month-year">#}
            {#{{ form_widget(field) }}#}
            {#<span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>#}
            {#</div>#}


        </div>
        {{ form_rest(field) }}
    </div>
{% endmacro %}

{% macro fieldDateLabel_left( field, classname, attr, noerror ) %}
    {% import _self as formmacros %}
    <p>
    <div class="row">
        {% if noerror is not defined %}
            {{ form_errors(field) }}
        {% endif %}
        <div class="col-xs-2" align="right">
            {{ form_label(field) }}
        </div>
        <div class="col-xs-6" align="left" class="form_body_toggle_btn">
            <div class="input-group input-group-reg date {{ classname }}">
                {% if attr == "disabled" %}
                    {#value of disabled field will be ignored#}
                    {{ form_widget(field,{ 'disabled':'disabled' }) }}
                {% elseif attr == "readonly" %}
                    {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
                {% else %}
                    {{ form_widget(field) }}
                {% endif %}
                <span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
        <div class="col-xs-4" align="right">
        </div>
        {{ form_rest(field) }}
    </div>
    </p>
{% endmacro %}

{% macro fielddate( datetime, classname, attr ) %}
    {% if datetime.field is defined %}
        {% set datetimeField = datetime.field %}
    {% else %}
        {% set datetimeField = datetime %}
    {% endif %}
    <div class="input-group input-group-reg date {{ classname }}">
        {% if attr == "disabled" %}
            {#value of disabled field will be ignored#}
            {{ form_widget(datetimeField,{ 'disabled':'disabled' }) }}
        {% elseif attr == "readonly" %}
            {{ form_widget(datetimeField, { 'attr': {'readonly': 'readonly'} }) }}
        {% else %}
            {{ form_widget(datetimeField) }}
        {% endif %}
        <span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>
    </div>

    {% if datetime.time is defined %}
        {% if attr == "disabled" %}
            {{ form_widget(datetime.time,{ 'disabled':'disabled' }) }}
        {% elseif attr == "readonly" %}
            {{ form_widget(datetime.time,{ 'attr': {'readonly': 'readonly'} }) }}
        {% else %}
            {{ form_widget(datetime.time) }}
        {% endif %}
    {% endif %}

    {% if datetime.timezone is defined %}
        {% import _self as formmacros %}
        {#{{ formmacros.field(datetime.timezone) }}#}
        {{ form_widget(datetime.timezone) }}
    {% endif %}

{% endmacro %}

{% macro fieldicon( field, extra, classname ) %}

    {% set classname = classname~"btn" %}

    {% import _self as formmacros %}
    {% set imgLoading = asset('orderassets/apporderform/form/img/select2-spinner.gif') %}

        <div class="row ">
            <div class="col-xs-10">
                {% if extra != "" %}
                    {{ form_widget(extra) }}
                {% endif %}
                {{ form_widget(field) }}
            </div>           
            <div class="col-xs-2">
                <button id="check_btn" class="btn btn-default checkbtn {{ classname }}" type="button" onclick="checkForm(this)" data-loading-text="<img src='{{ imgLoading }}' />"><i class="glyphicon glyphicon-check"></i></button>
            </div>
        </div>

{% endmacro %}

{% macro field_show_user( container, fieldname, cycle, attr ) %}

    {% import _self as formmacros %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if attr is not defined %}
        {% set attr = 'disabled' %}
    {% endif %}

    {% set userValues = [] %}

    {% if fieldname == "provider" %}
        {% if container.vars.value %}
            {% set userValue = container.vars.value.provider %}
            {% set userValues = [userValue] %}
        {% endif %}
        {% set userLabel = container.provider.vars.label %}
        {% if container.provider is defined %}
            {% set userForm = container.provider %}
            {% if showFlag and container.vars.value %}
                {% set label = userLabel %}
                {% for singleUserValue in userValues %}
                    {% set hreflink = '<a href="'~path(scan_sitename~'_showuser', { 'id': singleUserValue.id })~'">'~singleUserValue.getUserNameStr()~'</a>' %}
                    {{ formmacros.simplefield( label, hreflink, "", attr ) }}
                {% endfor %}
            {% else %}
                {{ formmacros.field(userForm) }}
            {% endif %}
        {% endif %}
    {% endif %}

    {% if   fieldname == "proxyuser" or
            fieldname == "orderRecipients" or
            fieldname == "reportRecipients" or
            fieldname == "referringProviders" or
            fieldname == "attendingPhysicians"
    %}
        {% if fieldname == "proxyuser" %}
            {% set userValues = container.vars.value.proxyuser %}
            {% set userLabel = container.proxyuser.vars.label %}
            {% set userForm = null %}
            {% if container.proxyuser is defined %}
                {% set userForm = container.proxyuser %}
            {% endif %}
        {% endif %}

        {% if fieldname == "orderRecipients" %}
            {% set userValues = container.vars.value.orderRecipients %}
            {% set userLabel = container.orderRecipients.vars.label %}
            {% set userForm = null %}
            {% if container.orderRecipients is defined %}
                {% set userForm = container.orderRecipients %}
            {% endif %}
        {% endif %}

        {% if fieldname == "reportRecipients" %}
            {% set userValues = container.vars.value.reportRecipients %}
            {% set userLabel = container.reportRecipients.vars.label %}
            {% set userForm = null %}
            {% if container.reportRecipients is defined %}
                {% set userForm = container.reportRecipients %}
            {% endif %}
        {% endif %}

        {% if fieldname == "referringProviders" %}
            {% set userValues = container.vars.value.referringProviders %}
            {% set userLabel = container.referringProviders.vars.label %}
            {% set userForm = null %}
            {% if container.referringProviders is defined %}
                {% set userForm = container.referringProviders %}
            {% endif %}
        {% endif %}

        {% if fieldname == "attendingPhysicians" %}
            {% set userValues = container.vars.value.attendingPhysicians %}
            {% set userLabel = container.attendingPhysicians.vars.label %}
            {% set userForm = null %}
            {% if container.attendingPhysicians is defined %}
                {% set userForm = container.attendingPhysicians %}
            {% endif %}
        {% endif %}

        {#{% set userValues = container.vars.value.proxyuser %}#}
        {#{% set userLabel = container.proxyuser.vars.label %}#}
        {% if userForm %}
            {% if showFlag and container.vars.value %}
                {% set label = userLabel %}
                {{ formmacros.showUserWrapperAsSimpleField( userValues, label, attr ) }}
            {% else %}
                {{ formmacros.field(userForm) }}
            {% endif %}
        {% endif %}
    {% endif %}

    {% if fieldname == "proxyuser-as-well" %}
        {% set userValues = container.vars.value.proxyuser %}
        {% set userLabel = container.proxyuser.vars.label %}
        {% if container.proxyuser is defined %}
            {% set userForm = container.proxyuser %}
            {% if showFlag and container.vars.value %}
                {% set label = userLabel %}
                <div class="well well-sm" align='center'>
                    <h5>{{ label }}</h5>
                {% for singleProxyUserValue in userValues %}
                    {% if singleProxyUserValue.user %}
                        {% set singleUserValue = singleProxyUserValue.user %}
                        {% set hreflink = '<a href="'~path(scan_sitename~'_showuser', { 'id': singleUserValue.id })~'">'~singleProxyUserValue~'</a>' %}
                    {% else %}
                        {% set hreflink = singleProxyUserValue %}
                    {% endif %}
                    {#{{ formmacros.simplefield( label, hreflink, "", attr ) }}#}
                    <p>{{ hreflink|raw }}</p>
                {% endfor %}
                </div>
            {% else %}
                {{ formmacros.field(userForm) }}
            {% endif %}
        {% endif %}
    {% endif %}

    {% if fieldname == "proxyuser-as-selectbox" %}
        {#container.proxyuser|length:{{ container.proxyuser|length }}#}
        {{ formmacros.field(container.proxyuser) }}
    {% endif %}

{% endmacro %}

{% macro showUserWrapperAsSimpleField(userWrappers,label,attr) %}
    {% import _self as formmacros %}
    {% set hreflinks = [] %}
    {% for userwrapper in userWrappers %}
        {% if userwrapper.user %}
            {% set singleUserValue = userwrapper.user %}
            {% set hreflink = '<a href="'~path(scan_sitename~'_showuser', { 'id': singleUserValue.id })~'">'~userwrapper~'</a>' %}
        {% else %}
            {% set hreflink = userwrapper %}
        {% endif %}
        {% set hreflinks = hreflinks|merge([hreflink]) %}
    {% endfor %}
    {% if hreflinks|length > 0 %}
        {{ formmacros.simplefield( label, hreflinks|join('<br>'), "", attr ) }}
    {% endif %}
{% endmacro %}

{% macro hiddenInputFieldsForJS(messageForm) %}
    {% set proxyuserName = null %}
    {% set proxyuserId = null %}
    {% if messageForm.vars.value.proxyuser and messageForm.vars.value.getProxyuserAsUser() %}
        {% set proxyuserName = messageForm.vars.value.getProxyuserAsUser().getUserNameStr() %}
        {% set proxyuserId = messageForm.vars.value.getProxyuserAsUser().getId() %}
    {% endif %}

    <input type="hidden" id="user_name" value="{{ messageForm.vars.value.provider.getUserNameStr() }}" />
    <input type="hidden" id="user_id" value="{{ messageForm.vars.value.provider.id }}" />

    <input type="hidden" id="proxyuser_name" value="{{ proxyuserName }}" />
    <input type="hidden" id="proxyuser_id" value="{{ proxyuserId }}" />
{% endmacro %}


{% macro message(form) %}

    {% import _self as formmacros %}
    {% import "AppUserdirectoryBundle/Tree/treemacros.html.twig" as treemacros %}

    {{ formmacros.hiddenInputFieldsForJS(form) }}

    {#{{ formmacros.field(form.provider) }}#}
    {{ formmacros.simplefield( "Submitter:", form.vars.value.provider.getUserNameStr(), "", "disabled" ) }}

    {{ formmacros.field(form.proxyuser) }}

    <div class="user-collection-holder">

        {#Institutional PHI Scope#}
        {% if form.institution is defined %}
            {{ formmacros.field(form.institution) }}
        {% endif %}

        {#Default Originating Institution#}
        {% if form.scanorder.scanOrderInstitutionScope is defined %}
            <div class="well well-sm">
                <h5><label>Originating Organizational Group</label></h5>
                {{ treemacros.compositeTreeNode(form.scanorder.scanOrderInstitutionScope,'','') }}
            </div>
        {% endif %}

        {#Default Performing Institution#}
        {% if form.organizationRecipients is defined %}
            {% for organizationRecipient in form.organizationRecipients %}
                <div class="well well-sm">
                    <h5>{{ form_label(form.organizationRecipients) }}</h5>
                    {{ treemacros.compositeTreeNode(organizationRecipient.institution,'','') }}
                </div>
            {% endfor %}
        {% endif %}

    </div>

    {{ formmacros.field(form.equipment) }}

    {{ formmacros.field(form.purpose) }}

    <div id="purpose_option" class="collapse">
        <div class="well" align='center'>
            {{ formmacros.field(form.account) }}
        </div>
    </div>

    {{ formmacros.field(form.priority) }}

    {#optional for priority#}
    <div id="priority_option" class="collapse">
        <div class="well" align='center'>

            {{ formmacros.fieldDateLabel(form.deadline,'allow-future-date') }}
            {{ formmacros.field(form.returnoption) }}

        </div>
    </div>

    {% if form.scanorder is defined %}
        {{ formmacros.field(form.scanorder.delivery) }}
    {% endif %}
    {% for destination in form.destinations %}
        {{ formmacros.field(destination.location) }}
    {% endfor %}

{% endmacro %}


{% macro message_panel(form, header) %}

    {% import _self as formmacros %}
    {#panel-patient panel-primary#}
    <div  class="panel panel-primary">
        <div class="panel-heading">
            <div class="row">
                <div class="col-xs-12">
                    {#<h4>{{ header }}</h4>#}
                    <h4 class="panel-title">{{ header }}</h4>
                </div>
            </div>
        </div>
        <div class="panel-body collapse in">
            {{ formmacros.message(form) }}
        </div>
    </div>

{% endmacro %}

{#wrapper for message_panel_header#}
{% macro message_panel_header_object(formObject, object, objects, datastructure, type, formtype, uidArr) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% set name = object['object'] %}
    {% set count = object['count'] %}
    {% set uid = uidArr|join('_') %}

    {% set patientCount     = objects[0]['count'] %}
    {% set encounterCount   = objects[1]['count'] %}
    {% set procedureCount   = objects[2]['count'] %}
    {% set accessionCount   = objects[3]['count'] %}
    {% set partCount        = objects[4]['count'] %}
    {% set blockCount       = objects[5]['count'] %}
    {% set slideCount       = objects[6]['count'] %}
    {% set scanCount        = 0 %}
    {% set stainCount       = 0 %}

    {{ formmacros.message_panel_header(
        formObject, name, datastructure, type, formtype, count, uid,
        patientCount, encounterCount, procedureCount, accessionCount, partCount, blockCount, slideCount, scanCount, stainCount)
    }}

{% endmacro %}

{% macro message_panel_header(
    formObject, name, datastructure, type, formtype, count, uid,
    patientCount,
    encounterCount,
    procedureCount,
    accessionCount,
    partCount,
    blockCount,
    slideCount,
    scanCount,
    stainCount
) %}

    {#{% set name = object['object'] %}#}
    {#{% set count = object['count'] %}#}
    {#{% set uid = uidArr|join('_') %}#}

    {#{% set patientCount     = objects[0]['count'] %}#}
    {#{% set encounterCount   = objects[1]['count'] %}#}
    {#{% set procedureCount   = objects[2]['count'] %}#}
    {#{% set accessionCount   = objects[3]['count'] %}#}
    {#{% set partCount        = objects[4]['count'] %}#}
    {#{% set blockCount       = objects[5]['count'] %}#}
    {#{% set slideCount       = objects[6]['count'] %}#}
    {#{% set scanCount        = 0 %}#}
    {#{% set stainCount       = 0 %}#}

    {% if name == 'encounter' and not (datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient"))%}
        {% set title = 'accession' %}
        {% set procedure = formObject.vars.value.procedure|first %}
        {% set formObject = procedure.accession|first %}
        {#{% set toggleName = "form_body_"~name %}#}
    {% else %}
        {% set title = name %}
        {% set formObject = formObject.vars.value %}
        {#{% set toggleName = name %}#}
    {% endif %}

    <div class="panel-heading panel-heading-hierarchy">

        <button
             id="form_body_toggle_{{ name }}_{{ uid }}" type="button"
             class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-open pull-left"
             data-toggle="collapse" data-target="#form_body_{{ name }}_{{ uid }}">
        </button>

        {#onclick="processListButtonClick(this)" glyphicon-list-open#}
        <button
                style="margin-left: 5px;"
                type="button"
                class="btn btn-default btn-xs form_body_content_toggle_btn glyphicon glyphicon-list pull-left"
                aria-expanded="true"
                data-toggle="collapse"
                data-target="#{{ title }}_{{ uid }}">
        </button>

        {#<div class="element-title text-left">{{ title | capitalize }} {{ count+1 }}</div>#}
        <h4 class="panel-title element-title element-title-extended-width">
            <div style="float:left;">
                {{ title | capitalize }} {{ count+1 }}
            </div>
            <div class="element-title-object-name" style="float:left; margin-left:10px;">
                {% set obtainFullObjectName = formObject.obtainFullObjectName %}
                {#{% if obtainFullObjectName %}#}
                    {{ obtainFullObjectName|raw }}
                {#{% endif %}#}
            </div>
        </h4>
        {% set addHeaderBtn = true %}
        {% if name == "scan" or name == "stain" %}
            {% set addHeaderBtn = false %}
        {% endif %}
        {% if name == "patient" and formtype == "Update Patient Data Structure" %}
            {% set addHeaderBtn = false %}
        {% endif %}
        {#don't add add btn for now for all datastructure == "datastructure-patient"; JS will require changes to add separate sections (encounter, procedure, accession)#}
        {% if datastructure == "datastructure-patient" %}
            {% set addHeaderBtn = false %}
        {% endif %}
        {#{% if name != "scan" and name != "stain" %}#}
        {% if addHeaderBtn %}
            {% if type == 'new' or type == 'edit' or (type == 'amend' and formtype != 'One-Slide Scan Order' ) %}

                <div class="form-btn-options">
                    <button id="form_add_btn_{{ name }}_{{ uid }}" type="button"
                            class="btn btn-default btn-xs add_form_btn pull-right"
                            onclick="addSameForm(
                                '{{ name }}',
                                '{{ patientCount }}',
                                '{{ encounterCount }}',
                                '{{ procedureCount }}',
                                '{{ accessionCount }}',
                                '{{ partCount }}',
                                '{{ blockCount }}',
                                '{{ slideCount }}',
                                '{{ scanCount }}',
                                '{{ stainCount }}'
                            )">Add</button>
                    {#<button id="{{ name }}_{{ uid }}" type="button" class="delete_form_btn btn btn-danger btn_margin btn-xs">Delete</button>#}
                    {#<button id="delete_form_btn_{{ name }}_{{ uid }}" type="button" style="margin-right:1%;" class="btn btn-danger btn-xs delete_form_btn pull-right">Delete</button>#}
                </div>

            {% endif %}
        {% endif %}
        <div class="clearfix"></div>

    </div> <!-- panel-heading -->

{% endmacro %}

{#render messages#}
{#show order if order's input.entityName is the same as object#}
{% macro renderMessages( object, datastructure, uid, cycle ) %}

    {% import _self as formmacros %}
    {% import "AppUserdirectoryBundle/Tree/treemacros.html.twig" as treemacros %}

    {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") and object.message is defined %}

        {%  set disabled = "disabled" %}
        {#{%  set disabled = "" %}#}
        {#object.message|length={{ object.message|length }}<br>#}
        {% for message in object.message %}

            {#message: ID={{ message.vars.value.id }}, category={{ message.vars.value.getMessageCategory() }}<br>#}

            {% set currentObjectClassName = object.vars.value.obtainFullClassName %}
            {% set messageClassName = null %}

            {#decide if this object is the same as input object #}
            {%  set showInputMessage = false %}
            {% for input in message.vars.value.inputs %}
                {% set messageInputClassName = input.entityNamespace~"\\"~input.entityName %}
                {#{% set currentObjectClassName = object.vars.value.obtainFullClassName %}#}
                {% set messageClassName = messageInputClassName %}
                {#<br>compare :{{ messageInputClassName }} ?= {{currentObjectClassName }}#}
                {#<br>compare (messageinputid, objectid):{{ input.entityId }} ?= {{object.vars.value.id }}#}

                {% if
                    messageInputClassName == currentObjectClassName
                    and input.entityId == object.vars.value.id
                %}
                    {%  set showInputMessage = true %}
                {% endif %}
            {% endfor %}

            {#<br>showInputMessage:({{ showInputMessage }})<br>#}

            {#decide if this object is the same as output object #}
            {%  set showOutputMessage = false %}

            {#Never show a shadow of a message under the same parent as the message#}
            {% if showInputMessage == false %}
                {% for output in message.vars.value.outputs %}
                    {% set messageOutputClassName = output.entityNamespace~"\\"~output.entityName %}
                    {#{% set currentObjectClassName = object.vars.value.obtainFullClassName %}#}
                    {% set messageClassName = messageOutputClassName %}

                    {#<br>compare :{{ messageOutputClassName }} ?= {{currentObjectClassName }}#}
                    {#<br>compare (messageoutputid, objectid):{{ output.entityId }} ?= {{object.vars.value.id }}#}

                    {% if
                        messageOutputClassName == currentObjectClassName
                        and output.entityId == object.vars.value.id
                    %}
                        {%  set showOutputMessage = true %}
                    {% endif %}
                {% endfor %}
            {% endif %}

            {#<br>showOutputMessage:({{ showOutputMessage }})<br>#}


            {% if message.vars.value.oid %}
                {% set orderId = message.vars.value.oid %}
                {% set orderViewable = true %}
            {% else %}
                {% set orderId = message.vars.value.id %}
                {% set orderViewable = false %}
            {% endif %}

            {% if orderId %}
                {% set orderUniqueId = orderId %}
            {% else %}
                {% set orderUniqueId = message.vars.value.messageCategory.name|replace({" ":"_"}) %}
            {% endif %}

            {% if message.vars.value.messageCategory.name %}
                {% set orderName = message.vars.value.messageCategory.name %}
                {% set orderTitleName = message.vars.value.messageCategory.getTreeName(": ") %}
            {% else %}
                {% set orderName = "Order" %}
                {% set orderTitleName = "Order" %}
            {% endif %}

            {% if orderViewable %}
                {#currentObjectClassName=[{{currentObjectClassName}}]<br>#}
                {#{% if currentObjectClassName == messageClassName and currentObjectClassName == "App\OrderformBundle\Entity\Encounter" %}#}
                {% if currentObjectClassName == "App\\OrderformBundle\\Entity\\Encounter" %}
                    {#calllog_callentry_view!!!#}
                    {% set orderIdHref = '<a href="'~path('calllog_callentry_view',{'messageOid':orderId,'messageVersion':'latest'})~'">'~orderId~'</a>' %}
                {% else %}
                    {#scan_message_show!!!#}
                    {% set orderIdHref = '<a href="'~path('scan_message_show',{'id':orderId})~'">'~orderId~'</a>' %}
                {% endif %}
            {% else %}
                {% set orderIdHref = orderId %}
            {% endif %}


            {% if showInputMessage or showOutputMessage %}

                {#{% if message.vars.value.oid %}#}
                    {#{% set orderId = message.vars.value.oid %}#}
                    {#{% set orderViewable = true %}#}
                {#{% else %}#}
                    {#{% set orderId = message.vars.value.id %}#}
                    {#{% set orderViewable = false %}#}
                {#{% endif %}#}

                {#{% if orderId %}#}
                    {#{% set orderUniqueId = orderId %}#}
                {#{% else %}#}
                    {#{% set orderUniqueId = message.vars.value.messageCategory.name|replace({" ":"_"}) %}#}
                {#{% endif %}#}

                {#{% if message.vars.value.messageCategory.name %}#}
                    {#{% set orderName = message.vars.value.messageCategory.name %}#}
                    {#{% set orderTitleName = message.vars.value.messageCategory.getTreeName(": ") %}#}
                {#{% else %}#}
                    {#{% set orderName = "Order" %}#}
                    {#{% set orderTitleName = "Order" %}#}
                {#{% endif %}#}

                {#{% if orderViewable %}#}
                    {#{% if currentObjectClassName == messageClassName and currentObjectClassName == "App\OrderformBundle\Entity\Encounter" %}#}
                        {#{% set orderIdHref = '<a href="'~path('calllog_callentry_view',{'id':orderId})~'">'~orderId~'</a>' %}#}
                    {#{% else %}#}
                        {#{% set orderIdHref = '<a href="'~path('scan_message_show',{'id':orderId})~'">'~orderId~'</a>' %}#}
                    {#{% endif %}#}
                {#{% else %}#}
                    {#{% set orderIdHref = orderId %}#}
                {#{% endif %}#}


                {% if showInputMessage %}
                    <p>
                    <div class="panel panel-message">

                        <div class="panel-heading panel-heading-message">

                            <button
                                    id="form_body_toggle_message_{{ orderUniqueId }}_{{ uid }}" type="button"
                                    class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                                    data-toggle="collapse" data-target="#form_body_message_{{ orderUniqueId }}_{{ uid }}">
                            </button>

                            <div class="panel-title">{{ orderTitleName }}</div>

                        </div> {#heading#}


                        <div id="form_body_message_{{ orderUniqueId }}_{{ uid }}" class="panel-body collapse">

                            {#make the value of "ID:" into a clickable link to the order.#}
                            {{ formmacros.simplefield( orderName~" ID:", orderIdHref, "", disabled ) }}

                            {#show ALL External IDs: External ID Source System, External ID#}
                            {% if message.externalIds is defined %}
                                {% for externalId in message.externalIds %}
                                    <div class="well well-sm">
                                        {#{{ formmacros.simplefield( "External ID Source System:", externalId.sourceSystem, "input", disabled ) }}#}
                                        {#{{ formmacros.simplefield( "External ID:", externalId.externalId, "input", disabled ) }}#}
                                        {% if externalId.sourceSystem is defined %}
                                            {#Add Tooltips / show "received" timestamp for the source external id field.#}
                                            {#{{ formmacros.field( externalId.sourceSystem ) }}#}
                                            {{ formmacros.field_tooltip( externalId.sourceSystem, externalId.vars.value.receivedOn|date('Y-m-d h:i a') ) }}
                                        {% endif %}
                                        {% if externalId.externalId is defined %}
                                            {{ formmacros.field( externalId.externalId ) }}
                                        {% endif %}
                                    </div>
                                {% endfor %}
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.idnumber is defined %}
                                {{ formmacros.field( message.idnumber ) }}
                                {#{{ formmacros.simplefield( "Identification Number:", message.vars.value.idnumber, "input", disabled ) }}#}
                            {% endif %}

                            {% if message.messageStatus is defined %}
                                {{ formmacros.field( message.messageStatus ) }}
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.orderdate is defined %}
                                {{ formmacros.fieldDateLabel(message.orderdate,'regular-datepicker') }}
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.provider is defined %}
                                {{ formmacros.field_show_user( message, "provider", cycle ) }}
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.proxyuser is defined %}
                                {{ formmacros.field_show_user( message, "proxyuser", cycle ) }}
                            {% endif %}

                            {% if message.orderRecipients is defined %}
                                {{ formmacros.field_show_user( message, "orderRecipients", cycle ) }}
                            {% endif %}

                            {% if message.reportRecipients is defined %}
                                {{ formmacros.field_show_user( message, "reportRecipients", cycle ) }}
                            {% endif %}

                            {% if message.organizationRecipients is defined %}
                                {% for organizationRecipient in message.organizationRecipients %}
                                    <div class="well well-sm">
                                        <h5>{{ form_label(message.organizationRecipients) }}</h5>
                                        {{ treemacros.compositeTreeNode(organizationRecipient.institution,'','') }}
                                    </div>
                                {% endfor %}
                            {% endif %}

                            {#associations and backAssociations: controlled by controller and form#}
                            {% if message.associations is defined %}
                                {{ formmacros.showMessageUrls( message.vars.value.associations, "Association(s):", cycle ) }}
                            {% endif %}
                            {% if message.backAssociations is defined %}
                                {{ formmacros.showMessageUrls( message.vars.value.backAssociations, "Back Association(s):", cycle ) }}
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.inputs is defined %}
                                <p>
                                    {% for input in message.vars.value.inputs %}
                                        {#{{ formmacros.simplefield( "Input:", "ID="~input.entityId~", "~input.entityNamespace~"\\"~input.entityName, "input", disabled ) }}#}
                                        {{ formmacros.simplefield( "Input:", input.getFullName, "input", disabled ) }}
                                    {% endfor %}
                                </p>
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.outputs is defined %}
                                <p>
                                    {% for output in message.vars.value.outputs %}
                                        {#{{ formmacros.simplefield( "Output:", output.entityNamespace~"\\"~output.entityName, "input", disabled ) }}#}
                                        {{ formmacros.simplefield( "Output:", output.getFullName, "input", disabled ) }}
                                    {% endfor %}
                                </p>
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.sources is defined %}
                                <p>
                                    {% for source in message.sources %}
                                        {#{{ formmacros.simplefield( "Source System:", source.system, "input", disabled ) }}#}
                                        {#{{ formmacros.simplefield( "Source Location:", source.location, "input", disabled ) }}#}
                                        {% if source.system is defined %}
                                            {{ formmacros.field( source.system ) }}
                                        {% endif %}
                                        {% if source.location is defined %}
                                            {{ formmacros.field( source.location ) }}
                                        {% endif %}
                                    {% endfor %}
                                </p>
                            {% endif %}

                            {#controlled by controller and form#}
                            {% if message.destinations is defined %}
                                <p>
                                    {% for destination in message.destinations %}
                                        {#{{ formmacros.simplefield( "Destination System:", destination.system, "input", disabled ) }}#}
                                        {#{{ formmacros.simplefield( "Destination Location:", destination.location, "input", disabled ) }}#}
                                        {% if destination.system is defined %}
                                            {{ formmacros.field( destination.system ) }}
                                        {% endif %}
                                        {% if destination.location is defined %}
                                            {{ formmacros.field( destination.location ) }}
                                        {% endif %}
                                    {% endfor %}
                                </p>
                            {% endif %}


                            {#controlled by controller and form#}
                            {% if message.comment is defined %}
                                <p>
                                    {{ formmacros.field( message.comment ) }}
                                </p>
                            {% endif %}


                            {################## specific fields ####################}
                            {% if message.procedureorder is defined and message.procedureorder.vars.value %}
                                <p>
                                    {% if message.procedureorder.type is defined %}
                                        {{ formmacros.field( message.procedureorder.type ) }}
                                    {% endif %}
                                </p>
                            {% endif %}

                            {% if message.laborder is defined and message.laborder.vars.value %}
                                {{ formmacros.labtestObject(message.laborder.labTest,cycle,'user-labtests','noprototype') }}
                            {% endif %}

                            {% if message.report is defined and message.report.vars.value %}
                                <p>

                                    {% if message.report.reportType is defined %}
                                        {{ formmacros.field( message.report.reportType ) }}
                                    {% endif %}

                                    <div class="well well-sm">
                                    {{ formmacros.fieldDateLabel(message.report.signatureDate,'allow-future-date') }}
                                    {{ formmacros.fieldDateLabel(message.report.issuedDate,'allow-future-date') }}
                                    {{ formmacros.fieldDateLabel(message.report.receivedDate,'allow-future-date') }}
                                    </div>

                                    {% if message.report.processedDate is defined or message.report.processedByUser is defined %}
                                        <div class="well well-sm">
                                            {% if message.report.processedDate is defined %}
                                                {{ formmacros.fieldDateLabel(message.report.processedDate,'allow-future-date') }}
                                            {% endif %}
                                            {% if message.report.processedByUser is defined %}
                                                {{ formmacros.field( message.report.processedByUser ) }}
                                            {% endif %}
                                        </div>
                                    {% endif %}

                                </p>
                            {% endif %}

                            {% if message.reportBlock is defined and message.reportBlock.vars.value %}
                                <p>

                                    {% if message.reportBlock.reportType is defined %}
                                        {{ formmacros.field( message.report.reportType ) }}
                                    {% endif %}

                                    <div class="well well-sm">
                                        {{ formmacros.fieldDateLabel(message.reportBlock.signatureDate,'allow-future-date') }}
                                        {{ formmacros.fieldDateLabel(message.reportBlock.issuedDate,'allow-future-date') }}
                                        {{ formmacros.fieldDateLabel(message.reportBlock.receivedDate,'allow-future-date') }}
                                    </div>

                                    <div class="well well-sm">
                                        {{ formmacros.fieldDateLabel(message.reportBlock.processedDate,'allow-future-date') }}
                                        {{ formmacros.field( message.reportBlock.processedByUser ) }}
                                    </div>

                                    <div class="well well-sm">
                                        {{ formmacros.fieldDateLabel(message.reportBlock.embeddedDate,'allow-future-date') }}
                                        {{ formmacros.field( message.reportBlock.embeddedByUser ) }}
                                    </div>

                                </p>
                            {% endif %}

                            {% if message.blockorder is defined and message.blockorder.vars.value %}
                                <p>
                                    <div class="well well-sm">
                                    {{ formmacros.field( message.blockorder.embedderInstruction ) }}
                                    {% if message.blockorder.instruction is defined %}
                                        {{ formmacros.fieldDateLabel(message.blockorder.instruction.createdate,'allow-future-date') }}
                                        {{ formmacros.field( message.blockorder.instruction.creator ) }}
                                        {{ formmacros.field( message.blockorder.instruction.instruction ) }}
                                    {% endif %}
                                    </div>
                                </p>
                            {% endif %}

                            {% if message.slideorder is defined and message.slideorder.vars.value %}
                                <p>
                                    {{ formmacros.field( message.equipment ) }}

                                    <div class="well well-sm">
                                        {{ formmacros.fieldDateLabel(message.slideorder.instruction.createdate,'allow-future-date') }}
                                        {{ formmacros.field( message.slideorder.instruction.creator ) }}
                                        {{ formmacros.field( message.slideorder.instruction.instruction ) }}
                                    </div>

                                </p>
                            {% endif %}

                            {% if message.stainorder is defined and message.stainorder.vars.value %}
                                <p>
                                    {{ formmacros.field( message.equipment ) }}
                                    {#{{ formmacros.field( message.stainorder.imageMagnification ) }}#}

                                    <div class="well well-sm">
                                        {{ formmacros.fieldDateLabel(message.stainorder.instruction.createdate,'allow-future-date') }}
                                        {{ formmacros.field( message.stainorder.instruction.creator ) }}
                                        {{ formmacros.field( message.stainorder.instruction.instruction ) }}
                                    </div>

                                </p>
                            {% endif %}

                            {% if message.imageAnalysisOrder is defined and message.imageAnalysisOrder.vars.value %}
                                {{ formmacros.field( message.imageAnalysisOrder.imageAnalysisAlgorithm ) }}

                                <div class="well well-sm">
                                    {{ formmacros.fieldDateLabel(message.imageAnalysisOrder.instruction.createdate,'allow-future-date') }}
                                    {{ formmacros.field( message.imageAnalysisOrder.instruction.creator ) }}
                                    {{ formmacros.field( message.imageAnalysisOrder.instruction.instruction ) }}
                                </div>

                            {% endif %}


                            {#message's attachmentContainer#}
                            {% if message.attachmentContainer is defined %}
                                {% for documentContainer in message.attachmentContainer.documentContainers %}
                                    {{ formmacros.fieldDocumentContainer(documentContainer,cycle,'stainorder'~orderUniqueId~'_'~uid) }}
                                {% endfor %}
                            {% endif %}


                        </div> {#body#}
                    </div> {#panel#}

                    </p>

                {% endif %} {#input message#}

                {#output message#}
                {% if showOutputMessage %}
                    <p>
                    <div class="panel panel-shadow-message">

                    <div class="panel-heading panel-heading-message">

                        <button
                                id="form_body_toggle_message_{{ orderUniqueId }}_{{ uid }}" type="button"
                                class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                                data-toggle="collapse" data-target="#form_body_message_{{ orderUniqueId }}_{{ uid }}">
                        </button>

                        <div class="panel-title">{{ orderTitleName }}</div>

                    </div> {#heading#}


                    <div id="form_body_shadow_message_{{ orderUniqueId }}_{{ uid }}" class="panel-body collapse">

                        {#make the value of "ID:" into a clickable link to the order.#}
                        {{ formmacros.simplefield( orderName~" ID:", orderIdHref, "", disabled ) }}

                        {#controlled by controller and form#}
                        {% if message.idnumber is defined %}
                            {{ formmacros.field( message.idnumber ) }}
                            {#{{ formmacros.simplefield( "Identification Number:", message.vars.value.idnumber, "input", disabled ) }}#}
                        {% endif %}

                        {% if message.messageStatus is defined %}
                            {{ formmacros.field( message.messageStatus ) }}
                        {% endif %}

                        {#controlled by controller and form#}
                        {% if message.orderdate is defined %}
                            {#{{ formmacros.fieldDateLabel(message.orderdate,'regular-datepicker') }}#}
                            {{ formmacros.simplefield( message.orderdate.vars.label, message.orderdate.vars.value|date('m/d/Y'), "", disabled ) }}
                        {% endif %}

                        {#controlled by controller and form#}
                        {% if message.provider is defined %}
                            {{ formmacros.field_show_user( message, "provider", cycle ) }}
                        {% endif %}

                        {#controlled by controller and form#}
                        {% if message.proxyuser is defined %}
                            {{ formmacros.field_show_user( message, "proxyuser", cycle ) }}
                        {% endif %}

                        {% if message.orderRecipients is defined %}
                            {{ formmacros.field_show_user( message, "orderRecipients", cycle ) }}
                        {% endif %}

                        {% if message.reportRecipients is defined %}
                            {{ formmacros.field_show_user( message, "reportRecipients", cycle ) }}
                        {% endif %}

                        {% if message.organizationRecipients is defined %}
                            {% for organizationRecipient in message.organizationRecipients %}
                                <h5>{{ form_label(message.organizationRecipients) }}</h5>
                                {{ treemacros.compositeTreeNode(organizationRecipient.institution,'','') }}
                            {% endfor %}
                        {% endif %}


                        {#associations and backAssociations: controlled by controller and form#}
                        {% if message.associations is defined %}
                            {{ formmacros.showMessageUrls( message.vars.value.associations, "Association(s):", cycle ) }}
                        {% endif %}
                        {% if message.backAssociations is defined %}
                            {{ formmacros.showMessageUrls( message.vars.value.backAssociations, "Back Association(s):", cycle ) }}
                        {% endif %}

                    </div> {#body#}
                    </div> {#panel#}

                    </p>

                {% endif %} {#output message#}

            {% else %}

                {#mainly used for datastructure-patient#}
                <p>
                    <div class="panel panel-message">

                        <div class="panel-heading panel-heading-message">

                            <button
                                    id="form_body_toggle_shadow_message_{{ orderUniqueId }}_{{ uid }}" type="button"
                                    class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                                    data-toggle="collapse" data-target="#form_body_shadow_message_{{ orderUniqueId }}_{{ uid }}">
                            </button>

                            <div class="panel-title">{{ orderTitleName }}</div>

                        </div> {#heading#}


                        <div id="form_body_shadow_message_{{ orderUniqueId }}_{{ uid }}" class="panel-body collapse">

                            {{ formmacros.simplefield( orderName~" ID:", orderIdHref, "", disabled ) }}

                            {% if message.messageStatus is defined %}
                                {{ formmacros.field( message.messageStatus ) }}
                            {% endif %}

                            {% if message.orderdate is defined %}
                                {{ formmacros.simplefield( message.orderdate.vars.label, message.orderdate.vars.value|date('m/d/Y'), "", disabled ) }}
                            {% endif %}

                            {% if message.provider is defined %}
                                {{ formmacros.field_show_user( message, "provider", cycle ) }}
                            {% endif %}

                        </div> {#body#}
                    </div> {#panel#}
                </p>

            {% endif %}

        {% endfor %}

    {% endif %}

{% endmacro %}

{% macro showMessageUrls(messageValues,label,cycle) %}
    {% import _self as formmacros %}
    {#{{ formmacros.field_notempty( messages, cycle ) }}#}
    {% set messageHrefs = [] %}
    {% for messageValue in messageValues %}
        {% if messageValue.id %}
            {% set messageHref = '<p><a href="'~path('scan_message_show',{'id':messageValue.id})~'">'~messageValue.getFullName()~'</a></p>' %}
        {% else %}
            {% set messageHref = '<p>'~messageValue.getFullName()~'</p>' %}
        {% endif %}
        {% set messageHrefs = messageHrefs|merge([messageHref]) %}
    {% endfor %}

    {% if messageHrefs|length > 0 %}
        {{ formmacros.simplefield( label, messageHrefs|join(""), "", "disabled" ) }}
    {% endif %}
{% endmacro %}


{% macro fieldUserWrapper(userWrappers,cycle) %}
    {% import _self as formmacros %}
    <p>
        {% for userWrapper in userWrappers %}
            {{ formmacros.field( userWrapper.name ) }}
            {{ formmacros.field( userWrapper.user ) }}
        {% endfor %}
    </p>

{% endmacro %}

{#history info#}
{% macro history_info(histories, form) %}

    {% set formstatus = form.vars.value.status.name|lower %}

    <div class="well well-sm">

        {% if histories|first.message.status != "Superseded" %}
            {% if histories|first.message.status == "Amended" %}
                <p>
                    This order has been originally submitted
                    by
                    <a href="{{ path(scan_sitename~'_showuser', { 'id': histories|first.message.provider.id }) }}">{{ histories|first.message.provider }}</a>
                    on {{ histories|first.message.orderdate|date('Y-m-d') }} at {{ histories|first.message.orderdate|date('h:i a') }}
                    and most recently {{ formstatus }} by
                    <a href="{{ path(scan_sitename~'_showuser', { 'id': histories|first.provider.id }) }}">{{ histories|first.provider }}</a>
                    on {{ histories|first.changedate|date('Y-m-d') }} at {{ histories|first.changedate|date('h:i a') }}
                </p>
            {% else %}               
                {% if 'by' in formstatus %}
                    {% set performed = 'performed ' %}
                {% else %}
                    {% set performed = '' %}
                {% endif %}
                <p>
                    This order has been {{ formstatus }} {{performed}}by
                    <a href="{{ path(scan_sitename~'_showuser', { 'id': histories|first.provider.id }) }}">{{ histories|first.provider }}</a>
                    {#on {{ histories|last.message.orderdate|date('Y-m-d') }} at {{ histories|last.message.orderdate|date('h:i a') }}#}
                    on {{ histories|first.changedate|date('Y-m-d') }} at {{ histories|first.changedate|date('h:i a') }}
                </p>
            {% endif %}
        {% endif %}

        {% for history in histories %}

            {% set historytatus = history.currentstatus|lower %}

            {% if history.message.id != history.currentid %}
                {% if history.currentid > history.message.id %}
                    <p class="text-danger">
                        This order is the older archived version of and has been {{ formstatus }} by
                        <a href="{{ path('multy_show',{'id':history.message.id}) }}">Order ID {{ history.message.id }}</a> via amendment
                        on {{ history.changedate|date('Y-m-d') }} at {{ history.changedate|date('h:i a') }} by
                        <a href="{{ path(scan_sitename~'_showuser', { 'id': history.provider.id }) }}">{{ history.provider }}</a>
                        .
                    </p>
                {% else %}
                    {% if historytatus != 'canceled by submitter' and historytatus != 'submitted' %}
                        <p>
                            Older, superseded version of this order:
                            <a href="{{ path('multy_show',{'id':history.message.id}) }}">Order ID {{ history.message.id }}</a>
                            {{ history.currentstatus.name|lower }} on {{ history.changedate|date('Y-m-d') }} at {{ history.changedate|date('h:i a') }} by
                            <a href="{{ path(scan_sitename~'_showuser', { 'id': history.provider.id }) }}">{{ history.provider }}</a>
                        </p>
                    {% endif %}
                {% endif %}
            {% endif %}

        {% endfor %}

    </div>
{% endmacro %}


{#disease type form#}
{% macro diseaseTypeForm( field ) %}
    {% import _self as formmacros %}

    {% if field.diseaseTypes is defined %}
        {{ formmacros.field(field.diseaseTypes) }}
        {#<br>#}
    {% endif %}

    {% if field.diseaseOrigins is defined %}
        <div class="collapse originradio">
            <div class="well" align='center'>
                {{ formmacros.field(field.diseaseOrigins) }}
            </div>
        </div>
    {% endif %}

    <div class="collapse primaryorganradio">
        <div class="well" align='center'>
            {{ formmacros.field(field.primaryOrgan) }}
        </div>
    </div>

{% endmacro %}


{######################  holder for array of fields  #################################}
{% macro inputArrayField(fields,cycle,classname,fieldtype,nobtn,nolabel,withspace,status,showPlus) %}
    {% import _self as formmacros %}
    {% set count = 1 %}

    <p>
    <div class="{{ classname }}">

    {% set fieldsCount = 0 %}

    {% for field in fields|reverse %}
        {% if field.vars.value.status is defined %}
            {%  set fieldstatus = field.vars.value.status %}
        {% else %}
            {%  set fieldstatus = 'valid' %}
        {% endif %}

        {#get correct field: valid for submitter#}
        {% if is_granted('ROLE_SCANORDER_SUBMITTER') and fieldstatus == 'valid' %}
            {%  set show = 1 %}
        {% else %}
            {%  set show = 0 %}
            {#don't show: {{ form_widget(field) }}#}
        {% endif %}

        {#to see all data: ROLE_SCANORDER_DATA_QUALITY_ASSURANCE_SPECIALIST#}
        {% if is_granted('ROLE_SCANORDER_DATA_QUALITY_ASSURANCE_SPECIALIST') and fieldstatus == 'invalid' %}
            {%  set show = 1 %}
        {% endif %}

        {#do not show empty patient clinical history#}
        {% if classname == "patientclinicalhistory" and show == 1 and field.vars.value == "" %}
            {%  set show = 0 %}
        {% endif %}

        {% if show == 1 or
              cycle == "new" or status == 'Amended' or status == 'Canceled by Submitter' or status == 'Canceled by Processor' or status == 'Superseded'
        %}
            {% set btntype = 'plusbtn' %}
            {% if cycle == 'amend' %}
                {% if fields|length == 1 %}
                    {% set btntype = 'plusbtn' %}
                {% else %}
                    {% if count < fields|length %}
                        {% set btntype = 'minusbtn' %}
                    {%  else %}
                        {% set btntype = 'minusplusbtn' %}
                    {% endif %}
                {% endif %}
            {% endif %}

            {% if cycle == 'show' %}
                {% set btntype = 'none' %}
            {% endif %}

            {{ formmacros.inputField(field,cycle,fieldtype,"","",nobtn,nolabel,classname,withspace,btntype,"",showPlus,count) }}

            {% set fieldsCount = fieldsCount + 1 %}
        {% endif %}
        {% set count = count + 1 %}
    {% endfor %}

    {#TESTING + style="color:#fff;"#}
    {% if showPlus is defined and showPlus == 'showPlus' and fieldsCount > 0 %}
        <div class="row field-button">
            <div class="col-xs-6" align="right">
            </div>
            <div class="col-xs-6" align="left">
                {#<button onClick="addPrototypeField(this,'{{ classname }}')"#}
                        {#type="button" class="btn btn-sm delbtnCollField">#}
                    {#<span class="glyphicon glyphicon-plus-sign"></span>#}
                {#</button>#}
                <a href="javascript:;" onClick="addPrototypeField(this,'{{ classname }}')">+</a>
            </div>
        </div>
    {% endif %}
    {#TESTING +#}

    </div>
    </p>
{% endmacro %}

{#input array field with separate label#}
{% macro inputField(field,cycle,fieldtype,prototype,widget,nobtn,nolabel,classname,withspace,btntype,norest,showPlus,count) %}
    {% import _self as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if prototype == "prototype" %}
        {% if field %}
            {% set fieldThis = field.vars.prototype %}
        {% else %}
            {% set fieldThis = field %}
        {% endif %}
    {% else %}
        {% set fieldThis = field %}
    {% endif %}

    {% if fieldtype == "diseaseType" %}

        {{ formmacros.diseaseTypeForm(fieldThis) }}

    {% elseif classname == "patienttrackerspot" %}

        {#{{ formmacros.fieldSpotLocationCollectionInput(fieldThis,cycle,prototype,widget,nobtn,btntype) }}#}
        {#{{ widget }}#}
        {{ formmacros.fieldPatientSpotWidget(fieldThis,cycle,"employees","noprototype",classname,count) }}

    {% elseif classname == "encounterreferringproviders" %}

        {{ formmacros.fieldReferringProvider(fieldThis,cycle,"employees","noprototype",classname,count) }}

    {%  else %}

        {#show provider and status to dataquality specialist#}
        {% set showInfoDate = 0 %}
        {% set showInfoProvider = 0 %}
        {% if field.vars.value.provider is defined %}
            {% if cycle == "show" or cycle == "amend" or (showPlus is defined and showPlus == 'showPlus') %}
                {% if field.vars.value.creationdate != "" and field.vars.value.status != 'valid' %}
                    {% set showInfoDate = 1 %}
                {% endif %}
                {% if field.vars.value.provider is defined and field.vars.value.provider != "" %}
                    {% if field.vars.value.provider.id != app.user.getId() %}
                        {% set showInfoProvider = 1 %}
                    {% endif %}
                    {% if field.vars.value.status != 'valid' or (showPlus is defined and showPlus == 'showPlus') %}
                        {% set showInfoDate = 1 %}
                        {% set showInfoProvider = 1 %}
                    {% endif %}
                {% endif %}
            {% endif %}
        {% endif %}

        {% if withspace is defined and withspace != "" %}
            <div class="row" style="padding-top: 1%;">
        {% else %}
            <div class="row">
        {% endif %}

            {#field label#}
            <div class="col-xs-6" align="right">

                {#{% if showPlus is defined and showPlus == 'showPlus' or prototype == "prototype" %}#}
                    {#<a href="javascript:;" onClick="deletePrototypeField(this,'{{ classname }}')">-</a>#}
                {#{% endif %}#}

                {% if nolabel is defined and nolabel != "" %}
                    {#no label#}
                {% else %}
                    {% if fieldtype == "blockspecialStains" %}
                        {{ formmacros.labelWithInfo(field,fieldThis.staintype,cycle,prototype,showInfoDate,showInfoProvider,showPlus) }}
                        {#<br>#}
                        {{ formmacros.labelWithInfo(field,fieldThis.field,cycle,prototype,showInfoDate,showInfoProvider,showPlus) }}
                    {% elseif fieldtype == "paper" %}
                        {{ formmacros.labelWithInfo(field,fieldThis.documents,cycle,prototype,showInfoDate,showInfoProvider,showPlus) }}
                    {% else %}
                        {% if fieldThis.field is defined %}
                            {{ formmacros.labelWithInfo(field,fieldThis.field,cycle,prototype,showInfoDate,showInfoProvider,showPlus) }}
                        {% endif %}
                    {% endif %}
                {% endif %}

            </div>

            {#field input/value#}
            <div class="col-xs-6" align="left">

                {% if fieldtype == "key" and ( cycle == 'new' or cycle == 'amend' ) %}
                    {% if classname == "patientmrn" %}
                        {{ formmacros.fieldicon(fieldThis.field,fieldThis.keytype,classname) }}
                    {% elseif classname == "encounternumber" %}
                        {#{{ formmacros.fieldicon(fieldThis.field,fieldThis.keytype,classname) }}#}
                        {{ form_widget(fieldThis.keytype) }}
                        {{ form_widget(fieldThis.field) }}
                    {% elseif classname == "accessionaccession" %}
                        {{ formmacros.fieldicon(fieldThis.field,fieldThis.keytype,classname) }}
                    {% else %}
                        {{ formmacros.fieldicon(fieldThis.field,"",classname) }}
                    {% endif %}
                {% elseif fieldtype == "date" %}
                    {{ formmacros.fielddate(fieldThis,'regular-datepicker') }}
                    {#{% if fieldThis.timezone %}#}
                        {#{{ formmacros.field(fieldThis.timezone) }}#}
                    {#{% endif %}#}
                {% elseif fieldtype == "lockdate" %}
                    {{ formmacros.fieldlockdate(fieldThis.field,'regular-datepicker') }}
                {% elseif fieldtype == "paper" %}
                    {{ usermacros.documentsContainer(fieldThis,fieldThis.documents,cycle,prototype,3,'default','Part Document') }}
                {% elseif classname == "patientmrn" %}
                    {{ form_widget(fieldThis.keytype) }}
                    {{ form_widget(fieldThis.field) }}
                {% elseif   classname == "encounterpatfirstname" or
                            classname == "encounterpatmiddlename" or
                            classname == "encounterpatlastname" or
                            classname =="encounterpatsuffix"
                %}
                    {{ formmacros.encounterNameWithAlias(fieldThis) }}
                {% elseif classname == "procedurenumber" %}
                    {{ form_widget(fieldThis.keytype) }}
                    {{ form_widget(fieldThis.field) }}
                    {#{{ formmacros.fieldicon(fieldThis.field,fieldThis.keytype,classname) }}#}
                {% elseif classname == "accessionaccession" %}
                    {{ form_widget(fieldThis.keytype) }}
                    {{ form_widget(fieldThis.field) }}
                {% elseif   fieldtype == "partdiffDisident" or
                            fieldtype == "partdisident" or
                            fieldtype == "sliderelevantScans"
                            and cycle != 'show' %}
                    {{ formmacros.fieldCollectionInput(fieldThis,cycle,prototype,widget,nobtn,btntype) }}
                {% elseif fieldtype == "blockspecialStains" %}
                    {{ formmacros.fieldCollectionInputTextarea(fieldThis,cycle,prototype,widget,nobtn,btntype) }}
                {#{% elseif fieldtype == "encounterpatfirstname" %}#}
                    {#{{ form_widget(fieldThis.firstName) }}#}
                {#{% elseif fieldtype == "encounterpatmiddlename" %}#}
                    {#{{ form_widget(fieldThis.middleName) }}#}
                {% else %}
                    {% if fieldThis.field is defined %}
                        {{ form_widget(fieldThis.field) }}
                    {% endif %}
                {% endif %}

            </div>

        </div>

        {#{{ form_rest(fieldThis) }}#}
        {% if cycle != 'show' %}
            {% if norest is not defined or norest == "" %}
                {% if fieldThis.others is defined and not fieldThis.others.rendered %}
                    {{ form_widget(fieldThis.others) }}
                {% endif %}
                {{ form_rest(fieldThis) }}
            {% endif %}
        {% endif %}

    {% endif %}

{% endmacro %}

{% macro labelWithInfo(fullfield,field,cycle,prototype,showInfoDate,showInfoProvider,showPlus) %}

    {% if prototype == "prototype" %}
        {% set fieldThis = null %}
    {% else %}
        {% set fieldThis = fullfield.vars.value %}
    {% endif %}

    {#{{form_label(field)}}#}
    {% set label = field.vars.label %}
    {% set label = label|replace({":":""}) %}

    {% if fieldThis %}

        {% set creationDate = fieldThis.creationdate|date('Y-m-d')~" at "~fieldThis.creationdate|date('h:i a (T)') %}

        {% set postfixDate = null %}
        {% set postfixProvider = null %}
        {% set invalidStatus = "" %}
        {% set sourceStr = "" %}
        {% set updateStr = "" %}

        {% if showInfoDate == 1 %}
            {% set postfixDate = "Added on "~creationDate %}
        {% endif %}

        {% if fieldThis.status == 'invalid' %}
            {% set invalidStatus = '(invalid) ' %}
        {% endif %}
        {% if fieldThis.status == 'valid' %}
            {% set invalidStatus = '(valid) ' %}
        {% endif %}

        {% if fieldThis.source %}
            {% set sourceStr = " via "~fieldThis.source %}
        {% endif %}

        {% if showInfoProvider == 1 and fullfield.vars.value %}

            {% if fieldThis.updateDate %}
                {% set updateDate = fieldThis.updateDate|date('Y-m-d')~" at "~fieldThis.updateDate|date('h:i a (T)') %}
                {#{% set updateSourceStr = " via "~fieldThis.updateSource %}#}
            {% endif %}
            {% if fieldThis.updateSource %}
                {#{% set updateDate = fieldThis.updateDate|date('Y-m-d')~" at "~fieldThis.updateDate|date('h:i a (T)') %}#}
                {% set updateSourceStr = " via "~fieldThis.updateSource %}
            {% endif %}
            {% if fieldThis.updateAuthor %}
                {% set updateStr = '; Updated by '~fieldThis.updateAuthor.getUserNameStr()~' on '~updateDate~updateSourceStr %}
            {% endif %}


            {% set postfixProvider = '<a target="_blank" href='~path(scan_sitename~'_showuser', { 'id': fieldThis.provider.id })~'>' %}
            {% set postfixProvider = postfixProvider~'<span class="glyphicon glyphicon-question-sign element-with-tooltip-always" aria-hidden="true"' %}
            {% set postfixProvider = postfixProvider~'data-toggle="tooltip"' %}
            {% set postfixProvider = postfixProvider~'title="'~invalidStatus~'Added by '~fieldThis.provider.getUserNameStr()~' on '~creationDate~sourceStr~updateStr~'">' %}
            {% set postfixProvider = postfixProvider~'</span></a>' %}
        {% endif %}

        {% if postfixDate or showInfoProvider %}
            {#{% set label = label|replace({":":""}) %}#}
            {#{% set label = label ~ invalidStatus ~ " " ~ postfixDate ~ postfixProvider ~ ":" %}#}
            {% set label = label ~ postfixProvider %}
        {% endif %}
        {#{{ form_label(field, label|raw) }}#}

    {% endif %}

    {#show status#}
    {% if showPlus is defined and showPlus == 'showPlus' or prototype == "prototype" %}
        {#{% set label = label|replace({":":""}) %}#}
        {% if prototype == "prototype" %}
            {% set fullfieldThis = fullfield.vars.prototype %}
        {% else %}
            {% set fullfieldThis = fullfield %}
        {% endif %}
        {% set fieldStatus = "" %}
        {% if fullfieldThis.others.status is defined and not fullfieldThis.others.status.rendered  %}
            {% set fieldStatus = " " ~ form_widget(fullfieldThis.others.status) %}
        {% endif %}
        {% set label = label ~ fieldStatus %}
        {#{% set label = label ~ ":" %}#}
    {% endif %}
    {#EOF show status#}

    {% set label = label ~ ":" %}

    {#render label#}
    <p>
        <strong>{{ label|raw }}</strong>
    </p>

{% endmacro %}

{#simple field widget. i.e. diffDiagnoses field widget#}
{% macro fieldWidget(field) %}
    {{ form_widget(field.vars.prototype.others) }}
    {{ form_widget(field.vars.prototype.field) }}
{% endmacro %}

{% macro fieldSpecialStainsWidget(field) %}
    {#added others#}
    {{ form_widget(field.vars.prototype.others) }}
    {{ form_widget(field.vars.prototype.staintype) }}
    {{ form_widget(field.vars.prototype.field) }}
{% endmacro %}

{% macro fieldWidgetNoOther(field) %}
    {{ form_widget(field.vars.prototype.field) }}
{% endmacro %}

{#patienttrackerspot#}
{% macro fieldPatientSpotWidget(spot,cycle,sitename,prototype,classname,count) %}

    {% import _self as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if count is not defined %}
        {% set count = 0 %}
    {% else %}
        {% set count = count - 1 %}
    {% endif %}

    {% if spotfield.currentLocation is defined and spotfield.currentLocation.name %}
        {% set locationName = spotfield.currentLocation.name.vars.value %}
    {% else %}
        {% set locationName = "Patient's Location" %}
    {% endif %}

    {% if prototype == "prototype" %}
        {% set spotfield = spot.vars.prototype %}
        {% set count = "__spots__" %}
        {% set locationName = "Patient's Location" %}
    {% else %}
        {% set spotfield = spot %}
    {% endif %}



    {#fieldPatientSpotWidget!!!<br>#}
    {#patient.tracker.spots.currentLocation#}
    {#Location's Name:#}

    <div class="user-collection-holder {{ classname }}">

    <div class="panel panel-default">

        <div class="panel-heading">

            <button
                    id="form_body_toggle_patientcontactinfo_{{ count }}" type="button"
                    class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                    onclick="toggleSinglePanel(this,'#form_body_patientcontactinfo_{{ count }}');">
            </button>

            <h4 class="panel-title">{{ locationName }}</h4>
        </div>

        <div id="form_body_patientcontactinfo_{{ count }}" class="panel-body collapse">
            {#{{ usermacros.locationObject(spot.currentLocation,cycle,'user-locations','noprototype',sitename,entity) }}#}

            {{ formmacros.field(spotfield.currentLocation.name) }}
            {{ formmacros.field(spotfield.currentLocation.locationTypes) }}

            {#{{ formmacros.field(spotfield.currentLocation.phone) }}#}
            {{ usermacros.emailPhoneField(spotfield.currentLocation.phone,cycle,'phone',"") }}
            {{ usermacros.emailPhoneField_notempty(spotfield.currentLocation.pager,cycle,'phone',"") }}
            {{ usermacros.emailPhoneField_notempty(spotfield.currentLocation.mobile,cycle,'phone',"") }}
            {{ formmacros.field_notempty(spotfield.currentLocation.fax,cycle) }}

            {{ usermacros.emailPhoneField_notempty(spotfield.currentLocation.email,cycle,'email',"") }}
            {{ formmacros.field(spotfield.currentLocation.floor) }}
            {{ formmacros.field(spotfield.currentLocation.building) }}

            {{ usermacros.geoLocation(spotfield.currentLocation,cycle,"noprototype") }}

            {% do spotfield.setRendered %}
            {#{% do spotfield.currentLocation.associatedCode.setRendered %}#}
            {#{% do spotfield.currentLocation.associatedPfi.setRendered %}#}

        </div>
    </div>

    </div>

    {#EOF fieldPatientSpotWidget!!!<br>#}

    {#added others#}
    {#{{ form_widget(field.vars.prototype.others) }}#}
    {#{{ usermacros.locationObject(currentLocation,cycle,'user-locations','prototype',sitename,entity) }}#}

{% endmacro %}

{% macro fieldReferringProvider(field,cycle,sitename,prototype,classname,count) %}
    {% import _self as formmacros %}
    {% if prototype == "prototype" %}
        {% set referringProvider = field.vars.prototype %}
    {% else %}
        {% set referringProvider = field %}
    {% endif %}
    <div class="{{ classname }} {{ classname ~ count }}">
        {{ formmacros.field(referringProvider.field) }}
        {{ formmacros.field(referringProvider.referringProviderSpecialty) }}
        {{ formmacros.field(referringProvider.referringProviderPhone) }}
        {{ formmacros.field(referringProvider.referringProviderEmail) }}
        {{ formmacros.field(referringProvider.referringProviderCommunication) }}
    </div>
{% endmacro %}


                {#{% macro fieldProcedurePatnameWidget(field) %}#}
    {#{% import _self as formmacros %}#}
                          {#&#123;&#35; field, cycle, fieldtype,   prototype,   widget, nobtn, nolabel, classname, withspace, btntype, norest       &#35;&#125;#}
    {#{{ formmacros.inputField(field, "new", "",          "prototype", "",     "",    "",      "",        "",        "",      "norest") }}#}
    {#&#123;&#35;{{ formmacros.field(field.vars.prototype.procedurepatnameothers) }}&#35;&#125;#}
    {#{{ formmacros.field(field.vars.prototype.firstName) }}#}
    {#{{ formmacros.field(field.vars.prototype.middleName) }}#}
{#{% endmacro %}#}

{############# custom array fields #############}


{% macro fieldCollectionInput(field, cycle, prototype, widget, nobtn, btntype) %}

    {% if field is defined and field %}
        {{ form_errors(field.field) }}

        {% if btntype is not defined or btntype == "" %}
            {% set btntype = 'plusbtn' %}
        {% endif %}

        {% if nobtn is defined and nobtn == "nobtn" %}
            {{ widget }}
        {% else %}

            <div style="float:left; width:100%">

                {% if cycle == 'show' %}
                    {{ form_widget(field.field) }}
                {% else %}
                    <div class="fieldInputColl">
                        <div class="input-group input-group-reg">
                            {% if widget is not defined or widget == "" %}
                                {{ form_widget(field.field) }}
                            {% else %}
                                {{ widget }}
                            {% endif %}

                            {% if btntype == "minusbtn" %}
                                <span
                                    onClick="delCollectionField(this)"
                                    class="input-group-addon btn delbtnCollField" type="button">
                                    <i class="glyphicon glyphicon-minus-sign"></i>
                                </span>
                            {% endif %}

                            {% if btntype == "minusplusbtn" %}
                                <span
                                    onClick="delCollectionField(this)"
                                    class="input-group-addon btn delbtnCollField" type="button">
                                    <i class="glyphicon glyphicon-minus-sign"></i>
                                </span>
                                <span
                                    onClick="addCollectionField(this)"
                                    class="input-group-addon btn addbtnCollField" type="button">
                                    <i class="glyphicon glyphicon-plus-sign"></i>
                                </span>
                            {% endif %}

                            {% if btntype == "plusbtn" %}
                                <span
                                    onClick="addCollectionField(this)"
                                    class="input-group-addon btn addbtnCollField" type="button">
                                    <i class="glyphicon glyphicon-plus-sign"></i>
                                </span>
                            {% endif %}

                        </div>
                    </div>
                {% endif %}

            </div>

        {% endif %}
    {% endif %}

{% endmacro %}


{% macro fieldCollectionInputTextarea(field, cycle, prototype, widget, nobtn, btntype) %}

    {{ form_errors(field.field) }}

    {% if btntype is not defined or btntype == "" %}
        {% set btntype = 'plusbtn' %}
    {% endif %}

    {% if nobtn is defined and nobtn == "nobtn" %}

        {{ form_widget(field.staintype) }}
        {{ form_widget(field.field) }}

    {% else %}

        <div style="float:left; width:100%">
            <div class="fieldInputColl">
                <div class="input-group-oleg">

                    {% if widget is not defined or widget == "" %}
                        {{ form_widget(field.staintype) }}
                        {{ form_widget(field.field) }}
                    {% else %}
                        {{ widget }}
                    {% endif %}

                    {% if btntype == 'minusplusbtn' %}
                        <div class="addDelBtnColl" style="width:100%;">
                            <button onClick="delCollectionField(this,'bottom')" type="button" class="btn btn-sm delbtnCollField"><span class="glyphicon glyphicon-minus-sign"></span></button>
                            <button onClick="addCollectionField(this,'bottom')" type="button" class="btn btn-sm addbtnCollField"><span class="glyphicon glyphicon-plus-sign"></span></button>
                        </div>
                    {% endif %}

                    {% if btntype == "plusbtn" %}
                        <div class="addDelBtnColl" style="width:100%; float:left;">
                            <button onClick="addCollectionField(this,'bottom')" type="button" class="btn btn-sm addbtnCollField"><span class="glyphicon glyphicon-plus-sign"></span></button>
                        </div>
                    {% endif %}

                    {% if btntype == 'minusbtn' %}
                        <div class="addDelBtnColl" style="width:100%;">
                            <button onClick="delCollectionField(this,'bottom')" type="button" class="btn btn-sm delbtnCollField"><span class="glyphicon glyphicon-minus-sign"></span></button>
                        </div>
                    {% endif %}

                </div>
            </div>
        </div>

    {% endif %}

{% endmacro %}

{% macro encounterNameWithAlias(field) %}
    {% import _self as formmacros %}
    {% if field.alias is defined %}
        {{ form_errors(field) }}
        {{ form_widget(field.others) }}

        <div class="form-group oleg-form-nomargin-bottom">
            <div class="input-group">
                {{ form_widget(field.field) }}
                {#<span class="input-group-addon">{{ form_widget(field.alias) }} {{ form_label(field.alias) }}</span>#}
                {#{% if field.alias is defined %}#}
                    <span class="input-group-addon">
                        {{ form_widget(field.alias) }}
                        {{ form_label(field.alias, null, { 'label_attr': {'style': 'margin:0;'} }) }}
                    </span>
                {#{% endif %}#}
            </div>
        </div>
    {% else %}
        {{ form_errors(field) }}
        {{ form_widget(field.others) }}
        {{ form_widget(field.field) }}
        {#{{ formmacros.field(field) }}#}
    {% endif %}
{% endmacro %}

{#{% macro dataQualityWidgetExisting( field, cycle ) %}#}
    {#{% import _self as formmacros %}#}
    {#&#123;&#35;{% form_theme field 'AppOrderformBundle/Default/dataquality_widget.html.twig' %}&#35;&#125;#}

    {#<div class="validationerror-added alert alert-danger">#}
        {#{{ form_errors(field) }}#}
        {#&#123;&#35;{{ form_label(field.description) }}&#35;&#125;#}
        {#<br>#}
        {#Conflict Resolved by Replacement:#}
        {#<br>#}
        {#<b>{{ field.vars.value.accession }}</b> => <b>{{ field.vars.value.newaccession }}</b>#}
        {#<br>#}
        {#&#123;&#35;{{ form_rest(field) }}&#35;&#125;#}
    {#</div>#}
{#{% endmacro %}#}
{% macro dataQualityWidgetNotMapped( field ) %}

    {% import _self as formmacros %}
    {% form_theme field 'AppOrderformBundle/Default/dataquality_widget.html.twig' %}

    <div class="validationerror-added alert alert-danger" style="height: 210px;">
    {#<div class="validationerror-added alert alert-danger">#}

        {{ form_errors(field) }}

        {{ form_label(field.btnoption) }}
        {{ form_widget(field.btnoption) }}

        {{ form_widget(field.description) }}
        {{ form_widget(field.accession) }}
        {{ form_widget(field.accessiontype) }}
        {{ form_widget(field.mrn) }}
        {{ form_widget(field.mrntype) }}

        {#{{ form_rest(field) }}#}
    </div>

{% endmacro %}

{% macro fieldDeceased(field,cycle) %}
    {% import _self as formmacros %}
    {% if field.vars.value.status == 'valid' %}
        {{ form_errors(field) }}

        {% if not field.others.rendered %}
            {{ form_widget(field.others) }}
        {% endif %}

        {{ formmacros.field(field.deceased) }}
        {{ formmacros.fieldDateLabel(field.deathdate,'regular-datepicker') }}
        {{ formmacros.field(field.deathtime) }}
    {% endif %}
{% endmacro %}

{% macro fieldGeneralOrder(order,cycle) %}
    {% import _self as formmacros %}
    {#{% if order.vars.value and order.vars.value.status == 'valid' %}#}
        {{ form_errors(order) }}
        {% if order.others is defined and not order.others.rendered %}
            {{ form_widget(order.others) }}
        {% endif %}
        {% if order.source is defined %}
            {{ formmacros.field(order.source) }}
        {% endif %}
        {% if order.field is defined %}
            {{ formmacros.field(order.field.type) }}
        {   { formmacros.field(order.field.ordernumber) }}
        {% endif %}
    {#{% endif %}#}
{% endmacro %}

{% macro fieldInpatientinfo(field,cycle) %}
    {% import _self as formmacros %}
    {% if field.vars.value.status == 'valid' %}
        {{ form_errors(field) }}

        {% if not field.others.rendered %}
            {{ form_widget(field.others) }}
        {% endif %}

        {{ formmacros.field(field.source) }}
        {{ formmacros.fieldDateLabel(field.admissiondate,'regular-datepicker') }}
        {{ formmacros.field(field.admissiontime) }}
        {{ formmacros.field(field.admissiondiagnosis) }}
        {{ formmacros.fieldDateLabel(field.dischargedate,'regular-datepicker') }}
        {{ formmacros.field(field.dischargetime) }}
        {{ formmacros.field(field.dischargediagnosis) }}
    {% endif %}
{% endmacro %}


{% macro fieldDocumentContainer(container,cycle,prefix,renderType,documentspercontainer,dropzoneInit) %}
    {% import _self as formmacros %}

    {% if renderType is defined and renderType == "panel" %}
        <div class="panel panel-default">

            <div class="panel-heading">

                {% if container.vars.value and container.vars.value.id %}
                    {% set uniqueId = container.vars.value.id %}
                {% else %}
                    {% set uniqueId = 0 %}
                {% endif %}

                <button
                        id="form_body_toggle_{{ prefix }}_documentContainer_{{ uniqueId }}" type="button"
                        class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-open pull-left"
                        data-toggle="collapse" data-target="#form_body_{{ prefix }}_documentContainer_{{ uniqueId }}">
                </button>

                <h4 class="panel-title">Document(s)</h4>
            </div>

            <div id="form_body_{{ prefix }}_documentContainer_{{ uniqueId }}" class="panel-body collapse in">
                {{ formmacros.fieldDocumentContainerPlain(container,cycle,documentspercontainer,dropzoneInit) }}
            </div>
        </div>
    {% elseif renderType is defined and renderType == "plain" %}
        <div>
            {{ formmacros.fieldDocumentContainerPlain(container,cycle,documentspercontainer,dropzoneInit) }}
        </div>
    {% else %}
        <div class="well well-sm">
            {{ formmacros.fieldDocumentContainerPlain(container,cycle,documentspercontainer,dropzoneInit) }}
        </div>
    {% endif %}

{% endmacro %}
{% macro fieldDocumentContainerPlain(container,cycle,documentspercontainer,dropzoneInit) %}
    {% import _self as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {{ form_errors(container) }}

    {#hidden id: used as a reference to get objects count#}
    {{ form_widget(container.id) }}

    {% if container.imageId is defined %}
        {{ formmacros.field(container.imageId) }}
    {% endif %}

    {% if container.source is defined %}
        {{ formmacros.field(container.source) }}
    {% endif %}

    {% if container.title is defined %}
        {{ formmacros.field(container.title) }}
    {% endif %}

    {% if container.links is defined %}
        {% for link in container.links %}
            {{ formmacros.field(link.linktype) }}
            {% if showFlag and link.vars.value.link %}
                {{ usermacros.htmlLink(link.link.vars.value,link.link.vars.label) }}
            {% else %}
                {{ formmacros.field(link.link) }}
            {% endif %}
        {% endfor %}
    {% endif %}

    {#documents/images in container#}
    <p>
    <div class="documentcontainer">

        <div class="row">
            <div class="col-xs-6" align="right">
                {{form_label(container.documents)}}
            </div>
            <div class="col-xs-6" align="left">
                {{ usermacros.documentsContainer(container,container.documents,cycle,'prototype',documentspercontainer,dropzoneInit) }}
            </div>
        </div>

    </div>
    </p>

    {#comments#}
    {% if container.comments is defined %}
        {% if container.comments|length > 0 %}
            {% endif %}
            {% for comment in container.comments %}
                {{ formmacros.field(comment.comment) }}
            {% endfor %}
            {% if container.comments|length > 0 %}
        {% endif %}
    {% endif %}

    {% if container.device is defined %}
        {{ formmacros.field(container.device) }}
    {% endif %}

    {% if container.datetime is defined %}
        {{ formmacros.fieldDateLabel(container.datetime,'regular-datepicker') }}
    {% endif %}

    {% if container.time is defined %}
        {{ formmacros.field(container.time) }}
    {% endif %}

    {% if container.provider is defined %}
        {#{{ formmacros.field(container.provider) }}#}
        {{ formmacros.field_show_user( container, "provider", cycle ) }}
    {% endif %}

{% endmacro %}


{% macro fieldOutsidereport(field,cycle) %}
    {% import _self as formmacros %}
    {% if field.vars.value.status == 'valid' %}
        {{ form_errors(field) }}

        {% if not field.others.rendered %}
            {{ form_widget(field.others) }}
        {% endif %}

        {% if field.outsidereport.order is defined %}
            {{ formmacros.fieldGeneralOrder(field.outsidereport.order,cycle) }}
        {% endif %}

        {{ formmacros.field(field.outsidereport.source) }}
        {{ formmacros.field(field.outsidereport.outsideReportType) }}
        {{ formmacros.field(field.reportType.outsideReportText) }}

        {#Outside Report Reference Representation (PDF)#}
        {#Outside Report Pathologist(s)#}

        {{ formmacros.fieldDateLabel(field.outsidereport.issuedonDate,'regular-datepicker') }}
        {{ formmacros.field(field.outsidereport.issuedonTime) }}

        {#Progress & Comments#}

        {{ formmacros.field(field.outsidereport.location) }}

    {% endif %}
{% endmacro %}


{############################ Objects ###########################}

{% macro patientForm( patient, flag, uid, cycle, status, showPlus, formtype, mrnHtml, dobHtml, clinicalhistoryHtml, spotHtml ) %}
    {% import _self as formmacros %}

    {% if cycle != 'show' %}
        {% set key = "key" %}
    {% else %}
        {% set key = "" %}
    {% endif %}

    {#{{ formmacros.testSpotShow(patient) }}#}

    {#messages#}
    {{ formmacros.renderMessages(patient,flag,uid,cycle) }}

    <div id="patient_{{ uid }}" class="form-element-holder collapse in">

        {% if mrnHtml is not defined or mrnHtml == "" %}
            {{ formmacros.inputArrayField(patient.mrn,cycle,"patientmrn",key,"","","",status) }}
        {% else  %}
            <p><div class="patientmrn">{{ mrnHtml }}</div></p>
        {% endif %}

        <div class="patientname">
            {% if patient.vars.value != NULL %}
                {% set patientFullName = patient.vars.value.getFullPatientName %}
            {% else %}
                {% set patientFullName = "" %}
            {% endif %}
            {% set patientNameTooltip = "" %}
            {% if cycle != 'show' %}
                {% set patientNameTooltip = "To change the current valid name, please edit the last name, first name, middle name, and/or suffix values for the most recent encounter." %}
            {% endif %}
            {{ formmacros.simplefield( "Name:", patientFullName, "", "disabled", patientNameTooltip ) }}
        </div>

        <div class="patientsex">
            {% if patient.vars.value != NULL %}
                {% set patientSex = patient.vars.value.obtainValidField('sex') %}
            {% else %}
                {% set patientSex = "" %}
            {% endif %}
            {% set patientGenderTooltip = "" %}
            {% if cycle != 'show' %}
                {% set patientGenderTooltip = "To change the gender, please edit the gender value for the most recent encounter." %}
            {% endif %}
            {{ formmacros.simplefield( "Gender:", patientSex, "", "disabled", patientGenderTooltip ) }}
        </div>

        {% if flag and (flag == "datastructure" or flag == "datastructure-patient") %}
            {% if patient.lifeForm is defined %}
                {{ formmacros.field(patient.lifeForm) }}
            {% endif %}
        {% endif %}

        {% if dobHtml is not defined or dobHtml == "" %}
            {{ formmacros.inputArrayField(patient.dob,cycle,"patientdob","date","","","",status,showPlus) }}
        {% else  %}
            <p><div class="patientdob">{{ dobHtml }}</div></p>
        {% endif %}


        <div class="patientage">
            {% if patient.vars.value != NULL %}
                {% set patientAge = patient.vars.value.calculateAge %}
            {% else %}
                {% set patientAge = "" %}
            {% endif %}
            {% set patientAgeTooltip = "" %}
            {% if cycle != 'show' %}
                {% set patientAgeTooltip = "To change the current calculated age, please edit the Date of Birth (DOB) value." %}
            {% endif %}
            {{ formmacros.simplefield( "Age:", patientAge, "", "disabled", patientAgeTooltip ) }}
        </div>

        {% if flag and (flag == "datastructure" or flag == "datastructure-patient") %}
            {% if patient.patientRecordStatus is defined %}
                {{ formmacros.field(patient.patientRecordStatus) }}
            {% endif %}
        {% endif %}

        {% if clinicalhistoryHtml is not defined or clinicalhistoryHtml == "" %}
            {{ formmacros.inputArrayField(patient.clinicalHistory,cycle,"patientclinicalhistory","","","","",status) }}
        {% else  %}
            <p><div class="patientclinicalhistory">{{ clinicalhistoryHtml }}</div></p>
        {% endif %}

        {% if formtype == "Update Patient Data Structure" %}
            {% if spotHtml is not defined or spotHtml == "" %}
                {% if patient.tracker is defined %}
                    {{ formmacros.inputArrayField(patient.tracker.spots,cycle,"patienttrackerspot","","","","",status,showPlus) }}
                {% endif %}
            {% else  %}
                <p><div class="patienttrackerspot">{{ spotHtml }}</div></p>
            {% endif %}
        {% endif %}

        {{ formmacros.patientExtraForm(patient,flag,uid,cycle,status,showPlus) }}

    </div>


{% endmacro %}

{#used for datastructure#}
{% macro encounterForm( encounter, flag, uid, cycle, status, showPlus ) %}
    {% import _self as formmacros %}

    {% if cycle != 'show' %}
        {% set key = "key" %}
    {% else %}
        {% set key = "" %}
    {% endif %}

    {#messages#}
    {{ formmacros.renderMessages(encounter,flag,uid,cycle) }}

    <div id="encounter_{{ uid }}" class="form-element-holder collapse in">

        {{ formmacros.encounterExtraForm(encounter,flag,uid,cycle,status,showPlus) }}

        {#{{ formmacros.inputArrayField(encounter.number,cycle,"encounternumber",key,"","","",status) }}#}
        {#{{ formmacros.inputArrayField(encounter.date,cycle,"encounterdate","date","","","",status) }}#}

        {{ formmacros.inputArrayField(encounter.patlastname,cycle,"encounterpatlastname","","","","",status,showPlus) }}
        {{ formmacros.inputArrayField(encounter.patfirstname,cycle,"encounterpatfirstname","","","","",status,showPlus) }}
        {{ formmacros.inputArrayField(encounter.patmiddlename,cycle,"encounterpatmiddlename","","","","",status,showPlus) }}

        {{ formmacros.inputArrayField(encounter.patsuffix,cycle,"encounterpatsuffix","","","","",status,showPlus) }}
        {{ formmacros.inputArrayField(encounter.patsex,cycle,"encounterpatsex","","","","",status,showPlus) }}
        {{ formmacros.inputArrayField(encounter.patage,cycle,"encounterpatage","","","","",status,showPlus) }}
        {{ formmacros.inputArrayField(encounter.pathistory,cycle,"encounterpathistory","","","","",status,showPlus) }}

    </div>

{% endmacro %}


{% macro procedureForm( procedure, flag, uid, cycle, status, showPlus ) %}
    {% import _self as formmacros %}

    {% if cycle != 'show' %}
        {% set key = "key" %}
    {% else %}
        {% set key = "" %}
    {% endif %}

    {#messages#}
    {{ formmacros.renderMessages(procedure,flag,uid,cycle) }}

    <div id="procedure_{{ uid }}" class="form-element-holder collapse in">

        {#{{ formmacros.inputArrayField(procedure.number,cycle,"procedurenumber",key,"","","",status) }}#}

        {{ formmacros.procedureExtraForm(procedure,flag,uid,cycle,status,showPlus) }}

        {#{{ formmacros.inputArrayField(procedure.name,cycle,"procedurename","","","","",status) }}#}

    </div>

{% endmacro %}


{% macro accessionForm( encounter, procedure, accession, flag, uid, cycle, status, showPlus,
                        procedurenameHtml,
                        accessionHtml,
                        accessiondateHtml,
                        encounterdateHtml,
                        patsuffixHtml,
                        patlastnameHtml,
                        patfirstnameHtml,
                        patmiddlenameHtml,
                        patageHtml,
                        patsexHtml,
                        patpathistoryHtml
) %}

    {% import _self as formmacros %}

    {% if cycle != 'show' %}
        {% set key = "key" %}
    {% else %}
        {% set key = "" %}
    {% endif %}

    {#messages#}
    {{ formmacros.renderMessages(accession,flag,uid,cycle) }}

    <div id="accession_{{ uid }}" class="form-element-holder collapse in">
        {% if accession and (accessionHtml is not defined or accessionHtml == "") %}
            {{ formmacros.inputArrayField(accession.accession,cycle,"accessionaccession",key,"","","",status) }}
        {% else  %}
            <p><div class="accessionaccession">{{ accessionHtml }}</div></p>
        {% endif %}

        {% if accession and (accessiondateHtml is not defined or accessiondateHtml == "") %}
            {{ formmacros.inputArrayField(accession.accessionDate,cycle,"accessionaccessiondate","date","","","",status,showPlus) }}
        {% else  %}
            <p><div class="accessionaccessiondate">{{ accessiondateHtml }}</div></p>
        {% endif %}


        {% if not (flag and (flag == "datastructure" or flag == "datastructure-patient")) %}

            {#{{ formmacros.field(procedure.name) }}#}
            {% if procedure and (procedurenameHtml is not defined or procedurenameHtml == "") %}
                {{ formmacros.inputArrayField(procedure.name,cycle,"procedurename","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="procedurename">{{ procedurenameHtml }}</div></p>
            {% endif %}


            {#patient's data: single simple fields#}
            {% if encounterdateHtml is not defined or encounterdateHtml == "" %}
                {{ formmacros.inputArrayField(encounter.date,cycle,"encounterdate","date","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterdate">{{ encounterdateHtml }}</div></p>
            {% endif %}

            {% if patlastnameHtml is not defined or patlastnameHtml == "" %}
                {{ formmacros.inputArrayField(encounter.patlastname,cycle,"encounterpatlastname","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterpatlastname">{{ patlastnameHtml }}</div></p>
            {% endif %}

            {% if patfirstnameHtml is not defined or patfirstnameHtml == "" %}
                {{ formmacros.inputArrayField(encounter.patfirstname,cycle,"encounterpatfirstname","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterpatfirstname">{{ patfirstnameHtml }}</div></p>
            {% endif %}

            {% if patmiddlenameHtml is not defined or patmiddlenameHtml == "" %}
                {{ formmacros.inputArrayField(encounter.patmiddlename,cycle,"encounterpatmiddlename","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterpatmiddlename">{{ patmiddlenameHtml }}</div></p>
            {% endif %}


            {% if patsuffixHtml is not defined or patsuffixHtml == "" %}
                {{ formmacros.inputArrayField(encounter.patsuffix,cycle,"encounterpatsuffix","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterpatsuffix">{{ patsuffixHtml }}</div></p>
            {% endif %}

            {#{{ formmacros.field(encounter.patsex) }}#}
            {% if patsexHtml is not defined or patsexHtml == "" %}
                {{ formmacros.inputArrayField(encounter.patsex,cycle,"encounterpatsex","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterpatsex">{{ patsexHtml }}</div></p>
            {% endif %}

            {#{{ formmacros.field(encounter.patage) }}#}
            {% if patageHtml is not defined or patageHtml == "" %}
                {{ formmacros.inputArrayField(encounter.patage,cycle,"encounterpatage","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterpatage">{{ patageHtml }}</div></p>
            {% endif %}

            {#{{ formmacros.field(encounter.pathistory) }}#}
            {% if patpathistoryHtml is not defined or patpathistoryHtml == "" %}
                {{ formmacros.inputArrayField(encounter.pathistory,cycle,"encounterpathistory","","","","",status,showPlus) }}
            {% else  %}
                <p><div class="encounterpathistory">{{ patpathistoryHtml }}</div></p>
            {% endif %}

        {% endif %}

        {{ formmacros.accessionExtraForm(accession,flag,uid,cycle,status) }}

    </div>
{% endmacro %}

{% macro partForm( part, flag, uid, cycle, status, showPlus, partnameHtml,sourceorganHtml,parttitleHtml,paperHtml,descriptionHtml,diagnosisHtml,diffDiagnosesHtml,diseaseTypeHtml ) %}

    {% import _self as formmacros %}

    {% if cycle != 'show' %}
        {% set key = "key" %}
    {% else %}
        {% set key = "" %}
    {% endif %}

    {#messages#}
    {{ formmacros.renderMessages(part,flag,uid,cycle) }}

    <div id="part_{{ uid }}" class="form-element-holder scan-partpaper collapse in">

        {% if part and (partnameHtml is not defined or partnameHtml == "") %}
            {{ formmacros.inputArrayField(part.partname,cycle,"partpartname",key,"","","",status) }}
        {% else  %}
            <p><div class="partpartname">{{ partnameHtml }}</div></p>
        {% endif %}

        {% if part and (sourceorganHtml is not defined or sourceorganHtml == "") %}
            {{ formmacros.inputArrayField(part.sourceOrgan,cycle,"partsourceorgan","","","","",status) }}
        {% else  %}
            <p><div class="partsourceorgan">{{ sourceorganHtml }}</div></p>
        {% endif %}

        {% if part and (parttitleHtml is not defined or parttitleHtml == "") %}
            {{ formmacros.inputArrayField(part.parttitle,cycle,"partparttitle","","","","",status) }}
        {% else  %}
            <p><div class="partparttitle">{{ parttitleHtml }}</div></p>
        {% endif %}

        {% if part and (paperHtml is not defined or paperHtml == "") %}
            {{ formmacros.inputArrayField(part.paper,cycle,"partpaper","paper","","","",status) }}
        {% else %}
            <p><div class="partpaper">{{ paperHtml }}</div></p>
        {% endif %}

        {% if part and (descriptionHtml is not defined or descriptionHtml == "") %}
            {{ formmacros.inputArrayField(part.description,cycle,"partdescription","","","","",status) }}
        {% else  %}
            <p><div class="partdescription">{{ descriptionHtml }}</div></p>
        {% endif %}

        {% if part and (diagnosisHtml is not defined or diagnosisHtml == "") %}
            {{ formmacros.inputArrayField(part.disident,cycle,"partdisident","","","","",status) }}
        {% else  %}
            <p><div class="partdisident">{{ diagnosisHtml }}</div></p>
        {% endif %}

        {% if part and (diffDiagnosesHtml is not defined or diffDiagnosesHtml == "") %}
            {{ formmacros.inputArrayField(part.diffDisident,cycle,"partdiffdisident","partdiffDisident","","","",status) }}
        {% else  %}
           <p><div class="partdiffdisident">{{ diffDiagnosesHtml }}</div></p>
        {% endif %}

        {% if part and (diseaseTypeHtml is not defined or diseaseTypeHtml == "") %}
            {% if part.diseaseType is defined %}
                {{ formmacros.inputArrayField(part.diseaseType,cycle,"partdiseasetype","diseaseType","","","",status) }}
            {% endif %}
        {% else  %}
            <p><div class="partdiseasetype">{{ diseaseTypeHtml }}</div></p>
            {#{{ formmacros.inputArrayField(part.diseaseType,cycle,"partdiseasetype","diseaseType") }}#}
        {% endif %}

        {{ formmacros.partExtraForm(part,flag,uid,cycle,status) }}

    </div>

{% endmacro %}



{% macro blockForm( block, flag, uid, cycle, status, showPlus, blocknameHtml, sectionsourceHtml, specialStainsHtml ) %}
    {% import _self as formmacros %}

    {% if cycle != 'show' %}
        {% set key = "key" %}
    {% else %}
        {% set key = "" %}
    {% endif %}

    {#messages#}
    {{ formmacros.renderMessages(block,flag,uid,cycle) }}

    <div id="block_{{ uid }}" class="form-element-holder collapse in">

        {% if block and (blocknameHtml is not defined or blocknameHtml == "") %}
            {{ formmacros.inputArrayField(block.blockname,cycle,"blockblockname",key,"","","",status) }}
        {% else  %}
            <p><div class="blockblockname">{{ blocknameHtml }}</div></p>
        {% endif %}

        {% if block and (sectionsourceHtml is not defined or sectionsourceHtml == "") %}
            {{ formmacros.inputArrayField(block.sectionsource,cycle,"blocksectionsource","blocksectionsource","","","",status) }}
        {% else  %}
            <p><div class="blocksectionsource">{{ sectionsourceHtml }}</div></p>
        {% endif %}

        {% if block and (specialStainsHtml is not defined or specialStainsHtml == "") %}
            {#                              fields,             cycle,classname,            fieldtype,          nobtn,      nolabel,withspace,status#}
            {{ formmacros.inputArrayField(block.specialStains,cycle,"blockspecialstains","blockspecialStains","","","",status) }}
        {% else  %}
            <p><div class="blockspecialstains">{{ specialStainsHtml }}</div></p>
        {% endif %}

        {{ formmacros.blockExtraForm(block,flag,uid,cycle,status) }}

    </div>

{% endmacro %}




{% macro slideForm( slide, flag, uid, cycle, slidetypeHtml, stainHtml, scanHtml, scanregionHtml, noteHtml, microscopicdescrHtml, relevantScansHtml ) %}
    {% import _self as formmacros %}

    {% if slide is defined and slide %}

    {#messages#}
    {{ formmacros.renderMessages(slide,flag,uid,cycle) }}

    <div id="slide_{{ uid }}" class="slide-form-element-holder form-element-holder collapse in">

        {% if slide.title is defined %}
            {{ formmacros.field(slide.title) }}
        {% endif %}

        <p><div class="slideslidetype">     
        {% if slide.slidetype is defined and (slidetypeHtml is not defined or slidetypeHtml == "") %}
            {{ formmacros.field(slide.slidetype) }}
        {% else  %}
            {{ slidetypeHtml }}
        {% endif %}
        </div></p>

        {% if stainHtml is not defined or stainHtml == "" %}    {#regular#}

            {% if slide.stain is defined %}
                {% for stain in slide.stain %}
                    {{ formmacros.field(stain.field) }}
                {% endfor %}
            {% endif %}

            {% if not (flag and flag == "datastructure") %}
                {{ formmacros.scanForm(slide,flag,uid,cycle) }}
            {% endif %}

        {% else  %} {#prototype#}
            <p><div class="slidestain">{{ stainHtml }}</div></p>
            {% if scanHtml is defined %}
                <p><div class="slidescan">{{ scanHtml }}</div></p>
            {% endif %}
            {% if scanregionHtml is defined %}
                <p><div class="slidescanregion">{{ scanregionHtml }}</div></p>
            {% endif %}
            {% if noteHtml is defined %}
                <p><div class="slidenote">{{ noteHtml }}</div></p>
            {% endif %}
        {% endif %}

        {% if microscopicdescrHtml is not defined or microscopicdescrHtml == "" %}
            {% if slide.microscopicdescr is defined %}
                {{ formmacros.field(slide.microscopicdescr) }}
            {% endif %}
        {% else  %}
            <p><div class="slidemicroscopicdescr">{{ microscopicdescrHtml }}</div></p>
        {% endif %}

        {% if relevantScansHtml is not defined or relevantScansHtml == "" %}
            {% if slide.relevantScans is defined %}
                {{ formmacros.inputArrayField(slide.relevantScans,cycle,"sliderelevantscans","sliderelevantScans") }}
            {% endif %}
        {% else  %}
            <p><div class="sliderelevantscans">{{ relevantScansHtml }}</div></p>
        {% endif %}

    </div>

    {% if flag and flag == "datastructure" %}
        {{ formmacros.scanForm(slide,flag,uid,cycle) }}
    {% endif %}

    {% endif %}

{% endmacro %}

{#used by datastructure#}
{% macro scanForm(slide,flag,uid,cycle) %}

    {% import _self as formmacros %}

    {% set scanCount = 0 %}
    {% if slide.scan is defined %}
    {% for scan in slide.scan %}

        <p>
        {% if flag and flag == "datastructure" %}
            <div class="panel panel-imaging">

                {#panel-heading-min-height panel-heading-hierarchy#}
                <div class="panel-heading panel-heading-hierarchy">

                    {% if scan.vars.value.id %}
                        {% set orderUniqueId = scan.vars.value.id %}
                    {% else %}
                        {% set orderUniqueId = scanCount %}
                    {% endif %}

                    {#<button#}
                        {#id="form_body_toggle_imaging_{{ orderUniqueId }}_{{ uid }}" type="button"#}
                        {#class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-open pull-left"#}
                        {#data-toggle="collapse" data-target="#imaging_content_{{ orderUniqueId }}_{{ uid }}">#}
                    {#</button>#}

                    <button
                            style="margin-left: 5px;"
                            type="button"
                            class="btn btn-default btn-xs form_body_content_toggle_btn glyphicon glyphicon-list pull-left"
                            aria-expanded="true"
                            data-toggle="collapse"
                            data-target="#form_body_imaging_{{ orderUniqueId }}_{{ uid }}">
                    </button>

                    {#<h4 class="panel-title">Imaging</h4>#}
                    <h4 class="panel-title element-title element-title-extended-width">
                        <div style="float:left;">
                            Imaging
                        </div>
                        <div id="imaging_content_{{ orderUniqueId }}_{{ uid }}" class="element-title-object-name collapse in" style="float:left; margin-left:10px;">
                            {% set obtainFullObjectName = scan.vars.value.obtainFullObjectName %}
                            {#{% if obtainFullObjectName %}#}
                            {{ obtainFullObjectName|raw }}
                            {#{% endif %}#}

                            {#the link to "Download" the image should only show if the "Image Link" field is empty#}
                            {#{% if not scan.vars.value.imageLink and scan.vars.value.documentContainer %}#}
                            {% if scan.vars.value.documentContainer %}
                                {% for document in scan.vars.value.documentContainer.documents %}
                                    {% if document.id %}
                                        <a target="_blank" href="{{ path(scan_sitename~'_file_download', { 'id': document.id }) }}">{{ scan.vars.value.imageId }}</a>
                                    {% endif %}
                                {% endfor %}
                            {% endif %}
                        </div>
                    </h4>

                    <div class="clearfix"></div>

                </div>

                <div id="form_body_imaging_{{ orderUniqueId }}_{{ uid }}" class="panel-body panel-body-imaging collapse in">

                    {{ formmacros.renderMessages(scan,flag,"pid"~orderUniqueId~"_"~uid,cycle) }}

                    {% if scan.source is defined %}
                        {{ formmacros.field(scan.source) }}
                    {% endif %}

                    {% if scan.imageId is defined %}
                        {{ formmacros.field(scan.imageId) }}
                    {% endif %}

                    {{ formmacros.field(scan.magnification) }}
                    {{ formmacros.field(scan.scanregion) }}
                    {{ formmacros.field(scan.note) }}
                    {{ formmacros.scanExtraForm(scan,flag,uid,cycle) }}
                </div>
            </div>
        {% else %}
            {{ formmacros.field(scan.magnification) }}
            {{ formmacros.field(scan.scanregion) }}
            {{ formmacros.field(scan.note) }}
        {% endif %}
        </p>
        {% set scanCount = scanCount + 1 %}
    {% endfor %}
    {% endif %}

{% endmacro %}

{############################ END OF Objects ###########################}


{% macro testSpotShow( patient ) %}
    {% import _self as formmacros %}
    {% for spot in patient.tracker.spots %}

        {{ formmacros.field(spot.id) }}
        {{ formmacros.field(spot.currentLocation.id) }}
        {{ formmacros.field(spot.currentLocation.name) }}
        {{ formmacros.field(spot.currentLocation.phone) }}
        {{ formmacros.field(spot.currentLocation.pager) }}

    {% endfor %}
{% endmacro %}


{############################ Extra Fields ###########################}
{% macro patientExtraForm( patient, datastructure, uid, cycle, status, showPlus ) %}

    {% import _self as formmacros %}

    {% if datastructure and datastructure == "datastructure" %}

        {#{% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}#}

        {#<h5>Extra data structure fields:</h5>#}

        {% if patient.type is defined %}
            {{ formmacros.inputArrayField(patient.type,cycle,"patienttype","","","","",status,showPlus) }}
        {% endif %}

        {% if patient.race is defined %}
            {{ formmacros.inputArrayField(patient.race,cycle,"patientrace","","","","",status,showPlus) }}
        {% endif %}

        {{ formmacros.patientContactinfoForm(patient,datastructure,uid,cycle,status,showPlus) }}
        {{ formmacros.patientDeceasedForm(patient,datastructure,uid,cycle,status) }}

    {% endif %}

    {#{{ formmacros.patientContactinfoForm(patient,datastructure,uid,cycle,status,showPlus) }}#}

    {#{% if datastructure and datastructure == "datastructure" %}#}
        {#{{ formmacros.patientDeceasedForm(patient,datastructure,uid,cycle,status) }}#}
    {#{% endif %}#}

{% endmacro %}

{% macro patientContactinfoForm( patient, datastructure, uid, cycle, status, showPlus ) %}
    {% if datastructure and datastructure == "datastructure" %}

        {% if patient.tracker.spots is defined and patient.tracker.spots|length > 0 %}

            {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

            {% set sitename = 'scan' %}
            {% set entity = app.user %}
            {% set counter = 0 %}

            {% for spot in patient.tracker.spots %}

                <div class="panel panel-default">

                    <div class="panel-heading">

                        {% if patient.vars.value.id %}
                            {% set orderUniqueId = patient.vars.value.id %}
                        {% else %}
                            {% set orderUniqueId = 0 %}
                        {% endif %}

                        {% set uniqueId = orderUniqueId~"_"~uid~"_"~counter %}

                        <button
                                id="form_body_toggle_patientcontactinfo_{{ uniqueId }}" type="button"
                                class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                                onclick="toggleSinglePanel(this,'#form_body_patientcontactinfo_{{ uniqueId }}');">
                        </button>

                        <h4 class="panel-title">{{ spot.currentLocation.vars.value.name }}</h4>
                    </div>

                    <div id="form_body_patientcontactinfo_{{ uniqueId }}" class="panel-body collapse">
                        {{ usermacros.locationObject(spot.currentLocation,cycle,'user-locations','noprototype',sitename,entity) }}
                    </div>
                </div>

                {% set counter = counter + 1 %}
            {% endfor %}
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro patientDeceasedForm( patient, datastructure, uid, cycle, status ) %}
    {% if datastructure and datastructure == "datastructure" %}

        {% import _self as formmacros %}

        {% if patient.deceased is defined and patient.deceased|length > 0 %}
            <div class="panel panel-default">

                <div class="panel-heading">

                    {% if patient.vars.value.id %}
                        {% set orderUniqueId = patient.vars.value.id %}
                    {% else %}
                        {% set orderUniqueId = 0 %}
                    {% endif %}

                    {#<button#}
                            {#id="form_body_toggle_patientdeath_{{ orderUniqueId }}_{{ uid }}" type="button"#}
                            {#class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"#}
                            {#data-toggle="collapse"#}
                            {#data-target="#form_body_patientdeath_{{ orderUniqueId }}_{{ uid }}">#}
                    {#</button>#}

                    <button
                            id="form_body_toggle_patientdeath_{{ orderUniqueId }}_{{ uid }}" type="button"
                            class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                            onclick="toggleSinglePanel(this,'#form_body_patientdeath_{{ orderUniqueId }}_{{ uid }}');">
                    </button>

                    <h4 class="panel-title">Additional Information</h4>
                </div>

                <div id="form_body_patientdeath_{{ orderUniqueId }}_{{ uid }}" class="panel-body collapse">
                    {% for deceased in patient.deceased %}
                        {{ formmacros.fieldDeceased(deceased,cycle) }}
                    {% endfor %}
                </div>
            </div>
        {% endif %}
    {% endif %}
{% endmacro %}




{% macro encounterExtraForm( encounter, datastructure, uid, cycle, status, showPlus ) %}

    {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}

        {% import _self as formmacros %}

        {#<h5>Extra data structure fields for Encounter:</h5>#}

        {% if encounter.number is defined %}
            {{ formmacros.inputArrayField(encounter.number,"new","encounternumber","key","","","",status,showPlus) }}
        {% endif %}

        {% if encounter.date is defined %}
            {{ formmacros.inputArrayField(encounter.date,cycle,"encounterdate","date","","","",status,showPlus) }}
        {% endif %}



        {% if encounter.encounterStatus is defined %}
            {{ formmacros.field(encounter.encounterStatus) }}
        {% endif %}

        {% if encounter.encounterInfoTypes is defined %}
            {{ formmacros.inputArrayField(encounter.encounterInfoTypes,"new","encounterinfotypes","","","","",status) }}
        {% endif %}


        {% if encounter.provider is defined %}
            {{ formmacros.field(encounter.provider) }}
        {% endif %}

        {#collection#}
        {% if encounter.referringProviders is defined %}
            {{ formmacros.inputArrayField(encounter.referringProviders,"new","encounterreferringproviders","","","","",status) }}
        {% endif %}

        {#collection#}
        {% if encounter.attendingPhysicians is defined %}
            {{ formmacros.inputArrayField(encounter.attendingPhysicians,"new","encounterattendingphysicians","","","","",status) }}
        {% endif %}


        {% if encounter.location is defined %}
            {{ formmacros.inputArrayField(encounter.location,cycle,"encounterlocation","","","","",status,showPlus) }}
        {% endif %}

        {% if encounter.message is defined %}
            {% for message in encounter.message %}
                {{ formmacros.fieldGeneralOrder(message,cycle) }}
            {% endfor %}
        {% endif %}

        {% if encounter.inpatientinfo is defined and encounter.inpatientinfo|length > 0 %}
            <div class="panel panel-default">

                <div class="panel-heading">

                    {% if encounter.vars.value.id %}
                        {% set uniqueId = encounter.vars.value.id %}
                    {% else %}
                        {% set uniqueId = 0 %}
                    {% endif %}

                    <button
                            id="form_body_toggle_inpatientinfo_{{ uniqueId }}_{{ uid }}" type="button"
                            class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                            onclick="toggleSinglePanel(this,'#form_body_inpatientinfo_{{ uniqueId }}_{{ uid }}');">
                    </button>

                    <h4 class="panel-title">Inpatient Info</h4>
                </div>

                <div id="form_body_inpatientinfo_{{ uniqueId }}_{{ uid }}" class="panel-body collapse">
                    {% for inpatientinfo in encounter.inpatientinfo %}
                        {{ formmacros.fieldInpatientinfo(inpatientinfo,cycle) }}
                    {% endfor %}
                </div>

            </div>
        {% endif %}

    {% endif %}

{% endmacro %}

{% macro procedureExtraForm( procedure, datastructure, uid, cycle, status, showPlus ) %}

    {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}

        {% import _self as formmacros %}

        {% if cycle != 'show' %}
            {% set key = "key" %}
        {% else %}
            {% set key = "" %}
        {% endif %}

        {#<h5>Extra data structure fields for Procedure:</h5>#}

        {% if procedure.number is defined %}
            {#{{ formmacros.inputArrayField(procedure.number,cycle,"procedurenumber","","","","",status) }}#}
            {{ formmacros.inputArrayField(procedure.number,cycle,"procedurenumber",key,"","","",status) }}
        {% endif %}

        {% if procedure.date is defined %}
            {{ formmacros.inputArrayField(procedure.date,cycle,"proceduredate","date","","","",status,showPlus) }}
        {% endif %}

        {% if procedure.provider is defined %}
            {{ formmacros.field(procedure.provider) }}
            {#{{ formmacros.inputArrayField(procedure.provider,cycle,"procedureprovider","","","","",status,showPlus) }}#}
        {% endif %}

        {% if procedure.location is defined %}
            {{ formmacros.inputArrayField(procedure.location,cycle,"procedurelocation","","","","",status,showPlus) }}
        {% endif %}

        {% if procedure.name is defined %}
            {{ formmacros.inputArrayField(procedure.name,cycle,"procedurename","","","","",status,showPlus) }}
        {% endif %}

        {% if procedure.message is defined %}
            {% for message in procedure.message %}
                {{ formmacros.fieldGeneralOrder(message,cycle) }}
            {% endfor %}
        {% endif %}

        {% if procedure.inpatientinfo is defined %}
            {% for inpatientinfo in procedure.inpatientinfo %}
                {{ formmacros.fieldInpatientinfo(inpatientinfo,cycle) }}
            {% endfor %}
        {% endif %}

    {% endif %}

{% endmacro %}

{% macro accessionExtraForm( accession, datastructure, uid, cycle, status ) %}

    {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}

        {% import _self as formmacros %}

        {% if accession.attachmentContainer is defined and accession.attachmentContainer.documentContainers|length > 0 %}

            <div class="panel panel-imaging">

                <div class="panel-heading">

                    {% if accession.vars.value.id %}
                        {% set uniqueId = accession.attachmentContainer.vars.value.id %}
                    {% else %}
                        {% set uniqueId = 0 %}
                    {% endif %}

                    {#<button#}
                            {#id="form_body_toggle_accession_images_{{ uniqueId }}_{{ uid }}" type="button"#}
                            {#class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"#}
                            {#onclick="toggleSinglePanel(this,'#form_body_accession_images_{{ uniqueId }}_{{ uid }}');">#}
                    {#</button>#}
                    <button
                            id="form_body_toggle_accession_images_{{ uniqueId }}_{{ uid }}" type="button"
                            class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                            data-toggle="collapse" data-target="#form_body_accession_images_{{ uniqueId }}_{{ uid }}">
                    </button>

                    <h4 class="panel-title">Autopsy Images</h4>
                </div>

                <div id="form_body_accession_images_{{ uniqueId }}_{{ uid }}" class="panel-body collapse">
                    {% for documentContainer in accession.attachmentContainer.documentContainers %}
                        {{ formmacros.fieldDocumentContainer(documentContainer,cycle,'accession'~'_'~uid) }}
                    {% endfor %}
                </div>

            </div>

        {% endif %}

    {% endif %}

{% endmacro %}

{% macro partExtraForm( part, datastructure, uid, cycle, status ) %}

    {% if datastructure and datastructure == "datastructure" %}

        {% import _self as formmacros %}

        {% if part.attachmentContainer is defined and part.attachmentContainer.documentContainers|length > 0 %}

            <div class="panel panel-imaging">

                <div class="panel-heading">

                    {% if part.vars.value.id %}
                        {% set uniqueId = part.attachmentContainer.vars.value.id %}
                    {% else %}
                        {% set uniqueId = 0 %}
                    {% endif %}

                    <button
                            id="form_body_toggle_part_grossimages_{{ uniqueId }}_{{ uid }}" type="button"
                            class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                            data-toggle="collapse" data-target="#form_body_part_grossimages_{{ uniqueId }}_{{ uid }}">
                    </button>

                    <h4 class="panel-title">Gross Images</h4>
                </div>

                <div id="form_body_part_grossimages_{{ uniqueId }}_{{ uid }}" class="panel-body collapse">
                    {% for documentContainer in part.attachmentContainer.documentContainers %}
                        {{ formmacros.fieldDocumentContainer(documentContainer,cycle,'part'~'_'~uid) }}
                    {% endfor %}
                </div>

            </div>

        {% endif %}

    {% endif %}

{% endmacro %}


{% macro blockExtraForm( block, datastructure, uid, cycle, status ) %}

    {% if datastructure and datastructure == "datastructure" %}

        {% import _self as formmacros %}

        {% if block.attachmentContainer is defined and block.attachmentContainer.documentContainers|length > 0 %}

            <div class="panel panel-imaging">

                <div class="panel-heading">

                    {% if block.vars.value.id %}
                        {% set uniqueId = block.attachmentContainer.vars.value.id %}
                    {% else %}
                        {% set uniqueId = 0 %}
                    {% endif %}

                    <button
                            id="form_body_toggle_block_images_{{ uniqueId }}_{{ uid }}" type="button"
                            class="btn btn-default btn-xs form_body_toggle_btn glyphicon glyphicon-folder-close pull-left"
                            data-toggle="collapse" data-target="#form_body_block_images_{{ uniqueId }}_{{ uid }}">
                    </button>

                    <h4 class="panel-title">Block Images</h4>
                </div>

                <div id="form_body_block_images_{{ uniqueId }}_{{ uid }}" class="panel-body collapse">
                    {% for documentContainer in block.attachmentContainer.documentContainers %}
                        {{ formmacros.fieldDocumentContainer(documentContainer,cycle,'block'~'_'~uid) }}
                    {% endfor %}
                </div>

            </div>

        {% endif %}

    {% endif %}

{% endmacro %}


{% macro scanExtraForm( scan, datastructure, uid, cycle ) %}

    {% if datastructure and datastructure == "datastructure" %}

        {% import _self as formmacros %}

        {% if scan.creationdate is defined %}
            {{ formmacros.fieldDateLabel(scan.creationdate,'allow-future-date') }}
        {% endif %}

        {#{% if scan.provider is defined %}#}
            {#{{ formmacros.field_show_user( scan.provider, "provider", cycle ) }}#}
        {#{% endif %}#}

        {% if scan.equipment is defined %}
            {{ formmacros.field(scan.equipment) }}
        {% endif %}

        {#{% if scan.source is defined %}#}
            {#{{ formmacros.field(scan.source) }}#}
        {#{% endif %}#}

        {#{% if scan.imageId is defined %}#}
            {#{{ formmacros.field(scan.imageId) }}#}
        {#{% endif %}#}

        {#{% if scan.imageLink is defined %}#}
            {#{{ formmacros.field(scan.imageLink) }}#}
        {#{% endif %}#}

        {% if scan.documentContainer is defined %}
            {{ formmacros.fieldDocumentContainer(scan.documentContainer,cycle,'scan'~'_'~uid,"plain") }}
        {% endif %}

    {% endif %}

{% endmacro %}

{############################ EOF Extra Fields ###########################}


{% macro labtestObject( field, cycle, classname, prototype ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% set standAloneObject = false %}
    {% if "standalone" in cycle %}
        {% set standAloneObject = true %}
    {% endif %}

    {% if standAloneObject %}
        <div class="user-collection-holder well {{ classname }}">
    {% endif %}

        {{ formmacros.field(formfield.labTestType) }}

        {{ formmacros.field(formfield.labTestId) }}

        {{ formmacros.field(formfield.name) }}

    {% if standAloneObject %}
        </div>
    {% endif %}

    {#show list properties#}
    {% if standAloneObject %}
        {{ usermacros.listProperties(formfield) }}
    {% endif %}

    {#{% do formfield.setRendered %}#}

{% endmacro %}

{% macro dayMonthDate( field, cycle ) %}

    {#{% import _self as formmacros %}#}
    {#{{ formmacros.field(field) }}#}
    {#{{ form_errors(field) }}#}
    {#{{ form_widget(field) }}#}
    {#{{ field.vars.value|date("m/d/Y") }}#}

    {% if field is defined %}
        <p>
        <div class="row">
            {{ form_errors(field) }}
            <div class="col-xs-6" align="right">
                {#<strong>{{ label }}</strong> {{ postfixLabel|raw }}<strong>:</strong>#}
                {{ form_label(field) }}
            </div>
            <div class="col-xs-6" align="left">
                {#{{ form_widget(field) }}#}
                {#{{ form_errors(field['month']) }}#}
                {{ form_widget(field['month']) }}

                {#{{ form_errors(field['day']) }}#}
                {{ form_widget(field['day']) }}

                {#{{ form_errors(field['year']) }}#}
                {{ form_widget(field['year'],{'attr':{'style':'display:none'}}) }}
                {#{{ form_widget(field['year']) }}#}
            </div>
            {#{{ form_rest(field) }}#}
        </div>
        </p>
    {% endif %}

{% endmacro %}



