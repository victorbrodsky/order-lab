{% macro projectInfo( form, project, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {% set collapseShow = "" %}
    {% if cycle == "pdf" %}
        {% set collapseShow = "in" %}
    {% endif %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectInfoHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectInfo" aria-expanded="true">
                        Project Status
                    </a>
                </h4>
            </div>
            <div id="projectInfo" class="panel-collapse collapse {{ collapseShow }}" role="tabpanel" aria-labelledby="projectInfoHeading">
                <div class="panel-body">

                    {% if project.exportId %}
                        {{ formmacros.simplefield("External ID:", project.exportId, "input", "disabled") }}
                    {% endif %}

                    {% if form.state is defined %}
                        {{ formmacros.field(form.state) }}
                    {% endif %}

                    {% if form.stateComment is defined %}
                        {{ formmacros.field(form.stateComment) }}
                    {% endif %}

                    {% if form.oid is defined %}
                        {{ formmacros.field(form.oid) }}
                    {% endif %}
                    {% if form.projectSpecialty is defined %}
                        {{ formmacros.field(form.projectSpecialty) }}
                    {% endif %}

                    {% if form.approvalDate is defined %}
                        {#{{ formmacros.field(form.approvalDate) }}#}
                        {{ formmacros.fieldDateLabel(form.approvalDate,'allow-future-date') }}
                    {% endif %}

                    {% if form.createDate is defined or form.submitter is defined %}
                        {#<div class="well well-sm">#}
                        {% if form.createDate is defined %}
                            {{ formmacros.field(form.createDate) }}
                        {% endif %}
                        {% if form.submitter is defined %}
                            {{ formmacros.field(form.submitter) }}
                        {% endif %}
                        {#</div>#}
                    {% endif %}

                    {{ transres.updateInfo(form,cycle) }}

                    {% if form.progressUpdate is defined %}
                        {{ formmacros.field(form.progressUpdate) }}
                    {% endif %}

                    {#expired notification email#}
                    {% if cycle != "pdf" %}
                        <hr>
                        {{ formmacros.simplefield("Sent expiration reminder email:", project.getExpirationNotifyCounterStr(), "input", "disabled") }}
                        {{ formmacros.simplefield("Sent expired email:", project.getExpiredNotifyCounterStr(), "input", "disabled") }}
                    {% endif %}

                    {#Project Closure/Reactivation#}
                    {#{% if form.closureReason is defined %}#}
                        {#{{ formmacros.field(form.closureReason) }}#}
                        {#{{ formmacros.field_notempty(form.closureReason,cycle) }}#}
                    {#{% endif %}#}
                    {#{% if form.reactivationReason is defined %}#}
                        {#{{ formmacros.field(form.reactivationReason) }}#}
                        {#{{ formmacros.field_notempty(form.reactivationReason,cycle) }}#}
                    {#{% endif %}#}
                    {#{% if form.targetState is defined %}#}
                        {#{{ formmacros.field(form.targetState) }}#}
                    {#{% endif %}#}
                    {#{% if form.targetStateRequester is defined %}#}
                        {#{{ formmacros.field(form.targetStateRequester) }}#}
                    {#{% endif %}#}
                    {% if cycle != "new" %}
                        {% if cycle != "pdf" %}
                            <hr>
                        {% endif %}
                        {#cycle={{ cycle }}<br>#}
                        {#view page: show if not empty#}
                        {#edit page: always show#}
                        {% if (cycle == "show" or cycle == "pdf") and project.getClosureReason() %}
                            {{ formmacros.simplefield("Reason for project closure:", project.getClosureReason(), "textarea", "disabled") }}
                        {% endif %}
                        {% if (cycle == "show" or cycle == "pdf") and project.getReactivationReason() %}
                            {{ formmacros.simplefield("Reason for project reactivation:", project.getReactivationReason(), "textarea", "disabled") }}
                        {% endif %}

                        {#edit page: show only to Platform Admin/Deputy Platform Admin (not TRP Admin)#}
                        {% if cycle == "edit" and is_granted('ROLE_PLATFORM_DEPUTY_ADMIN') %}
                            {{ formmacros.simplefield("Target Status:", project.getTargetState(), "input", "disabled") }}
                            {{ formmacros.simplefield("Target Status Requester:", project.getTargetStateRequester(), "input", "disabled") }}
                        {% endif %}
                    {% endif %}
                    {#EOF Project Closure/Reactivation#}

                    {#{% if cycle != "show" or cycle != "review"  %}#}
                        {#{{ transres.projectPdf(form,project,cycle) }}#}
                    {#{% endif %}#}

                </div>
            </div>
        </div>
    </div>

    {% if cycle != "show" or cycle != "review"  %}
        {{ transres.projectPdf(form,project,cycle) }}
    {% endif %}

{% endmacro %}

{% macro projectObjInfo( project, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {#{% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}#}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectInfoHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectInfo" aria-expanded="true">
                        Project Status
                    </a>
                </h4>
            </div>
            <div id="projectInfo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectInfoHeading">
                <div class="panel-body">

                    {% if project.oid is defined %}
                        {{ formmacros.simplefield("ID:", project.oid, "input", "disabled") }}
                    {% endif %}
                    {% if project.state is defined %}
                        {% set projectStatusStr = transres_util.getStateLabelByName(project.state) %}
                        {{ formmacros.simplefield("Status:", projectStatusStr, "input", "disabled") }}
                    {% endif %}
                    {% if project.stateComment is defined %}
                        {{ formmacros.simplefield("Status Comment:", project.stateComment, "textarea", "disabled") }}
                    {% endif %}
                    {% if project.projectSpecialty is defined %}
                        {{ formmacros.simplefield("Project Specialty:", project.projectSpecialty, "input", "disabled") }}
                    {% endif %}
                    {% if project.approvalDate is defined %}
                        {{ formmacros.simplefield("Approval Date:", project.approvalDate|date('m/d/Y H:i:s',false), "input", "disabled") }}
                    {% endif %}

                    {% if project.createDate is defined or project.submitter is defined %}
                        {% if project.createDate is defined %}
                            {{ formmacros.simplefield("Submission Date:", project.createDate|date('m/d/Y H:i:s',false), "input", "disabled") }}
                        {% endif %}
                        {% if project.submitter is defined %}
                            {{ formmacros.simplefield("Submitted By:", project.submitter, "input", "disabled") }}
                        {% endif %}
                    {% endif %}

                    {#PI#}
                    {% for pi in project.getPrincipalInvestigators() %}
                        {% if pi is defined and pi %}
                            {{ formmacros.simplefield("PI:", pi, "input", "disabled") }}
                        {% endif %}
                    {% endfor %}

                    {#Title#}
                    {{ formmacros.simplefield("Title:", project.title, "input", "disabled") }}

                    {#IRB/IACUC#}
                    {% set implicitExpirationDate = null %}
                    {% if project.implicitExpirationDate %}
                        {% set implicitExpirationDate = project.implicitExpirationDate|date('m/d/Y',false) %}
                    {% endif %}
                    {{ formmacros.simplefield(transres_util.getHumanAnimalName()~" Expiration Date:", implicitExpirationDate, "input", "disabled") }}

                    {#Funding#}
                    {{ formmacros.simplefield("Funding:", project.isFunded(), "input", "disabled") }}

                    {% if project.updateDate or project.updateUser %}
                        {{ formmacros.simplefield("Update Date:", project.updateDate|date("m/d/Y",false), "input", "disabled") }}
                        {{ formmacros.simplefield("Updated By:", project.updateUser, "input", "disabled") }}
                    {% endif %}

                </div>
            </div>
        </div>
    </div>

{% endmacro %}

{% macro projectIncludeInfo( project, cycle ) %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}
    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectFullInfoHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectFullInfo" aria-expanded="true">
                        Associated Project Info
                    </a>
                </h4>
            </div>
            <div id="projectFullInfo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="projectFullInfoHeading">
                <div class="panel-body" id="panel-projectFullInfo">
                    {{ render(path('translationalresearch_project_show_simple', {id: project.id})) }}
                </div>
            </div>
        </div>
    </div>
{% endmacro %}

{#Showing on Work Request page#}
{% macro projectIncludeGoals( project, transresRequest, cycle ) %}
    {#{% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}#}
    {#<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">#}
        {#<div class="panel panel-default">#}
            {#<div class="panel-heading" role="tab" id="projectIncludeGoalsHeading">#}
                {#<h4 class="panel-title">#}
                    {#<a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectIncludeGoals" aria-expanded="true">#}
                        {#Project Goal(s)3#}
                    {#</a>#}
                {#</h4>#}
            {#</div>#}
            {#<div id="projectIncludeGoals" class="panel-collapse collapse" role="tabpanel" aria-labelledby="projectIncludeGoalsHeading">#}
                {#<div class="panel-body" id="panel-projectIncludeGoals">#}
                    {#{{ render(path('translationalresearch_project_goals', {id: project.id})) }}#}
                {#</div>#}
            {#</div>#}
        {#</div>#}
    {#</div>#}

    {% set transresRequestId = null %}
    {% if transresRequest %}
        {% set transresRequestId = transresRequest.id %}
    {% endif %}
    {#transres: transresRequestId={{ transresRequestId }}<br>#}

    {% if transresRequestId %}
        <div id="panel-projectIncludeGoals">
            {{ render(path('translationalresearch_project_goals', {id: project.id, cycle: cycle, workrequestid: transresRequestId})) }}
        </div>
    {% endif %}
{% endmacro %}

{% macro projectBodyFormFields( form, project, cycle ) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {{ transres.projectIrbInfo(form,project,cycle) }}

    {{ transres.projectIACUCInfo(form,project,cycle) }}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectContentHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectContent" aria-expanded="true">
                        Project
                    </a>
                </h4>
            </div>
            <div id="projectContent" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectContentHeading">
                <div class="panel-body">

                    {{ formmacros.field(form.title) }}

                    {{ formmacros.field(form.projectType) }}

                    {{ formmacros.field(form.description)|raw }}

                    {#immediately under “Brief Description” field, add a field titled “Which division(s) are you collaborating with?”#}
                    {{ transres.collDivs(form,project,cycle) }}

                    {#Under field “Project Type”, add a field titled “Which labs within Clinical Pathology are you collaborating with, if any?”#}
                    {#{% if form.collLabs is defined %}#}
                        {#{{ formmacros.field(form.collLabs) }}#}
                    {#{% endif %}#}

                    {{ formmacros.field(form.hypothesis) }}

                    {% if form.dataAnalysis is defined %}
                        {{ formmacros.field(form.dataAnalysis)|raw }}
                    {% endif %}
                    {% if form.softwareTool is defined %}
                        {{ formmacros.field(form.softwareTool)|raw }}
                    {% endif %}

                    {#{{ formmacros.checkbox(form.needStatSupport) }}#}
                    {#show if condition#}
                    {#{{ formmacros.field(form.amountStatSupport) }}#}
                    {{ transres.needStatSupport(form,project,cycle) }}

                    {#{{ formmacros.checkbox(form.needInfSupport) }}#}
                    {#{{ formmacros.field(form.amountInfSupport) }}#}
                    {% if form.needInfSupport is defined %}
                        {{ transres.needInfSupport(form,project,cycle) }}
                    {% endif %}

                    {{ formmacros.field(form.studyPopulation) }}

                    {{ formmacros.field(form.numberPatient) }}

                    {{ formmacros.field(form.numberLabReport) }}

                    {{ formmacros.fieldDateLabel(form.studyDuration,'allow-future-date') }}

                    {% if form.timeframe is defined %}
                        {{ formmacros.field(form.timeframe) }}
                    {% endif %}

                    {% if form.priceList is defined %}
                        {{ formmacros.field(form.priceList) }}
                    {% endif %}

                    {#{{ formmacros.checkbox(form.funded) }}#}
                    {#<div id="label-funded">Yes</div>#}
                    {#<p>#}
                    {#<div class="row">#}
                        {#{{ form_errors(form.funded) }}#}
                        {#<div class="col-xs-6" align="right">#}
                            {#{{ form_label(form.funded) }}#}
                        {#</div>#}
                        {#<div class="col-xs-6 text-center nowrap" align="left" style="width: 50px; display: inline-block;">#}
                            {#{{ form_widget(form.funded) }}#}
                            {#<div id="label-funded" style="display: inline-block;">Yes</div>#}
                        {#</div>#}
                    {#</div>#}
                    {#</p>#}
                    {#<p>#}
                        {#<div class="row">#}
                            {#<div class="col-xs-6" align="right">#}
                                {#{{ form_label(form.funded) }}#}
                            {#</div>#}
                        {#style="width: 50px;"#}
                            {#<div class="col-xs-6 text-center" align="left">#}
                                {#<div class="horizontal_type">#}
                                    {#<div class="radio_inline">#}
                                        {#{{ form_widget(form.funded) }}#}
                                        {#{% if project.getFunded() %}#}
                                            {#<label id="label-funded" for="oleg_translationalresearchbundle_project_funded">Yes</label>#}
                                        {#{% else %}#}
                                            {#<label id="label-funded" for="oleg_translationalresearchbundle_project_funded"></label>#}
                                        {#{% endif %}#}
                                    {#</div>#}
                                {#</div>#}
                            {#</div>#}
                        {#</div>#}
                    {#</p>#}
                    {% if form.funded is defined %}
                        {{ formmacros.field(form.funded) }}
                    {% endif %}

                    {{ transres.projectAdditionalDetails(form,project,cycle) }}

                    {{ formmacros.field(form.fundedAccountNumber) }}

                    {#{{ formmacros.field(form.description)|raw }}#}

                    {#Hide the fields (from $budgetSummary to $expectedCompletionDate)#}
                    {% if form.budgetSummary is defined %}
                        {{ formmacros.field(form.budgetSummary) }}

                        {#{{ formmacros.field(form.hypothesis) }}#}
                        {{ formmacros.field(form.objective) }}
                        {{ formmacros.field(form.expectedResults) }}

                        {{ formmacros.field(form.numberOfCases) }}
                        {{ formmacros.field(form.numberOfCohorts) }}

                        {{ formmacros.fieldDateLabel(form.expectedCompletionDate,'allow-future-date') }}
                    {% endif %}
                    {#Hide the fields (from $budgetSummary to $expectedCompletionDate)#}

                    {#{{ formmacros.field(form.totalCost) }}#}
                    <p>
                    <div class="row">
                        <div class="col-xs-6" align="right">
                            <label class="required">{{ form.totalCost.vars.label|raw }}</label>
                        </div>
                        <div class="col-xs-6" align="left">
                            {{ form_widget(form.totalCost) }}
                        </div>
                    </div>
                    </p>

                    {% if form.noBudgetLimit is defined %}
                        {{ formmacros.checkbox(form.noBudgetLimit) }}
                    {% endif %}

                    {% if form.approvedProjectBudget is defined %}
                        {{ formmacros.field(form.approvedProjectBudget) }}
                    {% endif %}

                    {% if form.expectedExpirationDate is defined %}
                        {{ formmacros.fieldDateLabel(form.expectedExpirationDate,'allow-future-date') }}
                    {% endif %}

                    {% if form.reasonForStatusChange is defined %}
                        {{ formmacros.field_notempty(form.reasonForStatusChange,cycle) }}
                    {% endif %}

                    {#Project Closure/Reactivation#}
                    {#{% if form.closureReason is defined %}#}
                        {#{{ formmacros.field(form.closureReason) }}#}
                        {#{{ formmacros.field_notempty(form.closureReason,cycle) }}#}
                    {#{% endif %}#}
                    {#{% if form.reactivationReason is defined %}#}
                        {#{{ formmacros.field(form.reactivationReason) }}#}
                        {#{{ formmacros.field_notempty(form.reactivationReason,cycle) }}#}
                    {#{% endif %}#}
                    {#{% if form.targetState is defined %}#}
                        {#{{ formmacros.field(form.targetState) }}#}
                    {#{% endif %}#}
                    {#{% if form.targetStateRequester is defined %}#}
                        {#{{ formmacros.field(form.targetStateRequester) }}#}
                    {#{% endif %}#}
                    {#EOF Project Closure/Reactivation#}

                    {{ transres.projectDocument(form,project,cycle) }}

                    {% if cycle != "new" %}
                        {% set projectMergeInfo = project.mergeHiddenFields() %}
                        {% if projectMergeInfo %}
                            {{ formmacros.simplefield( "Previously used in the project fields (currently hidden):", projectMergeInfo|raw, "", "disabled" ) }}
                        {% endif %}

                        {% if project.expectedCompletionDate %}
                            <p>
                                {#{{ project.expectedCompletionDate|date('m/d/Y') }}#}
                                {{ formmacros.simplefield( "Expected Completion Date:", project.expectedCompletionDate|date('m/d/Y'), "", "disabled" ) }}
                            </p>
                        {% endif %}
                    {% endif %}

                </div>
            </div>
        </div>
    </div>

    {{ transres.tissueRequestDetails(form,project,cycle) }}

    {#{% if form.progressUpdate is defined %}#}
        {#{{ formmacros.field(form.progressUpdate) }}#}
    {#{% endif %}#}

{% endmacro %}

{% macro projectIrbInfo( form, project, cycle ) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {#{% if cycle == "new" || cycle == "edit" %}#}
    {% if form.irbApprovalLetters is defined %}
        {% set asFormOrEntity = "asForm" %}
        {% set irbApprovalLetters = form.irbApprovalLetters %}
    {% else %}
        {% set asFormOrEntity = "asEntity" %}
        {% set irbApprovalLetters = project.irbApprovalLetters %}
    {% endif %}

    {% if form.irbExemptionLetters is defined %}
        {% set asExemptionFormOrEntity = "asForm" %}
        {% set irbExemptionLetters = form.irbExemptionLetters %}
    {% else %}
        {% set asExemptionFormOrEntity = "asEntity" %}
        {% set irbExemptionLetters = project.irbExemptionLetters %}
    {% endif %}

    {% set humanName = transres_util.getHumanName() %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectIrbInfoContentHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectIrbInfoContent" aria-expanded="true">
                        {{ humanName }} Info
                    </a>
                </h4>
            </div>
            <div id="projectIrbInfoContent" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectIrbInfoContentHeading">
                <div class="panel-body">

                    {% set hideshowExemption = "display: none;" %}
                    {% set hideshow = "" %}
                    {% if project.exemptIrbApproval and project.exemptIrbApproval.getName() == "Exempt" %}
                        {% set hideshow = "display: none;" %}
                        {% set hideshowExemption = "" %}
                    {% endif %}

                    {#On the “Project Request View” page, only show this field/link
                    to the uploaded file if it is not empty (for all projects,
                    regardless if the “Is this project exempt from IRB approval?:“
                    field value equals “Exempt” or not)#}
                    {% if cycle == 'show' %}
                        {% if irbExemptionLetters|length > 0 %}
                            {% set hideshowExemption = "" %}
                        {% endif %}
                    {% endif %}

                    {{ formmacros.field(form.exemptIrbApproval) }}

                    {#irbApprovalLetters#}
                    <div class="well transres-project-exemptIrbApproval-panel" style="{{ hideshow }}">
                        {{ formmacros.field(form.irbNumber) }}
                        {{ formmacros.fieldDateLabel(form.irbExpirationDate,'allow-future-date') }}

                        {#{{ formmacros.field(form.irbStatusList) }}#}
                        {#{{ formmacros.field(form.irbStatusExplain) }}#}
                        {{ transres.irbStatusList(form,project,cycle) }}

                        {% if cycle != "pdf" %}
                            <div class="well form-element-holder user-irbApprovalLetters">
                                <label class="col-xs-12 control-label">{{ humanName }} Approval Letter</label>
                                <div class="row withpaddingtop">
                                    <div class="col-xs-12">
                                        {{ usermacros.documentsContainer(null,irbApprovalLetters,cycle,'noprototype',8,'default',humanName~' Approval Letter',asFormOrEntity) }}
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                    </div>

                    {#irbExemptionLetters#}
                    <div class="well transres-project-exemptIrbExemption-panel" style="{{ hideshowExemption }}">
                        {% if cycle != "pdf" %}
                            <div class="well form-element-holder user-irbExemptionLetters">
                                <label class="col-xs-12 control-label">{{ humanName }} Exemption Letter</label>
                                <div class="row withpaddingtop">
                                    <div class="col-xs-12">
                                        {{ usermacros.documentsContainer(null,irbExemptionLetters,cycle,'noprototype',8,'default',humanName~' Exemption Letter',asExemptionFormOrEntity) }}
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                    </div>

                </div>
            </div>
        </div>
    </div>

{% endmacro %}

{% macro projectIACUCInfo( form, project, cycle ) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectIACUCInfoContentHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectIACUCInfoContent" aria-expanded="true">
                        {{ transres_util.getAnimalName() }} Info
                    </a>
                </h4>
            </div>
            <div id="projectIACUCInfoContent" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectIACUCInfoContentHeading">
                <div class="panel-body">

                    {% set hideshow = "" %}
                    {% if project.exemptIACUCApproval and project.exemptIACUCApproval.getName() == "Exempt" %}
                        {% set hideshow = "display: none;" %}
                    {% endif %}

                    {{ formmacros.field(form.exemptIACUCApproval) }}

                    <div class="well transres-project-exemptIACUCApproval-panel" style="{{ hideshow }}">
                        {{ formmacros.field(form.iacucNumber) }}
                        {{ formmacros.fieldDateLabel(form.iacucExpirationDate,'allow-future-date') }}
                    </div>

                </div>
            </div>
        </div>
    </div>

{% endmacro %}

{% macro projectPdf( form, project, cycle ) %}
    {% if cycle != "pdf" %}
        {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

        {% if cycle == "review" %}
            {% set cycle = "show" %}
        {% endif %}

        {% set projectPdfs = null %}
        {% if form %}
            {% set asFormOrEntity = "asForm" %}
            {% if form.projectPdfs is defined %}
                {% set projectPdfs = form.projectPdfs %}
            {% endif %}
        {% else %}
            {% set cycle = "show" %}
            {% set asFormOrEntity = "asEntity" %}
            {% set projectPdfs = project.projectPdfs %}
        {% endif %}

        {% if projectPdfs and projectPdfs|length > 0 %}

            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#transres-project-projectpdfs">
                            Project PDFs
                        </a>
                    </h4>
                </div>

                <div id="transres-project-projectpdfs" class="panel-collapse collapse in">
                    <div class="panel-body">
                        <div class="well form-element-holder user-documents">
                            {{ usermacros.documentsContainer(null,projectPdfs,cycle,'noprototype',8,'default','Project PDFs',asFormOrEntity) }}
                        </div>
                    </div> <!-- panel-body -->
                </div> <!-- panel-collapse -->
            </div> <!-- panel panel-info -->

        {% else %}

            {% if form and projectPdfs is defined and projectPdfs %}
                {% do projectPdfs.setRendered %}
            {% endif %}

        {% endif %}
    {% endif %}
{% endmacro %}

{#hide if Project Documents does not exists#}
{% macro projectDocument( form, project, cycle ) %}
    {% if cycle != "pdf" %}
        {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
        {#{% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}#}

        {% if cycle == "review" %}
            {% set cycle = "show" %}
        {% endif %}

        {% set documents = null %}
        {% if form %}
            {% set asFormOrEntity = "asForm" %}
            {% if form.documents is defined %}
                {% set documents = form.documents %}
            {% endif %}
        {% else %}
            {% set cycle = "show" %}
            {% set asFormOrEntity = "asEntity" %}
            {% set documents = project.documents %}
        {% endif %}

        {#documents|length = {{ documents|length }}#}
        {#asFormOrEntity = {{ asFormOrEntity }}#}
        {% if documents and documents|length > 0 %}

            {% set specialtyId = NULL %}
            {% if project.getProjectSpecialty() %}
                {% set specialtyId = project.getProjectSpecialty().getId() %}
            {% endif %}

            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#transres-project-documents">
                            Project Documents
                        </a>
                    </h4>
                </div>

                <div id="transres-project-documents" class="panel-collapse collapse in">
                    <div class="panel-body">
                        <div class="well form-element-holder user-documents">

                            <label class="col-xs-12 control-label">
                                Please submit completed New Project Intake Form here.
                                The form is required for non-funded projects.
                                There is no need to fill it out if the project is funded by a grant or another source outside of the pathology department.
                            </label>
                            <p>
                                You can
                                <a href="{{ path(translationalresearch_sitename~'_download_new_study_intake_form', {'specialtyId':specialtyId}) }}"
                                   target="_blank">download the blank form here.</a>
                            </p>

                            {{ usermacros.documentsContainer(null,documents,cycle,'noprototype',8,'default','Project Document',asFormOrEntity) }}
                        </div>
                    </div> <!-- panel-body -->
                </div> <!-- panel-collapse -->
            </div> <!-- panel panel-info -->

        {% endif %}
    {% endif %}
{% endmacro %}

{#
“Additional Details” that gets hidden if “Funded” form field box is checked
by the user (and gets shown again if the “Funded” box is unchecked;
Show this accordion by default in an open + visible state.
#}
{% macro projectAdditionalDetails( form, project, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% if form.collDepartment is defined or form.collInst is defined %}
        {#Funded => hide#}
        {#Un funded => show#}
        {% set panelStyle = "" %}
        {% if project.getFunded() %}
            {#hidden if “Funded” form field box is checked#}
            {% set panelStyle = "display: none;" %}
        {% endif %}

        <div id="transres-project-additional-details" class="panel panel-default" style="{{ panelStyle }}">
            <div class="panel-heading">Additional Details</div>
            <div class="panel-body">
                {{ formmacros.field(form.collDepartment) }}
                {{ formmacros.field(form.collInst) }}
                {{ formmacros.field(form.collInstPi) }}
                {{ formmacros.field(form.essentialInfo) }}
                {{ formmacros.field(form.objective) }} {#Specific aims#}
                {{ formmacros.field(form.strategy) }}
                {{ formmacros.field(form.expectedResults) }}

                {{ formmacros.field(form.fundByPath) }}
                {{ formmacros.field(form.fundDescription) }}

                {{ formmacros.field(form.otherResource) }}
            </div>
        </div>
    {% endif %}
{% endmacro %}

{#Show project goals on the project page#}
{% macro projectGoalSection( form, project, cycle ) %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {% if cycle == "review" %}
        {% set cycle = "show" %}
    {% endif %}

    <div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#projectGoalSection">
                    Project Goal(s)
                </a>
            </h4>
        </div>
        <br>
        <div id="projectGoalSection" class="panel-collapse collapse in transres-projectgoals-holder"
             role="tabpanel"
             aria-labelledby="projectGoalSection">
            <div class="panel-body">
                {% for projectGoal in form.projectGoals %}
                    {{ transres.projectSingleGoal(projectGoal,null,cycle,'transres-projectgoals','',translationalresearch_sitename,1) }}
                {% endfor %}

                {{ usermacros.addNewObjectBtn(cycle,'transres-projectgoals','Add Project Goal') }}
            </div>
        </div>
    </div>
{% endmacro %}
{#Showing on Work Request page#}
{% macro showExistingProjectGoalSection( form, workRequestId, project, cycle ) %}

    {% if form and form.projectGoals is defined %}
        {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
        {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

        {#{% if cycle == "review" %}#}
            {#{% set cycle = "show" %}#}
        {#{% endif %}#}

        {#{% set workRequestId = null %}#}
        {#{% if form.vars.value %}#}
            {#{% set workRequestId = form.vars.value.id %}#}
        {#{% endif %}#}

        <div class="panel panel-info">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" href="#projectGoalSection">
                        Project Goal(s)
                    </a>
                </h4>
            </div>
            <br>
            <div id="projectGoalSection" class="panel-collapse collapse in transres-reqprojectgoals-holder"
                 role="tabpanel"
                 aria-labelledby="projectGoalSection">
                <div class="panel-body">
                    {% for projectGoal in form.projectGoals %}
                        {{ transres.projectSingleGoal(projectGoal,workRequestId,'show','transres-reqprojectgoals','',translationalresearch_sitename,1) }}
                    {% endfor %}

                    {% if cycle != 'show' %}
                        {% set cycle = "edit" %}
                        {{ usermacros.addNewObjectBtn(cycle,'transres-reqprojectgoals','Add Project Goal') }}
                        <br>
                        <div id="project-goals-feedback" class="alert alert-info" style="display: none"></div>

                        <p>
                            <a id="update-project-include-goals" class="btn btn-primary" onclick="updateProjectIncludeGoals()"
                            >Update Project Goals</a>
                        </p>
                    {% endif %}

                </div>
            </div>
        </div>
    {% endif %}
{% endmacro %}
{#workRequestId specified when this section is shown on the Work Request page#}
{% macro projectSingleGoal( field, workRequestId, cycle, classname, prototype, sitename, showAddDeleteBtn ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% set showProjectGoal = true %}
    {% if cycle == 'show' and formfield.vars.value %}
        {#formfield.vars.value.status={{ formfield.vars.value.status }}#}
        {% if formfield.vars.value.status == 'disable' %}
            {% set showProjectGoal = false %}
        {% endif %}
    {% endif %}

    {% if showProjectGoal == true %}
        <div class="user-collection-holder well {{ classname }}">

            {% if cycle != 'show' %}
                <div class="text-right">
                    <button type="button"
                            class="btn btn-default btn-sm"
                            onClick="removeExistingObject(this,'{{ classname }}')" >
                        <span class="glyphicon glyphicon-remove"></span>
                    </button>
                </div>
            {% endif %}

            {#For collection with "Add New ..." must add id to correctly calculate ned section id#}
            {#formfield.id={{ formfield.vars.value.id }}<br>#}
            {{ form_widget(formfield.id) }}

            {{ formmacros.field(formfield.description) }}

            {% if formfield.status is defined %}
                {{ formmacros.field(formfield.status) }}
            {% endif %}

            {% if formfield.vars.value %}
                {#formfield.id={{ formfield.vars.value.id }}#}
                <p>
                {% if formfield.vars.value.workRequests|length > 0 %}
                    {% for thisWorkRequest in formfield.vars.value.workRequests %}
                        {#thisWorkRequest.id={{ thisWorkRequest.id }}, workRequestId={{ workRequestId }}<br>#}
                        {% if workRequestId %}
                            {% if workRequestId == thisWorkRequest.id %}
                                {#Pass {{ formfield.vars.value.id }} to controller to allow associate project goal to this work request#}
                                {#Associated with this Work Request#}
                                <div>
                                    <input type="checkbox"
                                           class="projectgoal-workrequest-associated"
                                           id="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"
                                           name="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}" checked />
                                    <label for="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"
                                    >Associated with this Work Request</label>
                                </div>
                            {% else %}
                                {#Not Associated with this Work Request#}
                                <div>
                                    <input type="checkbox"
                                           class="projectgoal-workrequest-associated"
                                           id="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"
                                           name="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"/>
                                    <label for="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"
                                    >Associated with this Work Request</label>
                                </div>
                            {% endif %}
                        {% else %}
                            {#This is shown on the project page#}
                            {#Associated with work request ID {{ thisWorkRequest.id }}#}
                            <a class="1btn 1btn-default"
                               href="{{ path('translationalresearch_request_show', { 'id': thisWorkRequest.id }) }}"
                               target="_blank">Associated with work request ID {{ thisWorkRequest.id }}</a>
                        {% endif %}
                    {% endfor %}
                {% else %}
                    {#No Work Requests associated with this project goal#}
                    {% if workRequestId %}
                        <div>
                            <input type="checkbox"
                                   class="projectgoal-workrequest-associated"
                                   id="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"
                                   name="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"/>
                            <label for="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"
                            >Associated with this Work Request</label>
                        </div>
                    {% endif %}
                {% endif %}
                </p>
            {% else %}
                {#No workRequests associated with this project goal#}
                {#workRequestId={{ workRequestId }}#}
                {#{% if workRequestId %}#}
                    {#<div>#}
                        {#<input type="checkbox"#}
                               {#class="projectgoal-workrequest-associated"#}
                               {#id="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"#}
                               {#name="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"/>#}
                        {#<label for="projectgoal-workrequest-associated-{{ formfield.vars.value.id }}"#}
                        {#>Associated with this Work Request</label>#}
                    {#</div>#}
                {#{% endif %}#}
            {% endif %}

            {#Optional: show creator and create date#}
            {% set showCreationInfo = true %}
            {% if showCreationInfo and formfield.vars.value %}
                <p>
                Created by: {{ formfield.vars.value.author }}<br>
                Created on: {{ formfield.vars.value.createDate|date("m/d/Y") }}
                </p>
            {% endif %}

        </div>
    {% else %}
        {% do formfield.id.setRendered %}
        {% do formfield.description.setRendered %}
        {% if formfield.status is defined %}
            {% do formfield.status.setRendered %}
        {% endif %}
    {% endif %}
{% endmacro %}

{#Used in: projectFormShow, projectFormEdit, projectBodyFormFields#}
{% macro tissueRequestDetails( form, project, cycle ) %}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {% if cycle == "review" %}
        {% set cycle = "show" %}
    {% endif %}

    {% if form %}
        {% set asFormOrEntity = "asForm" %}
        {% if form.humanTissueForms is defined %}
            {% set humanTissueForms = form.humanTissueForms %}
        {% else %}
            {% set humanTissueForms = null %}
        {% endif %}
    {% else %}
        {% set cycle = "show" %}
        {% set asFormOrEntity = "asEntity" %}
        {% set humanTissueForms = project.humanTissueForms %}
    {% endif %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="tissueRequestDetailsHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#tissueRequestDetails" aria-expanded="true">
                        Tissue Request Details
                    </a>
                </h4>
            </div>
            <div id="tissueRequestDetails" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="tissueRequestDetailsHeading">
                <div class="panel-body">

                    {% set specialProjectSpecialty = transres_util.specialProjectSpecialty(project) %}
                    <input type="hidden" id="specialProjectSpecialty" value="{{ specialProjectSpecialty }}" />

                    {#involveHumanTissue "Will this project involve human tissue?"#}

                    {#Hide entire panel only for special projects (i.e. CP)#}
                    {% set humanRequestDetails = "" %}
                    {% if specialProjectSpecialty %}
                        {% set humanRequestDetails = "display: none;" %}
                    {% endif %}

                    {% set humanTissueFormStyle = "display: none;" %}
                    {% if project.involveHumanTissue == "Yes" %}
                        {% set humanTissueFormStyle = "" %}
                        {% set humanRequestDetails = "" %}
                    {% endif %}
                    {% if form %}
                        {{ formmacros.field(form.involveHumanTissue) }}
                    {% else %}
                        {{ formmacros.simplefield("Will this project involve human tissue?:", project.involveHumanTissue, "input", "disabled") }}
                    {% endif %}

                    <div id="transres-project-humanRequestDetails" style="{{ humanRequestDetails }}">

                        {% if cycle != "pdf" %}
                        <div id="transres-project-humanTissueForms" class="well form-element-holder user-humanTissueForms" style="{{ humanTissueFormStyle }}">
                            <label class="col-xs-12 control-label">Human Tissue Form</label>
                            <p>You can <a href="{{ path(translationalresearch_sitename~'_download_humanTissueForm') }}" target="_blank">download the blank form here.</a></p>

                            {#<p>Please note this tissue form must be reviewed and signed by the IRB Pathology Compliance Officer prior to uploading. For signature, please submit this completed form along with the associated IRB protocol summary or exemption letter to submit2pathology@med.cornell.edu</p>#}
                            {% set humanTissueFormNote = transres_util.getTransresSiteProjectParameter('humanTissueFormNote',project) %}
                            {% if humanTissueFormNote %}
                                <p>{{ humanTissueFormNote|raw }}</p>
                            {% endif %}

                            <div class="row withpaddingtop">
                                <div class="col-xs-12">
                                    {{ usermacros.documentsContainer(null,humanTissueForms,cycle,'noprototype',8,'default','Human Tissue Form',asFormOrEntity) }}
                                </div>
                            </div>
                        </div>

                        {#<br>#}
                        <hr>
                        {#<br>#}
                        {% endif %}

                        <h5>
                            <p class="text-primary">
                                {#The answers you provide must reflect what has been requested in the approved IRB and the approved tissue request form.#}
                                {{ transres_util.getTransresSiteProjectParameter('specimenDetailsComment',project) }}
                            </p>
                        </h5>
                        {#<br>#}

                        {{ transres.tissueProcurement(form,project,cycle) }}
                        {{ transres.archivalSpecimens(form,project,cycle) }}

                        {{ formmacros.field(form.restrictedServices) }}

                        {% if form.tissueFormComment is defined %}
                            {{ formmacros.field(form.tissueFormComment) }}
                        {% endif %}

                    </div> {#transres-project-humanRequestDetails#}

                </div> {#panel-body#}
            </div>
        </div>
    </div>
{% endmacro %}
{% macro tissueProcurement( form, project, cycle ) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {#Will this project require tissue procurement/processing?#}
    {% set panelStyle = "" %}
    {% if project.requireTissueProcessing == "No" %}
        {% set panelStyle = "display: none;" %}
    {% endif %}
    <div class="well">
    {% if form %}
        {{ formmacros.field(form.requireTissueProcessing) }}
    {% else %}
        {{ formmacros.simplefield("Will this project require tissue procurement/processing?:", project.requireTissueProcessing, "input", "disabled") }}
    {% endif %}

    <div id="tissueprocurement" class="panel panel-default" style="{{ panelStyle }}">
        <div class="panel-heading">Fresh Tissue Procurement/Processing</div>
        <div class="panel-body">
            <p><font color="red">This is for RESEARCH ONLY tissue and NOT for archival slides from FFPE blocks</font></p>
            {{ formmacros.field(form.totalNumberOfPatientsProcessing) }}
            {{ formmacros.field(form.totalNumberOfSpecimensProcessing) }}
            {{ formmacros.field(form.tissueNumberOfBlocksPerCase) }}
            {{ formmacros.field(form.tissueProcessingServices) }}
        </div>
    </div>
    </div>

{% endmacro %}
{% macro archivalSpecimens( form, project, cycle ) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {#Will this project require archival specimens?#}
    {% set panelStyle = "" %}
    {% if project.requireArchivalProcessing == "No" %}
        {% set panelStyle = "display: none;" %}
    {% endif %}

    <div class="well">
    {% if form %}
        {{ formmacros.field(form.requireArchivalProcessing) }}
    {% else %}
        {{ formmacros.simplefield("Will this project require archival specimens?:", project.requireArchivalProcessing, "input", "disabled") }}
    {% endif %}

    <div id="archivalspecimens" class="panel panel-default" style="{{ panelStyle }}">
        <div class="panel-heading">Archival Specimens</div>
        <div class="panel-body">
            {{ formmacros.field(form.totalNumberOfPatientsArchival) }}
            {{ formmacros.field(form.totalNumberOfSpecimensArchival) }}
            {{ formmacros.field(form.totalNumberOfBlocksPerCase) }}
            {{ formmacros.field(form.quantityOfSlidesPerBlockStained) }}
            {{ formmacros.field(form.quantityOfSlidesPerBlockUnstained) }}
            {{ formmacros.field(form.quantityOfSlidesPerBlockUnstainedIHC) }}
            {{ formmacros.field(form.quantityOfSpecialStainsPerBlock) }}
            {{ formmacros.field(form.quantityOfParaffinSectionsRnaDnaPerBlock) }}
            {{ formmacros.field(form.quantityOfTmaCoresRnaDnaAnalysisPerBlock) }}
        </div>
    </div>
    </div>

{% endmacro %}

{% macro needStatSupport( form, project, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% set panelStyle = "" %}
    {% if not project.needStatSupport %}
        {% set panelStyle = "display: none;" %}
    {% endif %}
    {#<div class="well">#}
        {% if form %}
            {{ formmacros.field(form.needStatSupport) }}
        {% else %}
            {{ formmacros.simplefield("Will you need departmental statistical or informatics support from the computational pathology team?:", project.needStatSupport, "input", "disabled") }}
        {% endif %}

        {#class="panel panel-default"#}
        <div id="needstatsupport" style="{{ panelStyle }}">
            {#<div class="panel-heading">Departmental Statistical Support</div>#}
            {#<div class="panel-body">#}
                {{ formmacros.field(form.amountStatSupport) }}
            {#</div>#}
        </div>
    {#</div>#}
{% endmacro %}

{% macro needInfSupport( form, project, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% set panelStyle = "" %}
    {% if not project.needInfSupport %}
        {% set panelStyle = "display: none;" %}
    {% endif %}
    {% if form %}
        {{ formmacros.field(form.needInfSupport) }}
    {% else %}
        {{ formmacros.simplefield("Will you need informatics support?:", project.needInfSupport, "input", "disabled") }}
    {% endif %}

    {% if form.amountInfSupport is defined %}
        <div id="needInfSupport" style="{{ panelStyle }}">
            {{ formmacros.field(form.amountInfSupport) }}
        </div>
    {% endif %}
{% endmacro %}

{% macro irbStatusList( form, project, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {#{% set hideshow = "" %}#}
    {% set hideshow = "display: none;" %}
    {% if project.irbStatusList and project.irbStatusList.getName() == "Not applicable" %}
        {#{% set hideshow = "display: none;" %}#}
        {% set hideshow = "" %}
    {% endif %}

    {#<div class="well">#}
        {% if form %}
            {{ formmacros.field(form.irbStatusList) }}
        {% else %}
            {{ formmacros.simplefield("IRB Approval Status:", project.irbStatusList, "input", "disabled") }}
        {% endif %}

        {#class="panel panel-default"#}
        <div id="irbStatusList" style="{{ hideshow }}">
            {#<div class="panel-body">#}
                {{ formmacros.field(form.irbStatusExplain) }}
            {#</div>#}
        </div>
    {#</div>#}
{% endmacro %}

{% macro collDivs( form, project, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% set hideshowCollLabs = "display: none;" %}
    {% set hideshowCompTypes = "display: none;" %}
    {% for collDiv in project.collDivs %}
        {% if collDiv and collDiv.getName() == "Clinical Pathology" %}
            {% set hideshowCollLabs = "" %}
        {% endif %}
        {% if collDiv and collDiv.getName() == "Computational Pathology" %}
            {% set hideshowCompTypes = "" %}
        {% endif %}
    {% endfor %}

    {% if form %}
        {{ formmacros.field(form.collDivs) }}
    {#{% else %}#}
        {#{{ formmacros.simplefield("Which division(s) are you collaborating with?:", null, "input", "disabled") }}#}
        {#{{ formmacros.simplefield_checkbox( "Which division(s) are you collaborating with?:", project.collDivs, "", "disabled" ) }}#}
    {% endif %}

    <div id="collLabs" style="{{ hideshowCollLabs }}">
        {{ formmacros.field(form.collLabs) }}
    </div>

    <div id="compTypes" style="{{ hideshowCompTypes }}">
        {{ formmacros.field(form.compTypes) }}
    </div>
{% endmacro %}


{% macro projectHeaders( form, project, cycle ) %}

    {% set showProjectGoal = false %}
    {% if form.projectGoals is defined %}
        {% if form.projectGoals|length > 0 %}
            {% set showProjectGoal = true %}
        {% endif %}
        {% if form.projectGoals|length == 0 %}
            {% if cycle == 'show' %}
                {% set showProjectGoal = false %}
            {% endif %}
            {% if cycle == 'edit' %}
                {% set showProjectGoal = true %}
            {% endif %}
        {% endif %}
    {% endif %}

    {% if form.progressLog is defined or showProjectGoal %}
        {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
        {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" href="#projecheader">
                        Project Header
                    </a>
                </h4>
            </div>
            <br>
            <div id="projecheader"
                 class="panel-collapse collapse in"
                 role="tabpanel"
                 aria-labelledby="projecheader">
                <div class="panel-body">

                    {#Work Progress Log Notes (visible to staff only): (hide on new project page)#}
                    {% if form.progressLog is defined %}
                        {{ formmacros.field(form.progressLog) }}
                    {% endif %}

                    {% if showProjectGoal %}
                        {{ transres.projectGoalSection(form,project,cycle) }}
                    {% endif %}

                </div>
            </div>
        </div>
    {% endif %}

    {#<br>#}
{% endmacro %}

{% macro projectRequesters( form, project, cycle ) %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {#{% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}#}

    {#Show full requester info#}
    {#{% if cycle == "pdf" %}#}
        {#{% set cycle = "show" %}#}
    {#{% endif %}#}

    {#Work Progress Log Notes (visible to staff only): (hide on new project page)#}
    {#{% if form.progressLog is defined %}#}
        {#{{ formmacros.field(form.progressLog) }}#}
    {#{% endif %}#}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectRequestersHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectRequesters" aria-expanded="true">
                        Project's Requester(s)
                    </a>
                </h4>
            </div>
            <div id="projectRequesters" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectRequestersHeading">
                <div class="panel-body">

                    {% if form.requesterGroup is defined %}
                        {{ formmacros.field(form.requesterGroup) }}
                    {% endif %}

                    {% if cycle == "show" %}
                        {% set principalInvestigators = project.principalInvestigators %}
                    {% else %}
                        {% set principalInvestigators = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.principalInvestigators,principalInvestigators,cycle) }}

                    {% if cycle == "show" %}
                        {% set principalIrbInvestigators = project.getPrincipalIrbInvestigators() %}
                    {% else %}
                        {% set principalIrbInvestigators = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.principalIrbInvestigator,principalIrbInvestigators,cycle) }}

                    {% if cycle == "show" %}
                        {% set submitInvestigators = project.submitInvestigators %}
                    {% else %}
                        {% set submitInvestigators = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.submitInvestigators,submitInvestigators,cycle) }}

                    {% if cycle == "show" %}
                        {% set pathologists = project.pathologists %}
                    {% else %}
                        {% set pathologists = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.pathologists,pathologists,cycle) }}

                    {% if cycle == "show" %}
                        {% set coInvestigators = project.coInvestigators %}
                    {% else %}
                        {% set coInvestigators = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.coInvestigators,coInvestigators,cycle) }}

                    {% if cycle == "show" %}
                        {% set contacts = project.contacts %}
                    {% else %}
                        {% set contacts = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.contacts,contacts,cycle) }}

                    {#{% if cycle == "show" %}#}
                        {#<div class="well well-sm">#}
                        {#<div style="text-align: center;">#}
                            {#<p>#}
                                {#<strong>{{ form.billingContact.vars.label|raw }}</strong>#}
                                {#{% if project.billingContact %}#}
                                    {#{{ usermacros.personInfo(project.billingContact, cycle, 'translationalresearch') }}#}
                                {#{% else %}#}
                                    {#None#}
                                {#{% endif %}#}
                            {#</p>#}
                        {#</div>#}
                        {#</div>#}
                        {#{% do form.billingContact.setRendered %}#}
                    {#{% else %}#}
                        {#{{ formmacros.field(form.billingContact) }}#}
                        {#<p>#}
                        {#<div class="row">#}
                            {#<div class="col-xs-6" align="right">#}
                                {#<strong>{{ form.billingContact.vars.label|raw }}</strong>#}
                            {#</div>#}
                            {#<div class="col-xs-6" align="left">#}
                                {#{{ form_widget(form.billingContact) }}#}
                            {#</div>#}
                        {#</div>#}
                        {#</p>#}
                    {#{% endif %}#}

                    {% if cycle == "show" %}
                        {% set billingContacts = project.getBillingContacts() %}
                    {% else %}
                        {% set billingContacts = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.billingContact,billingContacts,cycle,'required') }}

                </div>
            </div>
        </div>
    </div>
{% endmacro %}



{% macro updateInfo( form, cycle ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% if form.vars.value.updateDate or form.vars.value.updateUser %}
        {#<div class="well well-sm">#}
        {{ formmacros.simplefield("Update Date:", form.vars.value.updateDate|date("m/d/Y",false), "input", "disabled") }}
        {{ formmacros.simplefield("Updated By:", form.vars.value.updateUser, "input", "disabled") }}
        {#</div>#}
    {% endif %}
{% endmacro %}

{% macro usersInfo( usersForm, usersEntity, cycle, required ) %}
    {#{% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}#}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {% if cycle == "show" %}
        <div class="well well-sm">
            <div style="text-align: center;">
                <p>
                    <strong>{{ usersForm.vars.label }}</strong>
                    {% if usersEntity|length == 0 %}
                        None
                    {% endif %}
                </p>
            </div>
            {% for userEntity in usersEntity %}
                {% if userEntity and userEntity.id %}
                    {{ usermacros.personInfo(userEntity, cycle, 'translationalresearch') }}
                    {#{% if not loop.last %}<hr>{% endif %}#}
                {% endif %}
            {% endfor %}
        </div>
        {% do usersForm.setRendered %}
    {% else %}
        {#{{ formmacros.field(usersForm) }}#}

        {% set requiredClass = '' %}
        {% if usersForm.vars.required %}
            {% set requiredClass = 'required' %}
        {% endif %}
        {% if required is defined and required == 'required' %}
            {% set requiredClass = 'required' %}
        {% endif %}

        <p>
        <div class="row">
            <div class="col-xs-6 {{ requiredClass }}" align="right">
                <label>{{ usersForm.vars.label|raw }}</label>
            </div>
            <div class="col-xs-6" align="left">
                {{ form_widget(usersForm) }}
                {#<div class = "input-group">#}
                    {#{{ form_widget(usersForm) }}#}
                    {#<span class = "input-group-addon btn" onclick="addNewUserOnFly(this)">#}
                        {#Add New#}
                    {#</span>#}
                {#</div>#}
            </div>
        </div>
        </p>
    {% endif %}
{% endmacro %}

{% macro userInfo( userForm, userEntity, cycle, fieldType ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {% if cycle == "show" or cycle == "review" or cycle == "pdf" %}
        {% if fieldType is defined and fieldType == 'left' %}
            {% set colLeft = 2 %}
            {% set colMiddle = 6 %}
            {% set colRight = 4 %}
        {% else %}
            {% set colLeft = 6 %}
            {% set colMiddle = 6 %}
            {% set colRight = 0 %}
        {% endif %}
        <div class="row">
            <div class="col-xs-{{ colLeft }}" align="right">
                {#<div style="text-align: center;">#}
                    {#<p>#}
                        <strong>{{ userForm.vars.label }}</strong>
                    {#</p>#}
                {#</div>#}
            </div>
            <div class="col-xs-{{ colMiddle }}" align="left">
                {#<div style="text-align: center;">#}
                    {#<p>#}
                        {#<strong>{{ userForm.vars.label }}</strong>#}
                    {#</p>#}
                {#</div>#}
                {{ usermacros.personInfo(userEntity, cycle, 'translationalresearch') }}
                {% do userForm.setRendered %}
            </div>
            <div class="col-xs-{{ colRight }}" align="right">
            </div>
        </div>
    {% else %}
        {% if fieldType is defined and fieldType == 'left' %}
            {{ formmacros.field_left(userForm) }}
        {% else %}
            {{ formmacros.field(userForm) }}
        {% endif %}
    {% endif %}
{% endmacro %}

{#NOT USED#}
{#{% macro projectEnabledLinkActionsHeader(project) %}#}
    {#{% set actionLinks = transres_util.getEnabledLinkActions(project) %}#}
    {#<div class="well">#}
        {#<p>Project State: <strong>{{ transres_util.getStateLabelByProject(project) }}</strong></p>#}
        {#{% for actionLink in actionLinks %}#}
                {#{{ actionLink|raw }}#}
        {#{% endfor %}#}
    {#</div>#}
{#{% endmacro %}#}
{#{% macro reviewEnabledLinkActionsHeader(project,review,cycle) %}#}
    {#{% set actionLinks = transres_util.getReviewEnabledLinkActions(review) %}#}
    {#{% for actionLink in actionLinks %}#}
        {#{{ actionLink|raw }}#}
    {#{% endfor %}#}

    {#{% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.id ~ "-" ~ review.id ~ "-" ~ review.getStateStr() %}#}
    {#{% if actionLinks|length > 0 and cycle == "show" %}#}
        {#{{ render(controller('AppTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
        {#{% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}#}
    {#{% else %}#}
        {#{{ render(controller('AppTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
    {#{% endif %}#}
{#{% endmacro %}#}
{#NOT USED#}
{#{% macro reviewEnabledLinkActionsHeader(project,review,cycle) %}#}

    {#{% if#}
        {#cycle == "show" and#}
        {#review.id and#}
        {#transres_util.isUserAllowedReview(review) and#}
        {#transres_util.isReviewCorrespondsToState(review)#}
    {#%}#}
        {#{% set actionLinks = transres_util.getReviewEnabledLinkActions(review) %}#}
        {#{% for actionLink in actionLinks %}#}
            {#<p>#}
                {#{{ actionLink|raw }}#}
            {#</p>#}
        {#{% endfor %}#}

        {#{% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.id ~ "-" ~ review.id ~ "-" ~ review.getStateStr() %}#}
        {#{% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.vars.value.id ~ "-" ~ review.vars.value.getStateStr() %}#}
        {#actionLinks|length={{ actionLinks|length }}, cycle={{ cycle }}<br>#}
        {#{% if actionLinks|length > 0 and cycle == "show" %}#}
            {#{{ render(controller('AppTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
            {#include async.html.twig threadId={{ threadId }}<br>#}
            {#{% include '@FOSComment/Thread/async.html.twig' with {'id': threadId} %}#}
            {#{{ render(controller(#}
                {#'App\\UserdirectoryBundle\\Controller\\CommentThreadController::getThreadsActions',#}
                {#{ 'id': threadId }))#}
            {#}}#}
            {#{{ render(controller('AppTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
        {#{% else %}#}
            {#{{ render(controller('App\\UserdirectoryBundle\\Controller\\CommentThreadController::threadCommentsShowAction', { 'id': threadId })) }}#}
        {#{% endif %}#}
    {#{% endif %}#}

{#{% endmacro %}#}

{#show allowed transition to links#}
{% macro projectReviewsEnabledLinkActions(project,reviews,cycle) %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}
    {% set actionLinks = [] %}
    {% set threadId = null %}

    {% for review in reviews %}

        {% if
            (cycle == "review" or cycle == "resubmit") and
            review.id and
            transres_util.isUserAllowedFromThisStateByProjectAndReview(project,review) and
            transres_util.isReviewCorrespondsToState(review)
        %}
            {#getReviewEnabledLinkActions: reviewer={{ review.getReviewer() }}<br>#}
            {% set actionReviewLinks = transres_util.getReviewEnabledLinkActions(review) %}
            {% set actionLinks = actionLinks|merge({ (loop.index0): actionReviewLinks}) %}

            {% set threadId = "transres-" ~ project.getEntityName() ~ "-" ~ project.id ~ "-" ~ review.getStateStr() %}
        {% else %}
            {#no getReviewEnabledLinkActions<br>#}
        {% endif %}

    {% endfor %}
    {% if threadId and actionLinks|length > 0 %}

        {% if transres_util.isProjectStateReviewer(project,app.user) %}
            <p><strong>
                This project request is in {{ transres_util.getStateLabelByProject(project) }} stage.
                {% if project.state == 'irb_review' or project.state == 'admin_review' %}
                    Please review this request, enter a comment (if any), and press the green, the red or the yellow button to submit your opinion.
                {% else %}
                    Please review this request, enter a comment (if any), and press the green or the red button to submit your opinion.
                {% endif %}
            </strong></p>
        {% endif %}

        <div class="well transres-review-holder text-center col-xs-12">
            {#get human tissue forms view url#}
            <p>
                {{ transres_util.showHumanTissueFormViewUrl(project)|raw }}
            </p>

            {#Add field "Update expiration date" (irbExpirationDate) in the IRB Review page#}
            {% if project.state == "irb_review" %}
                {#"IRB with PI FirstName LastName expires on MM/DD/YYYY."#}
                {{ project.getIrbInfo(transres_util.getHumanName())|raw }}

                {#get human tissue forms view url#}
                {#{{ transres_util.showHumanTissueFormViewUrl(project)|raw }}#}

                {#{% set irbExpDate = transres_formnode_util.getProjectFormNodeFieldByName(project,"IRB Expiration Date") %}#}
                {% set irbExpDate = project.getIrbExpirationDate() %}
                {% if irbExpDate %}
                    {% set irbExpDateStr = irbExpDate|date("m/d/Y",false) %}
                {% else %}
                    {% set irbExpDateStr = null %}
                {% endif %}
                {{ transres.fieldDateLabel(irbExpDateStr,"Provided "~transres_util.getHumanName()~" Expiration Date (enter a new date to update it):",1) }}
            {% endif %}

            {#Add field "Utilize the following price list:" (priceList) in the Admin Review page#}
            {% if project.state == "admin_review" %}
                {#"IRB with PI FirstName LastName expires on MM/DD/YYYY."#}
                {{ project.getIrbInfo(transres_util.getHumanName())|raw }}

                {% set priceList = project.getPriceList() %}
                {% if priceList %}
                    {% set priceListStr = priceList.getName() %}
                {% else %}
                    {% set priceListStr = null %}
                {% endif %}
                {{ transres.fieldPriceList(priceListStr,"Utilize the following specific price list:",1) }}

                {% set noBudgetLimit = project.getNoBudgetLimit() %}
                {{ transres.fieldNoBudgetLimit(noBudgetLimit,"No budget limit:",1) }}

                {#Show this "Approved Project Budget" field#}
                {% set approvedProjectBudget = project.getApprovedProjectBudget() %}
                {% set totalCost = transres.dollarSignValue(project.getTotalCost()) %}
                {% set approvedProjectBudgetLabel = "Approved Project Budget (Estimated Total Costs "~totalCost~"):" %}
                {{ transres.fieldApprovedProjectBudget(approvedProjectBudget,approvedProjectBudgetLabel,1) }}
            {% endif %}

            {#show current review's reccomendations for committee review status for primary reviewer#}
            {{ transres_util.showProjectReviewInfo(project)|raw }}

            {% for actionLink in actionLinks %}
                <p>
                    {% for actionLinkSet in actionLink %}
                        {{ actionLinkSet|raw }}
                    {% endfor %}

                </p>
            {% endfor %}

            {#
            https://view-test.med.cornell.edu/
            api/threads/transres-Project-3350-irb_review/
            comments?permalink=https%3A%2F%2Fview-test.med.cornell.edu%2Ftranslational-research%2Fproject%2Freview%2F3350&view=tree
            #}
            {#{% include '@FOSComment/Thread/async.html.twig' with {'id': threadId} %}#}
            {#{{ render(controller(#}
                {#'App\\UserdirectoryBundle\\Controller\\CommentThreadController::getThreadsActions',#}
                {#{ 'id': threadId }))#}
            {#}}#}
            {#projectReviewsEnabledLinkActions threadId={{ threadId }}<br>#}
            {{ render(controller('App\\UtilBundles\\FOSCommentBundle\\Controller\\CommentThreadController::threadCommentsShowAction', { 'id': threadId })) }}

        </div>
    {% endif %}
{% endmacro %}

{% macro projectHeader(project) %}
    <p>Project State: <strong>{{ transres_util.getStateLabelByProject(project) }}</strong></p>

{% endmacro %}


{% macro getActionReviewCommentsSection(project, cycle, sitename, addReviewButtons) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {% if addReviewButtons is not defined %}
        {% set addReviewButtons = 0 %}
    {% endif %}

    {% set showIrbReview = 1 %}
    {% set showAdminReview = 1 %}
    {% set showCommiteeReview = 1 %}
    {% set showFinalReview = 1 %}

    {% set showAddDeleteBtn = 0 %}
    {% if is_granted('ROLE_TRANSRES_ADMIN') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER') %}
        {% set showAddDeleteBtn = 1 %}
    {% endif %}

    {% set hasReviews = false %}

    {% if showIrbReview and project.irbReviews is defined %}
        {#show project.irbReviews<br>#}
        {% set irbLinks = transres.projectReviewsEnabledLinkActions(project,project.irbReviews,cycle) %}
        {% if irbLinks|trim %}
            {{ irbLinks }}
            {% set hasReviews = true %}
        {% endif %}
    {% endif %}

    {% if showAdminReview and project.adminReviews is defined %}
        {#show project.adminReviews<br>#}
        {%  set adminLinks = transres.projectReviewsEnabledLinkActions(project,project.adminReviews,cycle) %}
        {% if adminLinks|trim %}
            {{ adminLinks }}
            {% set hasReviews = true %}
        {% endif %}
    {% endif %}

    {% if showCommiteeReview and project.committeeReviews is defined %}
        {#show project.committeeReviews<br>#}
        {% set committeeLinks = transres.projectReviewsEnabledLinkActions(project,project.committeeReviews,cycle) %}
        {% if committeeLinks|trim %}
            {{ committeeLinks }}
            {% set hasReviews = true %}
        {% endif %}
    {% endif %}

    {% if showFinalReview and project.finalReviews is defined %}
        {#show project.finalReviews<br>#}
        {% set finalLinks = transres.projectReviewsEnabledLinkActions(project,project.finalReviews,cycle) %}
        {% if finalLinks|trim %}
            {{ finalLinks }}
            {% set hasReviews = true %}
        {% endif %}
    {% endif %}

    {#Add a new darker green button next to the green approve button titled “Grant Final Approval” #}
    {#if move it to projectReviewsEnabledLinkActions, then fields to modify project (price list, budget, irb exp date) would be editable by primar reviewer => final reviewer would be equal to admin#}
    {#hasReviews={{ hasReviews }}<br>#}
    {% if hasReviews == false %}
        {#hasReviews1<br>#}
        {% if transres_permission_util.hasProjectPermission("funded-final-review",project) and project.state != 'final_approved' %}
            {#hasReviews2<br>#}
            <div class="well transres-review-holder text-center col-xs-12">
                {#<a#}
                        {#class="btn btn-darkgreen transres-review-submit"#}
                        {#general-data-confirm="Are you sure you want to grant final approval for project {{ project.oid }}?"#}
                        {#general-post-process="transresUpdateProjectSpecificBtn"#}
                        {#href="{{ path(translationalresearch_sitename~'_project_approve', { 'id': project.id }) }}"#}
                {#>Grant Final Approval</a>#}
                <p>
                <a
                        class="btn btn-darkgreen transres-review-submit"
                        general-data-confirm="Are you sure you want to grant final approval for project {{ project.oid }}?"
                        general-post-process="transresUpdateProjectSpecificBtn"
                        href="{{ path(translationalresearch_sitename~'_project_approve', { 'id': project.id }) }}"
                >Grant Final Approval</a>
                </p>

                {#{% set threadId = "transres-" ~ project.getEntityName() ~ "-" ~ project.id ~ "-" ~ review.getStateStr() %}#}
                {#transres-Project-3359-irb_review#}
                {% set stateStr = transres_util.getAllowedFromState(project) %}
                {% set threadId = "transres-" ~ project.getEntityName() ~ "-" ~ project.id ~ "-" ~ stateStr %}

                {#{% include '@FOSComment/Thread/async.html.twig' with {'id': threadId} %}#}
                {#{{ render(controller(#}
                    {#'App\\UserdirectoryBundle\\Controller\\CommentThreadController::getThreadsActions',#}
                    {#{ 'id': threadId }))#}
                {#}}#}
                {#TODO: test#}
                {#getActionReviewCommentsSection threadId={{ threadId }}<br>#}
                {{ render(controller('App\\UtilBundles\\FOSCommentBundle\\Controller\\CommentThreadController::threadCommentsShowAction', { 'id': threadId })) }}

                {% set hasReviews = true %}
            </div>
        {% endif %}
    {% endif %}

    {% if not hasReviews %}
        <div class="alert alert-info">
            <p>You can not review this project. The current project status is "{{ transres_util.getStateLabelByName(project.state) }}".</p>
        </div>
    {% endif %}

{% endmacro %}



{% macro projectReviews(project, cycle, sitename, showComments) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {#{% if showAddDeleteBtn is not defined %}#}
        {#{% set showAddDeleteBtn = 0 %}#}
    {#{% endif %}#}

    {#{% if prototype == "prototype" %}#}
        {#{% set forminterview = reviews.vars.prototype %}#}
    {#{% else %}#}
        {#{% set forminterview = reviews %}#}
    {#{% endif %}#}

    {#{% if project.state.vars.value == "irb_review" %}#}
        {#{% set reviews = project.irbReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "admin_review" %}#}
        {#{% set reviews = project.adminReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "committee_review" %}#}
        {#{% set reviews = project.committeeReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "final_review" %}#}
        {#{% set reviews = project.finalReviews %}#}
    {#{% endif %}#}

    {% if showComments is not defined %}
        {% set showComments = 0 %}
    {% endif %}

    {% set showIrbReview = 1 %}
    {% set showAdminReview = 1 %}
    {% set showCommiteeReview = 1 %}
    {% set showFinalReview = 1 %}

    {% set showAddDeleteBtn = 0 %}
    {% if is_granted('ROLE_TRANSRES_ADMIN') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER') %}
        {% set showAddDeleteBtn = 1 %}
    {% endif %}


    {#Reviewers accordion#}
    <div class="panel-group" id="accordionReviewers" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="reviewersHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordionReviewers" href="#accordionReviewersBody" aria-expanded="true" aria-controls="reviewersBase">
                        Reviewers
                    </a>
                </h4>
            </div>
            <div id="accordionReviewersBody" class="panel-collapse collapse" role="tabpanel" aria-labelledby="reviewersHeading">
                <div class="panel-body">
    {#EOF Reviewers accordion#}


    {% if showIrbReview and project.irbReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="irbreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#irbreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            {{ transres_util.getHumanName() }} Review
                        </a>
                    </h4>
                </div>
                <div id="irbreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="irbreviewHeading">
                    <div class="panel-body">
                        <div class="transres-irbreviews-holder">


                            {#count irb reviewers={{ project.irbReviews|length }}<br>#}
                            {% for review in project.irbReviews %}
                                {#show review with reviewer={{ review.vars.value.reviewer.getUsernameOptimal }}<br>#}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-irbreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% set thisState = "irb_review" %}
                                {#{% set thisState = project.vars.value.irbReviews|first.getStateStr() %}#}
                                {% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.vars.value.id ~ "-" ~ thisState %}
                                {#projectReviews irb threadId={{ threadId }}<br>#}
                                {{ render(controller(
                                    'App\\UtilBundles\\FOSCommentBundle\\Controller\\CommentThreadController::threadCommentsShowAction',
                                    { 'id': threadId, 'newcomment': false }
                                )) }}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-irbreviews','Add '~transres_util.getHumanName()~' Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showAdminReview and project.adminReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="adminreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#adminreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Admin Review
                        </a>
                    </h4>
                </div>
                <div id="adminreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="adminreviewHeading">
                    <div class="panel-body">
                        <div class="transres-adminreviews-holder">

                            {% for review in project.adminReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-adminreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% set thisState = "admin_review" %}
                                {#{% set thisState = project.vars.value.adminReviews|first.getStateStr() %}#}
                                {% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.vars.value.id ~ "-" ~ thisState %}
                                {#projectReviews admin threadId={{ threadId }}<br>#}
                                {{ render(controller(
                                    'App\\UtilBundles\\FOSCommentBundle\\Controller\\CommentThreadController::threadCommentsShowAction',
                                    { 'id': threadId, 'newcomment': false }
                                )) }}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-adminreviews','Add Admin Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showCommiteeReview and project.committeeReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="committeereviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse"
                           data-parent="#accordion"
                           href="#committeereview"
                           aria-expanded="true"
                           aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Scientific Committee Reviews
                        </a>
                    </h4>
                </div>
                <div id="committeereview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="committeereviewHeading">
                    <div class="panel-body">
                        <div class="transres-committeereviews-holder">

                            {% for review in project.committeeReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-committeereviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% set thisState = "committee_review" %}
                                {% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.vars.value.id ~ "-" ~ thisState %}
                                {#projectReviews commitee threadId={{ threadId }}<br>#}
                                {{ render(controller(
                                    'App\\UtilBundles\\FOSCommentBundle\\Controller\\CommentThreadController::threadCommentsShowAction',
                                    { 'id': threadId, 'newcomment': false }
                                )) }}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-committeereviews','Add Scientific Committee Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showFinalReview and project.finalReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="finalreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#finalreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Financial and Programmatic Review
                        </a>
                    </h4>
                </div>
                <div id="finalreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="finalreviewHeading">
                    <div class="panel-body">
                        <div class="transres-finalreviews-holder">

                            {% for review in project.finalReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-finalreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% set thisState = "final_review" %}
                                {% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.vars.value.id ~ "-" ~ thisState %}
                                {#projectReviews final threadId={{ threadId }}<br>#}
                                {{ render(controller(
                                    'App\\UtilBundles\\FOSCommentBundle\\Controller\\CommentThreadController::threadCommentsShowAction',
                                    { 'id': threadId, 'newcomment': false }
                                )) }}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {#Final Reviewer#}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-finalreviews','Add Financial and Programmatic Review') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {#Reviewers accordion#}
                </div>
            </div>
        </div>
    </div>
    {#EOF Reviewers accordion#}

{% endmacro %}

{% macro projectSingleReview( project, review, cycle, classname, prototype, sitename, showAddDeleteBtn ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {% if showAddDeleteBtn is not defined %}
        {% set showAddDeleteBtn = 0 %}
    {% endif %}

    {% set reviewId = null %}
    {#{% set reviewInfo = null %}#}
    {% if prototype == "prototype" %}
        {% set formreview = review.vars.prototype %}
        {#{% set reviewInfo = "Will be added as a new reviewer after update" %}#}
    {% else %}
        {% set formreview = review %}
        {% set reviewId = review.id.vars.value %}
        {% if review.id.vars.value == null %}
            {#{% set reviewInfo = "Will be added as a new default reviewer after update" %}#}
        {% endif %}
    {% endif %}


    {% set wellclass = "alert-default well well-sm" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {#please hide these blue wells with these sentences#}
        {#{% if reviewInfo %}#}
            {#<p>#}
            {#<div class="alert alert-info" role="alert">#}
                {#{{ reviewInfo }}#}
            {#</div>#}
            {#</p>#}
        {#{% endif %}#}
        {% if cycle != "show" and cycle != "review" and showAddDeleteBtn %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" ><span class="glyphicon glyphicon-remove"></span></button>
            </div>
            <br>
        {% else %}
            {#do nothing#}
        {% endif %}

        {#{% if formreview.reviewer.vars.value %}#}
        {#formreview.reviewer={{ formreview.vars.value.reviewer.getUsernameOptimal() }}#}
        {#{% endif %}#}

        {% if formreview.id is defined %}
            {{ form_widget(formreview.id) }}
        {% endif %}

        {#{% set showReviewers = false %}#}
        {#{% if  %}#}
        {#formreview.vars.value.id={{ formreview.vars.value.id }}<br>#}
        {% if formreview.vars.value and (formreview.vars.value.reviewedBy or formreview.vars.value.updatedate) %}
            {#formreview.vars.value.reviewedBy.id={{ formreview.vars.value.reviewedBy.id }}<br>#}
            {#{{ formmacros.simplefield("Reviewed By:", transres.userHtml(formreview.vars.value.reviewedBy), "input", "disabled") }}#}
            {% set reviewedBy = null %}
            {% if formreview.vars.value.reviewedBy %}
                {#show it only to admin, reviewers and reviewedBy users#}
                {% if transres_util.showReviewedBy(formreview.vars.value) %}
                    {% set reviewedBy = " by" ~ transres.userHtml(formreview.vars.value.reviewedBy) %}
                {% endif %}
            {% endif %}
            <p>
                {#Reviewed by {{ transres.userHtml(formreview.vars.value.reviewedBy) }} on {{ updatedate|date("m/d/Y H:i") }}#}
                {#Reviewed{{ reviewedBy|raw }} on {{ formreview.vars.value.updatedate|date("m/d/Y \\a\\t h:i A T",false) }} }}#}
                Reviewed{{ reviewedBy|raw }} on {{ formreview.vars.value.updatedate|date("m/d/Y \\a\\t h:i A T") }}
            </p>
        {% endif %}

        {% if formreview.primaryReview is defined %}
            {{ formmacros.checkbox(formreview.primaryReview) }}
        {% endif %}

        {% if formreview.reviewProjectType is defined %}
            {{ formmacros.field(formreview.reviewProjectType) }}
        {% endif %}

        {% if formreview.reviewer is defined %}
            {{ formmacros.field(formreview.reviewer) }}
        {% endif %}

        {% if formreview.reviewerDelegate is defined %}
            {{ formmacros.field(formreview.reviewerDelegate) }}
        {% endif %}

        {% if formreview.decision is defined %}
            {{ formmacros.field(formreview.decision) }}
        {% endif %}

        {#{% if formreview.comments is defined %}#}
            {#{{ formmacros.field(formreview.comments) }}#}
        {#{% endif %}#}

        {#allow change review by admin and reviewer only in the view page. Clicking this button on the edit page will not save any changes#}
        {#{% if#}
            {#cycle == "show" and#}
            {#reviewId and#}
            {#transres_util.isUserAllowedReview(review.vars.value) and#}
            {#transres_util.isReviewCorrespondsToState(review.vars.value)#}
        {#%}#}
            {#<p>#}
                {#<a class="btn btn-primary"#}
                   {#href="{{ path(translationalresearch_sitename~'_review_edit',{'stateStr':review.vars.value.getStateStr(),'reviewId': reviewId}) }}"#}
                    {#>Update Review</a>#}
            {#</p>#}

            {#addReviewButtons={{ addReviewButtons }}<br>#}
            {#{% if addReviewButtons is defined and addReviewButtons %}#}
                {#<p>#}
                {#{{ transres.reviewEnabledLinkActionsHeader(project.vars.value,review.vars.value,cycle) }}#}
                {#</p>#}
            {#{% endif %}#}

        {#{% endif %}#}

        {#{% if reviewId %}#}
            {#<p>#}
                {#{% set actionLinks = transres_util.getResubmitButtons(review.vars.value) %}#}
                {#{% for actionLink in actionLinks %}#}
                    {#{{ actionLink|raw }}#}
                {#{% endfor %}#}
            {#</p>#}
        {#{% endif %}#}

        {#reviewId={{ reviewId }}<br>#}
        {#project.vars.value.id={{ project.vars.value.id }}<br>#}
        {#TODO: create an individual page for each threadId and include this page below#}
        {#{% if reviewId and project.vars.value.id %}#}
            {#projectId reviewId reviewClass-getStateStr#}
            {#{% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.vars.value.id ~ "-" ~ reviewId ~ "-" ~ review.vars.value.getStateStr() %}#}
            {#{% set threadId = "transres-" ~ project.vars.value.getEntityName() ~ "-" ~ project.vars.value.id ~ "-" ~ review.vars.value.getStateStr() %}#}
            {#threadId={{ threadId }}<br>#}
            {#<iframe src="/order/api/threads/{{threadId}}/comments">#}
                {#{% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}#}
            {#</iframe>#}
            {#<div class="thread-fos" data-thread-id="{{ threadId }}"></div>#}

            {#<a class="btn btn-primary"#}
                {#href="{{ path(translationalresearch_sitename~'_review_edit',{'stateStr':review.vars.value.getStateStr(),'reviewId': reviewId}) }}"#}
            {#>Update Review</a>#}

            {#{% include 'FOSCommentBundle:Thread:async.html.twig' with {'thread_container': '.comments-box'} %}#}
            {#<div class="comments-box" data-thread-id="{{ threadId }}"></div>#}

            {#{% include 'AppTranslationalResearchBundle:Thread:async.html.twig' with {'id': threadId} %}#}

            {#<p>#}
                {#{{ render(controller('AppTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
            {#</p>#}

            {#{% if cycle == "show" %}#}

                {#{% if addReviewButtons is defined and addReviewButtons %}#}
                    {#{{ render(controller('AppTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
                {#{% else %}#}
                    {#{{ render(controller('AppTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
                {#{% endif %}#}

            {#{% endif %}#}

            {#{% if cycle == "edit" %}#}
                {#{{ render(controller('AppTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
            {#{% endif %}#}

        {#{% endif %}#}

        {#{% if cycle == "edit" and threadId is defined and threadId %}#}
            {#{{ render(controller('AppTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
        {#{% endif %}#}

    </div>
{% endmacro %}

{% macro userHtml(user) %}
    {#1user.id={{ user.id }}<br>#}
    {% if user %}
        {#2user.id={{ user.id }}<br>#}
        {% set personurl = path(translationalresearch_sitename~'_showuser',{'id':user.id}) %}
        {% set personlink = '<a href="'~personurl~'" target="_blank">'~user.getUsernameOptimal()~'</a>'  %}
        {{ personlink|raw }}
    {% endif %}
{% endmacro %}

{% macro getProjectReviewPrototypeFormData(form, cycle, sitename) %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    <div id="form-prototype-data"
            data-userurllink = "{{ usermacros.userUrlLink()|e }}"
            data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
            data-userid = "{{ app.user.id }}"

            {% if form %}
                {% if form.irbReviews is defined %}
                    data-prototype-transres-irbreviews = "{{ transres.projectSingleReview(form,form.irbReviews,cycle,'transres-irbreviews','prototype', sitename,1)|e }}"
                {% endif %}
                {% if form.adminReviews is defined %}
                    data-prototype-transres-adminreviews = "{{ transres.projectSingleReview(form,form.adminReviews,cycle,'transres-adminreviews','prototype', sitename,1)|e }}"
                {% endif %}
                {% if form.committeeReviews is defined %}
                    data-prototype-transres-committeereviews = "{{ transres.projectSingleReview(form,form.committeeReviews,cycle,'transres-committeereviews','prototype', sitename,1)|e }}"
                {% endif %}
                {% if form.finalReviews is defined %}
                    data-prototype-transres-finalreviews = "{{ transres.projectSingleReview(form,form.finalReviews,cycle,'transres-finalreviews','prototype', sitename,1)|e }}"
                {% endif %}

                {#before projectgoals prototype#}
                {% if form.projectGoals is defined %}
                    {#adding projectgoals prototype#}
                    data-prototype-transres-projectgoals = "{{ transres.projectSingleGoal(form.projectGoals,null,cycle,'transres-projectgoals','prototype',sitename,1)|e }}"
                {% endif %}

            {% endif %}
    ></div>

{% endmacro %}

{% macro getProjectShowPrototypeFormData(form, cycle, sitename) %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    <div id="form-prototype-data"
         data-userurllink = "{{ usermacros.userUrlLink()|e }}"
         data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
         data-userid = "{{ app.user.id }}"
    ></div>

{% endmacro %}

{% macro fieldDateLabel( value, label, updateButton ) %}
    <p>
    <div class="row">
        <div class="col-xs-3" align="right">
        </div>
        <div class="col-xs-3" align="right">
            <strong>{{ label|raw }}</strong>
        </div>
        <div class="col-xs-3" align="left">
            {#regular-datepicker#}
            <div class="input-group input-group-reg date allow-future-date">
                <input id="transres_irbExpirationDate"
                       class="datepicker form-control submit-on-enter-field"
                       placeholder="{{ transres_util.getHumanName() }} Expiration Date" type="text"
                       value="{{ value }}"
                >
                <span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
        <div class="col-xs-3" align="left">
            {% if updateButton is defined and updateButton %}
                <div class="btn btn-primary btn-sm transres-update-project-specific-btn transres-update-irbexpirationdate">Update {{ transres_util.getHumanName() }} Expiration Date</div>
            {% endif %}
        </div>
    </div>
    </p>
{% endmacro %}

{% macro fieldPriceList( value, label, updateButton ) %}
    <p>
    <div class="row">
        <div class="col-xs-3" align="right">
        </div>
        <div class="col-xs-3" align="right">
            <strong>{{ label|raw }}</strong>
        </div>
        <div class="col-xs-3" align="left">
            {#<div class="input-group input-group-reg date allow-future-date">#}
                {#<input id="transres_irbExpirationDate"#}
                       {#class="datepicker form-control submit-on-enter-field"#}
                       {#placeholder="{{ transres_util.getHumanName() }} Expiration Date" type="text"#}
                       {#value="{{ value }}"#}
                {#>#}
                {#<span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>#}
            {#</div>#}
            {% set priceLists = transres_util.getDbPriceLists() %}
            <select
                    id="transres_project_pricelist"
                    name="priceList[]"
                    class="combobox combobox-width" tabindex="-1"
                    title="{{ label|raw }}"
            >
                <option value=""></option>
                {% for priceList in priceLists %}
                    {% set priceListName = priceList.getName() %}
                    {% set priceListId = priceList.getId() %}
                    {% if priceListName == value %}
                        <option value="{{ priceListId }}" selected>{{ priceListName }}</option>
                    {% else %}
                        <option value="{{ priceListId }}">{{ priceListName }}</option>
                    {% endif %}
                {% endfor %}

                {#Testing: Add 'Default' price list#}
                {#{% for priceListName,priceListId in priceLists %}#}
                    {#{% if priceListName == value %}#}
                        {#<option value="{{ priceListId }}" selected>{{ priceListName }}</option>#}
                    {#{% else %}#}
                        {#<option value="{{ priceListId }}">{{ priceListName }}</option>#}
                    {#{% endif %}#}
                {#{% endfor %}#}

                {#<option value=""></option>#}
                {#<option value="2">Internal Pricing</option>#}
                {#<option value="3">Low Manhattan Hospital</option>#}
            </select>
        </div>
        <div class="col-xs-3" align="left">
            {% if updateButton is defined and updateButton %}
                <div class="btn btn-primary btn-sm transres-update-project-specific-btn transres-update-project-pricelist">Update Price List</div>
            {% endif %}
        </div>
    </div>
    </p>
{% endmacro %}

{% macro fieldApprovedProjectBudget( value, label, updateButton ) %}
    <p>
    <div class="row">
        {#<div class="col-xs-3" align="right">#}
        {#</div>#}
        <div class="col-xs-6" align="right">
            <strong>{{ label|raw }}</strong>
        </div>
        <div class="col-xs-3" align="left">
            <input id="transres_update_project_approvedProjectBudget"
                   class="form-control currency-mask-without-prefix submit-on-enter-field"
                   placeholder="Approved Project Budget" type="text"
                   value="{{ value }}"
            >
        </div>
        <div class="col-xs-3" align="left">
            {% if updateButton is defined and updateButton %}
                <div class="btn btn-primary btn-sm transres-update-project-specific-btn transres-update-project-approvedProjectBudget">Update Approved Project Budget</div>
            {% endif %}
        </div>
    </div>
    </p>
{% endmacro %}
{% macro fieldNoBudgetLimit( value, label, updateButton ) %}

    {% if value %}
        {% set checked = "checked" %}
    {% else %}
        {% set checked = "" %}
    {% endif %}

    <p>
    <div class="row">
        {#<div class="col-xs-3" align="right">#}
        {#</div>#}
        <div class="col-xs-6" align="right">
            <strong>{{ label|raw }}</strong>
        </div>
        <div class="col-xs-3" style="width: 50px;" align="left">
            {#value="{{ value }}"#}
            <input id="transres_update_project_noBudgetLimit"
                   type="checkbox"
                   class="form-control"
                   placeholder="No budget limit"
                   {{ checked }}
            >
        </div>
        <div class="col-xs-3" style="width: 50px;" align="left">
            {% if updateButton is defined and updateButton %}
                <div class="btn btn-primary btn-sm transres-update-project-specific-btn transres-update-project-noBudgetLimit">Update "No budget limit"</div>
            {% endif %}
        </div>
    </div>
    </p>
{% endmacro %}

{% macro siteSettings(form, cycle, sitename, specialty) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    {% set specialtyName = 'Default' %}
    {% set specialtyId = 'default' %}
    {% if specialty %}
        {% set specialtyName = specialty.getUppercaseFullName() %}
        {% set specialtyId = specialty.getId() %}
    {% endif %}

    {#{% set specialtyId = 'default' %}#}
    {#{% if specialty %}#}
        {#{% set specialtyId = specialty.getId() %}#}
    {#{% endif %}#}

    {#add test subject and body by choosing invoice#}
    {#<p>#}
        <a href="#" data-toggle="modal" data-target="#modal_test_email_naming_notation_{{ specialtyId }}"
        >Test email subject and body naming notation for {{ specialtyName }}</a>
    {#</p>#}
    {{ transres.emailNamingNotationTest(specialty) }}

    {{ form_start(form) }}

    <div id="form-prototype-data"
         data-userurllink = "{{ usermacros.userUrlLink()|e }}"
         data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
         data-userid = "{{ app.user.id }}"
    ></div>

    {% if form.createDate is defined %}
        {{ formmacros.field_left(form.createDate) }}
    {% endif %}
    {% if form.creator is defined %}
        {{ formmacros.field_left(form.creator) }}
    {% endif %}

    <hr />


    {#<div class="panel panel-primary">#}
        {#<div class="panel-heading">#}
            {#<h4 class="panel-title text-left">#}

            {#</h4>#}
        {#</div>#}
        {#<div id="transres-content-111-{{ specialty.id }}" class="panel-collapse collapse">#}
            {#<div class="panel-body">#}

            {#</div>#}
        {#</div>#}
    {#</div>#}

    {#{% set specialtyId = 'default' %}#}
    {#{% if specialty %}#}
        {#{% set specialtyId = specialty.getId() %}#}
    {#{% endif %}#}

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-email-naming-{{ specialtyId }}">Email's Subject and Body Naming Notation</a>
            </h4>
        </div>
        <div id="transres-email-naming-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">

                {{ transres.emailNamingNotation() }}

            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-project-content-{{ specialtyId }}">Project Request Settings</a>
            </h4>
        </div>
        <div id="transres-project-content-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">
                {{ formmacros.field(form.specimenDetailsComment) }}
                {{ formmacros.field(form.institutionName) }}
                {{ formmacros.field(form.fromEmail) }}
                {{ formmacros.field(form.notifyEmail) }}

                <hr>

                {#form.showMessageToUsers={{ form.vars.value.showMessageToUsers }}#}
                {#{{ formmacros.checkbox_with_value(form.showMessageToUsers,"",form.vars.value.showMessageToUsers) }}#}
                {{ formmacros.field(form.showMessageToUsers) }}
                {{ formmacros.field(form.messageToUsers) }}

                {{ formmacros.field(form.humanTissueFormNote) }}

                {{ formmacros.field(form.recipientFundNumber) }}

                {{ formmacros.field(form.updateProjectFundNumber) }}

                <hr>


                {#{{ formmacros.checkbox_with_value(form.enableNewProjectOnSelector,"",form.vars.value.enableNewProjectOnSelector) }}#}
                {#{{ formmacros.checkbox_with_value(form.enableNewProjectOnNavbar,"",form.vars.value.enableNewProjectOnNavbar) }}#}
                {#{{ formmacros.checkbox_with_value(form.enableNewProjectAccessPage,"",form.vars.value.enableNewProjectAccessPage) }}#}
                {#{{ formmacros.checkbox_with_value(form.updateProjectFundNumber,"",form.vars.value.updateProjectFundNumber) }}#}
                {{ formmacros.field(form.enableNewProjectOnSelector) }}
                {{ formmacros.field(form.enableNewProjectOnNavbar) }}
                {{ formmacros.field(form.enableNewProjectAccessPage) }}

                {{ formmacros.field(form.enableProjectOnNavbar) }}
                {{ formmacros.field(form.enableProjectOnWorkReqNavbar) }}
                {{ formmacros.field(form.enableProjectOnConfig) }}


                {#<hr>#}
                {#<h4>#}
                    {#Project Expiration Settings#}
                {#</h4>#}
                {#{{ formmacros.field(form.projectExprDuration) }}#}
                {#{{ formmacros.field(form.projectExprDurationEmail) }}#}
                {#{{ formmacros.field(form.projectExprDurationChangeStatus) }}#}
                {#{{ formmacros.checkbox_with_value(form.projectExprApply,"",form.vars.value.projectExprApply) }}#}
                {#{{ formmacros.checkbox_with_value(form.projectExprApplyChangeStatus,"",form.vars.value.projectExprApplyChangeStatus) }}#}

                <hr>

                {% if form.transresIntakeForms is defined %}
                    <p>
                    <div class="well form-element-holder user-documents">
                        <label class="col-xs-12 control-label">Intake Form(s) - the most recent will be used</label>
                        <div class="row withpaddingtop">
                            <div class="col-xs-12">
                                {{ usermacros.documentsContainer(form,form.transresIntakeForms,cycle,'noprototype',8,'default','Intake Form','asForm',false) }}
                            </div>
                        </div>
                    </div>
                    </p>
                {% endif %}

            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-project-compemail-{{ specialtyId }}"
                >Notification emails for projects involving Computational Pathology or a request for a bioinformatician</a>
            </h4>
        </div>
        <div id="transres-project-compemail-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">
                {{ formmacros.field(form.compEmailUsers) }}
                {{ formmacros.field(form.compEmailSubject) }}
                {{ formmacros.field(form.compEmailBody) }}
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-project-expr-content-{{ specialtyId }}">Project Expiration Settings (Only for Non-Funded Projects)</a>
            </h4>
        </div>
        <div id="transres-project-expr-content-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">

                <h4>General Settings</h4>

                {{ formmacros.field(form.projectExprDuration) }}
                {{ formmacros.field(form.projectExprDurationEmail) }}
                {{ formmacros.field(form.projectExprDurationChangeStatus) }}
                {#{{ formmacros.checkbox_with_value(form.projectExprApply,"",form.vars.value.projectExprApply) }}#}
                {#{{ formmacros.checkbox_with_value(form.projectExprApplyChangeStatus,"",form.vars.value.projectExprApplyChangeStatus) }}#}
                {% if form.projectExprApply is defined %}
                    {#We don't need projectExprApply, since we can use sendExpriringProjectEmail and sendExpiredProjectEmail#}
                    {{ formmacros.field(form.projectExprApply) }}
                {% endif %}
                {{ formmacros.field(form.projectExprApplyChangeStatus) }}

                <hr>
                <h4>Notification for Expiring Project</h4>

                {#Email#}
                {#H 8 fields:#}
                {{ formmacros.field(form.sendExpriringProjectEmail) }}
                {{ formmacros.field(form.expiringProjectEmailFrom) }}
                {{ formmacros.field(form.expiringProjectEmailSubject) }}
                {{ formmacros.field(form.expiringProjectEmailBody) }}

                <hr>
                <h4>Notification for Expired Project</h4>

                {{ formmacros.field(form.sendExpiredProjectEmail) }}
                {{ formmacros.field(form.expiredProjectEmailFrom) }}
                {{ formmacros.field(form.expiredProjectEmailSubject) }}
                {{ formmacros.field(form.expiredProjectEmailBody) }}

            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-project-reactivation-{{ specialtyId }}">Project Reactivation</a>
            </h4>
        </div>
        <div id="transres-project-reactivation-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">
                {{ formmacros.field(form.sendProjectReactivationRequest) }}
                {{ formmacros.field(form.projectReactivationFromEmail) }}
                {{ formmacros.field(form.projectReactivationSubject) }}
                {{ formmacros.field(form.projectReactivationBody) }}
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-request-content-{{ specialtyId }}">Work Request Default Settings</a>
            </h4>
        </div>
        <div id="transres-request-content-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">
                {#<p>#}
                    {#Please use naming notation:#}
                    {#[[PROJECT ID]] is for Project ID,#}
                    {#[[PROJECT ID TITLE]] is for Project ID, Title,#}
                    {#[[PROJECT SHOW URL]] is for Project Show Url,#}
                    {#[[REQUEST ID]] is for Request ID,#}
                    {#[[REQUEST SUBMITTER]] is for Request Submitter,#}
                    {#[[REQUEST SUBMISSION DATE]] is for Request Submission Date,#}
                    {#[[REQUEST PROGRESS STATUS]] is for Request progress status,#}
                    {#[[REQUEST SHOW URL]] is for Request Show Url,#}
                    {#[[INVOICE ID]] is for Invoice ID#}
                {#</p>#}
                {{ formmacros.field(form.requestCompletedNotifiedEmailSubject) }}
                {{ formmacros.field(form.requestCompletedNotifiedEmail) }}
                {{ formmacros.field(form.accessionType) }}
                {{ formmacros.field(form.emailNoteConcern) }}
            </div>
        </div>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-packingslip-content-{{ specialtyId }}">Packing Slip Default Settings</a>
            </h4>
        </div>
        <div id="transres-packingslip-content-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">
                {% if form.transresPackingSlipLogos is defined %}
                    <p>
                    <div class="well form-element-holder user-documents">
                        <label class="col-xs-12 control-label">Packing Slip logo(s) - the most recent will be used</label>
                        <div class="row withpaddingtop">
                            <div class="col-xs-12">
                                {{ usermacros.documentsContainer(form,form.transresPackingSlipLogos,cycle,'noprototype',8,'default','Packing Slip Logo','asForm',false) }}
                            </div>
                        </div>
                    </div>
                    </p>
                {% endif %}

                {{ formmacros.field(form.transresPackingSlipTitle) }}
                {{ formmacros.field(form.transresPackingSlipHeadline1) }}
                {{ formmacros.field(form.transresPackingSlipHeadline2) }}
                {{ formmacros.field(form.transresPackingSlipHeadlineColor) }}
                {{ formmacros.field(form.transresPackingSlipHighlightedColor) }}
                {{ formmacros.field(form.transresPackingSlipSubHeading1) }}
                {{ formmacros.field(form.transresPackingSlipSubHeading2) }}
                {{ formmacros.field(form.transresPackingSlipFooter1) }}
                {{ formmacros.field(form.transresPackingSlipFooter2) }}
                {{ formmacros.field(form.barcodeSize) }}
                {{ formmacros.field(form.transresPackingSlipFontSize) }}

            </div>
        </div>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-invoice-content-{{ specialtyId }}">Invoice Default Settings</a>
            </h4>
        </div>
        <div id="transres-invoice-content-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">

                {% if form.transresLogos is defined %}
                    <p>
                    <div class="well form-element-holder user-documents">
                        <label class="col-xs-12 control-label">Invoice logo(s) - the most recent will be used</label>
                        <div class="row withpaddingtop">
                            <div class="col-xs-12">
                                {{ usermacros.documentsContainer(form,form.transresLogos,cycle,'noprototype',8,'default','Invoice Logo','asForm',false) }}
                            </div>
                        </div>
                    </div>
                    </p>
                {% endif %}


                {{ formmacros.field(form.transresFromHeader) }}
                {{ formmacros.field(form.transresFooter) }}
                {{ formmacros.field(form.invoiceSalesperson) }}
                {#{{ formmacros.checkbox_with_value(form.showRemittance,"",form.vars.value.showRemittance) }}#}
                {{ formmacros.field(form.showRemittance) }}

                {#<hr>#}
                {#<p>#}
                    {#Please use naming notation:#}
                    {#[[PROJECT ID]] is for Project ID,#}
                    {#[[PROJECT ID TITLE]] is for Project ID, Title,#}
                    {#[[PROJECT SHOW URL]] is for Project Show Url,#}
                    {#[[REQUEST ID]] is for Request ID,#}
                    {#[[REQUEST SUBMITTER]] is for Request Submitter,#}
                    {#[[REQUEST SUBMISSION DATE]] is for Request Submission Date,#}
                    {#[[REQUEST PROGRESS STATUS]] is for Request progress status,#}
                    {#[[REQUEST SHOW URL]] is for Request Show Url,#}
                    {#[[INVOICE ID]] is for Invoice ID#}
                {#</p>#}
                {{ formmacros.field(form.transresNotificationEmailSubject) }}
                {{ formmacros.field(form.transresNotificationEmail) }}

                {#<hr>#}
                {#<h4>Translational Research Unpaid Invoice Reminder Email</h4>#}
                {#<p>#}
                    {#Please use naming notation:#}
                    {#[[INVOICE ID]] is for invoice ID,#}
                    {#[[INVOICE AMOUNT DUE]] is for the amount due,#}
                    {#[[INVOICE DUE DATE AND DAYS AGO]] is for invoice due date,#}
                    {#[[REQUEST SHOW URL]] is for Request Show Url,#}
                    {#[[PROJECT SHOW URL]] is for Project Show Url,#}
                {#</p>#}
                {#{{ formmacros.field(form.invoiceReminderEmail) }}#}
                {#{{ formmacros.field(form.invoiceReminderSchedule) }}#}
                {#{{ formmacros.field(form.invoiceReminderSubject) }}#}
                {#{{ formmacros.field(form.invoiceReminderBody) }}#}

            </div>
        </div>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-reminder-email-{{ specialtyId }}">Reminder Email Settings</a>
            </h4>
        </div>
        <div id="transres-reminder-email-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">

                {#<hr>#}
                {#<h4>Translational Research Reminder Email</h4>#}
                {#{{ transres.emailNamingNotation() }}#}
                {#<p>#}
                    {#Please use naming notation:#}
                    {#<br>[[PROJECT ID]] - project request ID,#}
                    {#<br>[[PROJECT TITLE SHORT]] - short project title,#}
                    {#<br>[[PROJECT TITLE]] - full project title,#}
                    {#<br>[[PROJECT PIS]] - project pis,#}
                    {#<br>[[PROJECT SUBMISSION DATE]] - project submission date,#}
                    {#<br>[[PROJECT STATUS]] - project status,#}
                    {#<br>[[PROJECT STATUS COMMENTS]] - comments for the current project's stage,#}
                    {#<br>[[PROJECT SHOW URL]] - project request show url,#}
                    {#<br>[[PROJECT EDIT URL]] - project request edit url,#}

                    {#<br>[[REQUEST ID]] - work request ID,#}
                    {#<br>[[REQUEST SUBMITTER]] - work request submitter,#}
                    {#<br>[[REQUEST SUBMISSION DATE]] - work request submission date,#}
                    {#<br>[[REQUEST UPDATE DATE]] - work request update date,#}
                    {#<br>[[REQUEST PROGRESS STATUS]] - work request progress status,#}
                    {#<br>[[REQUEST STATUS]] - work request status,#}
                    {#<br>[[REQUEST SHOW URL]] - work request show url,#}
                    {#<br>[[REQUEST CHANGE PROGRESS STATUS URL]] - work request change progress state url,#}
                    {#<br>[[REQUEST NEW INVOICE URL]] - create a new invoice url for this work request,#}

                    {#<br>[[INVOICE ID]] - invoice ID,#}
                    {#<br>[[INVOICE SHOW URL]] - invoice url,#}
                    {#<br>[[INVOICE AMOUNT DUE]] - invoice amount due,#}
                    {#<br>[[INVOICE DUE DATE AND DAYS AGO]] - invoice due date#}
                {#</p>#}

                <h5>Invoice Reminder Email</h5>
                {{ formmacros.field(form.invoiceReminderEmail) }}
                {{ formmacros.field(form.invoiceReminderSchedule) }}
                {{ formmacros.field(form.invoiceReminderSubject) }}
                {{ formmacros.field(form.invoiceReminderBody) }}

                <h5>Delayed Project Request Reminder Email</h5>
                {{ formmacros.field(form.projectReminderDelay_irb_review) }}
                {{ formmacros.field(form.projectReminderDelay_admin_review) }}
                {{ formmacros.field(form.projectReminderDelay_committee_review) }}
                {{ formmacros.field(form.projectReminderDelay_final_review) }}
                {{ formmacros.field(form.projectReminderDelay_irb_missinginfo) }}
                {{ formmacros.field(form.projectReminderDelay_admin_missinginfo) }}
                {{ formmacros.field(form.projectReminderSubject_review) }}
                {{ formmacros.field(form.projectReminderBody_review) }}
                {{ formmacros.field(form.projectReminderSubject_missinginfo) }}
                {{ formmacros.field(form.projectReminderBody_missinginfo) }}

                <h5>Delayed Pending Work Request Reminder Email</h5>
                {{ formmacros.field(form.pendingRequestReminderDelay) }}
                {{ formmacros.field(form.pendingRequestReminderSubject) }}
                {{ formmacros.field(form.pendingRequestReminderBody) }}

                <h5>Delayed Completed Work Request Reminder Email</h5>
                {{ formmacros.field(form.completedRequestReminderDelay) }}
                {{ formmacros.field(form.completedRequestReminderSubject) }}
                {{ formmacros.field(form.completedRequestReminderBody) }}

                <h5>Delayed Work Request (Completed and Notified, without issued invoice) Reminder Email</h5>
                {{ formmacros.field(form.completedNoInvoiceRequestReminderDelay) }}
                {{ formmacros.field(form.completedNoInvoiceRequestReminderSubject) }}
                {{ formmacros.field(form.completedNoInvoiceRequestReminderBody) }}

            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title text-left">
                <a data-toggle="collapse" href="#transres-budget-email-{{ specialtyId }}">Budget Email Settings</a>
            </h4>
        </div>
        <div id="transres-budget-email-{{ specialtyId }}" class="panel-collapse collapse">
            <div class="panel-body">

                {#<hr>#}
                {#<h4>Email Naming Notation</h4>#}
                {#{{ transres.emailNamingNotation() }}#}

                <h4>Over Budget Notification Email</h4>
                {{ formmacros.field(form.overBudgetCalculation) }}
                {#{{ formmacros.checkbox_with_value(form.overBudgetSendEmail,"",form.vars.value.overBudgetSendEmail) }}#}
                {{ formmacros.field(form.overBudgetSendEmail) }}
                {{ formmacros.field(form.overBudgetFromEmail) }}
                {{ formmacros.field(form.overBudgetSubject) }}
                {{ formmacros.field(form.overBudgetBody) }}

                <hr>
                <h4>Approved Budget Notification Email</h4>
                {#{{ formmacros.checkbox_with_value(form.approvedBudgetSendEmail,"",form.vars.value.approvedBudgetSendEmail) }}#}
                {{ formmacros.field(form.approvedBudgetSendEmail) }}
                {{ formmacros.field(form.approvedBudgetFromEmail) }}
                {{ formmacros.field(form.approvedBudgetSubject) }}
                {{ formmacros.field(form.approvedBudgetBody) }}

                <hr>
                <h4>Approved Budget Limit Removal Notification Email </h4>
                {{ formmacros.field(form.budgetLimitRemovalSubject) }}
                {{ formmacros.field(form.budgetLimitRemovalBody) }}

            </div>
        </div>
    </div>

    <p>
    {% if form.save is defined %}
        {{ form_widget(form.save) }}
    {% endif %}
    {% if form.edit is defined %}
        {{ form_widget(form.edit) }}
    {% endif %}
    </p>


    {{ form_end(form) }}

{% endmacro %}
{% macro emailNamingNotation() %}
    <p>
        {#Please use naming notation:#}
        <h4>Project Request:</h4>
        <br>[[CURRENT DATETIME]] - current date time in format MM/DD/YYYY at HH:MM,
        <br>[[PROJECT ID]] - project request ID,
        <br>[[PROJECT SUBMITTER]] - project request submit user,
        <br>[[PROJECT SUBMITTER DETAILS]] - project submitter name, degree, organization, email, phone
        <br>[[PROJECT SUBMISSION DATE]] - project submission date,
        <br>[[PROJECT UPDATER]] - project request update user,
        <br>[[PROJECT UPDATE DATE]] - project request update date,
        <br>[[PROJECT ID TITLE]] - project ID, Title,
        <br>[[PROJECT TITLE SHORT]] - short project title,
        <br>[[PROJECT TITLE]] - full project title,
        <br>[[PROJECT PIS]] - project pis,
        <br>[[PROJECT PATHOLOGIST LIST]] - project pathologist involved list,
        <br>[[PROJECT BILLING CONTACT LIST]] - project billing contact list,
        <br>[[PROJECT STATUS]] - project status,
        <br>[[PROJECT STATUS COMMENTS]] - comments for the current project's stage,
        <br>[[PROJECT FUNDED]] - project "Funded" or "Non-funded",

        <br>[[PROJECT COMPUTATIONAL CATEGORIES]] - project computational data analysis categories,
        <br>[[PROJECT STAT/INFORMATICS SUPPORT]] - project quantity of needed statistical or informatics support hours,

        <br>[[PROJECT SHOW URL]] - project request show url,
        <br>[[PROJECT EDIT URL]] - project request edit url,
        <br>[[PROJECT REQUESTS URL]] - link to list of all work requests for this project,
        <br>[[PROJECT NON-CANCELED INVOICES URL]] - link to list of all latest non-canceled invoices for this project,
        <br>[[PROJECT EXPIRATION DATE]] - project expiration date,

        <hr>
        <h4>Project Closure/Reactivation:</h4>
        <br>[[PROJECT CLOSURE REASON]] - project closure reason,
        <br>[[PROJECT REACTIVATION REQUESTER]] - project reactivation requester (replace inside the sender function),
        <br>[[LATEST PROJECT REACTIVATION REASON]] - latest project reactivation reason (replace inside the sender function),
        <br>[[PROJECT TARGET REACTIVATION STATUS]] - project reactivation target status (replace inside the sender function),
        <br>[[PREVIOS PROJECT REACTIVATION REASON]] - previous project reactivation reason(s),
        <br>[[PROJECT REACTIVATION APPROVE URL]] - project reactivation approve url,
        <br>[[PROJECT REACTIVATION DENY URL]] - project reactivation deny url,

        <hr>
        <h4>Work Request:</h4>
        <br>[[REQUEST ID]] - work request ID,
        <br>[[REQUEST SUBMITTER]] - work request submitter,
        <br>[[REQUEST SUBMISSION DATE]] - work request submission date,
        <br>[[REQUEST UPDATE DATE]] - work request update date,
        <br>[[REQUEST PROGRESS STATUS]] - work request progress status,
        <br>[[REQUEST BILLING STATUS]] - work request billing status,
        <br>[[REQUEST SHOW URL]] - work request show url,
        <br>[[REQUEST CHANGE PROGRESS STATUS URL]] - work request change progress state url,
        <br>[[REQUEST NEW INVOICE URL]] - create a new invoice url for this work request,

        <hr>
        <h4>Invoice:</h4>
        <br>[[INVOICE ID]] - invoice ID,
        <br>[[INVOICE SHOW URL]] - invoice url,
        <br>[[INVOICE AMOUNT DUE]] - invoice amount due,
        <br>[[INVOICE DUE DATE AND DAYS AGO]] - invoice due date

        <hr>
        <h4>Budget:</h4>
        <br>[[PROJECT PRICE LIST]] - project price list (with quotes '...' if not default),
        <br>[[PROJECT APPROVED BUDGET]] - project approved budget,
        <br>[[PROJECT REMAINING BUDGET]] - project remaining budget,
        <br>[[PROJECT OVER BUDGET]] - project over budget amount (the same as negative project remaining budget),
        <br>[[PROJECT SUBSIDY]] - project subsidy,
        <br>[[PROJECT VALUE]] - project value (invoiced or not),

        <br>[[PROJECT NUMBER INVOICES]] - number of the latest invoices for this project,

        <br>[[PROJECT NUMBER OUTSTANDING INVOICES]] - number of the outstanding invoices (issued-unpaid, partially paid) for this project,
        <br>[[PROJECT AMOUNT OUTSTANDING INVOICES]] - amount of the outstanding invoices (issued-unpaid, partially paid) for this project,
        <br>[[PROJECT NUMBER PAID INVOICES]] - number of the paid invoices (Paid in Full) for this project,
        <br>[[PROJECT AMOUNT PAID INVOICES]] - amount of the paid invoices (Paid in Full) for this project,

        <br>[[REQUEST VALUE]] - work request amount (invoiced or not),
        <br>[[PROJECT VALUE WITHOUT INVOICES]] - amount for work requests without invoices for this project,



    </p>
{% endmacro %}

{% macro emailNamingNotationTest(specialty) %}

    {% set specialtyId = 'default' %}
    {% set specialtyName = 'Default' %}
    {% if specialty is defined and specialty %}
        {% set specialtyId = specialty.getId() %}
        {% set specialtyName = specialty.getUppercaseFullName() %}
    {% endif %}

    <div class="modal fade" id="modal_test_email_naming_notation_{{ specialtyId }}" tabindex="-1" role="dialog" aria-labelledby="modal_test_email_naming_notation_Label" aria-hidden="true">
        <div class="modal-dialog" role="document" style="width: 80%">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Test email subject and body naming notation for {{ specialtyName }}</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        {#<select id="transres-invoice-list" class="combobox combobox-width" name="transres-invoice-list">#}
                        {#</select>#}

                        {% set invoices = transres_request_util.getLatestInvoiceLists(specialty) %}
                        <select
                                id="transres-invoice-list"
                                name="transresInvoice[]"
                                class="combobox combobox-width" tabindex="-1"
                                title="Choose an invoice:"
                        >
                            <option value=""></option>
                            {% for invoice in invoices %}
                                {#{% if invoice.getName() == value %}#}
                                    {#<option value="{{ invoice.getId() }}" selected>{{ invoice.getOid() }}</option>#}
                                {#{% else %}#}
                                    <option value="{{ invoice.getId() }}">{{ invoice.getOid() }}</option>
                                {#{% endif %}#}
                            {% endfor %}
                        </select>
                    </p>

                    <p>
                        <button
                                id="transres-test-email-notations"
                                class="btn btn-primary transres-test-email-notations"
                                onclick="transresTestEmailNotations('{{ specialtyId }}')"
                        >Test</button>
                    </p>

                    <p>
                        {#<textarea id="transres-email-test-result" class="textarea form-control"></textarea>#}
                        <div id="transres-email-test-result" style='white-space:pre-line;'></div>
                    </p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
{% endmacro %}

{#  9800.33 =>  $9,800.33 #}
{# -9800.33 => -$9,800.33 #}
{% macro dollarSignValue( value ) %}
    {#{% spaceless %}#}
        {#{% if value is defined and value != null %}#}
            {#{% if value >= 0 %}#}
                {#${{value}}#}
                {#${{value|number_format(2, '.', ',')}}#}
            {#{% else %}#}
                {#-${{value|abs}}#}
                {#-9800.333|number_format(2, '.', ',') => -9,800.33#}

                {#-${{value|abs|number_format(2, '.', ',')}}#}
            {#{% endif %}#}
        {#{% endif %}#}
    {#{% endspaceless %}#}

    {% apply spaceless %}
        {% if value is defined and value != null %}
            {% if value >= 0 %}
                ${{value|number_format(2, '.', ',')}}
            {% else %}
                -${{value|abs|number_format(2, '.', ',')}}
            {% endif %}
        {% endif %}
    {% endapply %}
{% endmacro %}

{#  9800.33 =>  $9,800.33 #}
{# -9800.33 => prefix$9,800.33 #}
{% macro dollarAbsValue( value, prefix ) %}
    {% apply spaceless %}
        {% if value is defined and value != null %}
            {% if value >= 0 %}
                ${{value|number_format(2, '.', ',')}}
            {% else %}
                {{ prefix }}${{value|abs|number_format(2, '.', ',')}}
            {% endif %}
        {% endif %}
    {% endapply %}
{% endmacro %}





{#Used only in Formnode forms#}
{% macro projectFormEdit( form, project, cycle ) %}
    {% import "AppUserdirectoryBundle/Tree/treemacros.html.twig" as treemacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    <div style="display: none">
        {% if form.messageCategory is defined %}
            {{ treemacros.compositeTreeNode(form.messageCategory,cycle,"noprototype") }}
        {% endif %}
    </div>

    <div id="form-node-holder"></div>

    {{ transres.tissueRequestDetails(form,project,cycle) }}

    {{ transres.projectDocument(form,project,cycle) }}
{% endmacro %}
{#Used only in Formnode forms#}
{% macro projectObjFullInfo( project, cycle ) %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}
    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectFullInfoHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectFullInfo" aria-expanded="true">
                        Associated Project Info
                    </a>
                </h4>
            </div>
            <div id="projectFullInfo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="projectFullInfoHeading">
                <div class="panel-body">
                    {{ transres.projectFormShow(null,project,cycle) }}
                    {{ transres.projectObjInfo(project,cycle) }}
                </div>
            </div>
        </div>
    </div>
{% endmacro %}
{#Used only in Formnode forms#}
{% macro projectFormShow( form, project, cycle ) %}

    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectContentHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectContent" aria-expanded="true">
                        Project
                    </a>
                </h4>
            </div>
            <div id="projectContent" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectContentHeading">
                <div class="panel-body">

                    {% set callLogViewClass = "order-white-background" %}
                    <div class="text-left {{ callLogViewClass }}">
                        {{ user_formnode_utility.getFormNodeHolderShortInfoForView(project,project.messageCategory,false)|raw }}
                    </div>

                    {% if form and form is defined %}
                        {{ transres.tissueRequestDetails(form,project,cycle) }}
                    {% endif %}

                    {{ transres.projectDocument(form,project,cycle) }}

                    {% if project.getInvolveHumanTissue() == "Yes" and project.getHumanTissueForms()|length > 0 %}
                        <div class="well well-sm">
                            <p><b>Project's Tissue Form(s):</b></p>
                            {% for tissueFormDocument in project.getHumanTissueForms() %}
                                {#{% set absolutePath = tissueFormDocument.getAbsoluteUploadFullPath() %}#}
                                {% set absolutePath = user_service_utility.getDocumentAbsoluteUrl(tissueFormDocument) %}
                                <p>
                                    <a href="{{ absolutePath }}" target="_blank">
                                        {{ tissueFormDocument.getOriginalname() }} (uploaded {{ tissueFormDocument.getCreatedate()|date('m/d/Y H:i:s') }})
                                    </a>
                                </p>
                            {% endfor %}
                        </div>
                    {% endif %}

                </div>
            </div>
        </div>
    </div>

{% endmacro %}

