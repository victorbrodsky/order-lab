{#{% extends "AppTranslationalResearchBundle/Default/base.html.twig" %}#}

{#{% block title %}#}
    {#{{ title }}#}
{#{% endblock %}#}


{% block content %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppTranslationalResearchBundle/Default/transres.html.twig" as transres %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if form %}
        {{ form_start(form) }}
            <div id="form-prototype-data2"
                 data-userurllink = "{{ usermacros.userUrlLink()|e }}"
                 data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
                 data-userid = "{{ app.user.id }}"
                    {#{% if form %}#}
                        {% if form.projectGoals is defined %}
                            data-prototype-transres-projectgoals = "{{ transres.projectSingleGoal(form.projectGoals,cycle,'transres-projectgoals','prototype',translationalresearch_sitename,1)|e }}"
                        {% endif %}
                    {#{% endif %}#}
            ></div>
            {{ transres.showExistingProjectGoalSection(form,project,cycle) }}
        {{ form_end(form) }}
        {#{{ form_end(form, {'render_rest': false}) }}#}
    {% endif %}
{% endblock %}


{% block additionaljs %}
    <script type="text/javascript">
        $(document).ready(function() {
            //Disable all existing fields. Enable only new fields.
            console.log('goal: disable all existing fields');
            $('#panel-projectIncludeGoals').find('input, textarea, select').attr('disabled','disabled');
        });
        function updateProjectIncludeGoals() {
            console.log('updateProjectIncludeGoals');

            //get new goals (enabled, not dosabled) and send by ajax to update the goals
            //var description = $(':textarea[class=projectgoal-description]:not(:disabled)').val();
            //var description = $('.projectgoal-description:not(:disabled)').val();
            //console.log('description='+description);

            var projectGoalData = [];
            $('.projectgoal-description:not(:disabled)').each(function() {
                var projectGoalId = $(this).attr('id');
                var description = $(this).val();
                console.log('projectGoalId='+projectGoalId+', description='+description);
                projectGoalData.push(
                    {
                        'id': projectGoalId,
                        'description': description
                    }
                );
            });

            var projectField = $('#oleg_translationalresearchbundle_request_project');

            var projectId = null;
            if( projectField && projectField.length ) {
                projectId = projectField.val();
            } else {
                projectId = $('#oleg_translationalresearchbundle_request_project').val();
            }
            console.log("1 transresRecalculateRemaniningBudget: projectId="+projectId);

            if( projectId == null || typeof projectId === "undefined" ) {
                projectId = $('#oleg_translationalresearchbundle_projectgoal_id').val();
            }
            console.log("2 transresRecalculateRemaniningBudget: projectId="+projectId);

            if( projectId == null || typeof projectId === "undefined" ) {
                console.log("transresRecalculateRemaniningBudget: projectId is NULL");
                return;
            }

            $('#project-goals-feedback').hide();
            $('#project-goals-feedback').html("");

            var url = Routing.generate('translationalresearch_add_project_goals_ajax', {id: projectId});
            $.ajax({
                url: url,
                timeout: _ajaxTimeout,
                type: "POST",
                data: {projectId: projectId, projectGoals: projectGoalData},
                dataType: 'json',
                async: asyncflag
            }).success(function (response) {
                //console.log('response=', response);
                //$('#panel-projectFullInfo').html(response);
                //parse response[0]['result'] to remove non added projectGoal, disable added project goals.
                response.forEach(function(item){
                    var error = item['error'];
                    var sectionId = item['id'];
                    var message = item['message'];
                    var projectGoalEntityId = item['projectGoalEntityId'];
                    if( error == 0 ) {
                        $("#"+sectionId).prop('disabled', true);
                        $("#"+sectionId).closest('.transres-projectgoals').find('.btn').remove();
                        //TODO: disable status field
//                        $('#project-goals-feedback').show();
//                        $('#project-goals-feedback').append('<p>'+message+'</p>');
                    } else {
                        //remove parent with class 'transres-projectgoals'
                        $("#"+sectionId).closest('.transres-projectgoals').remove();
                        //$("#"+sectionId).remove();
//                        $('#project-goals-feedback').show();
//                        $('#project-goals-feedback').append('<p>'+message+'</p>');
                    }
                    $('#project-goals-feedback').show();
                    $('#project-goals-feedback').append('<p>'+message+'</p>');
                });

//                $('#project-goals-feedback').show();
//                $('#project-goals-feedback').html(response[0]['message']);
            }).done(function () {
                //console.log('response=' + response);
            }).error(function (jqXHR, textStatus, errorThrown) {
                console.log('Error : ' + errorThrown);
                $('#panel-projectFullInfo').html(errorThrown);
            });
        }

    </script>
{% endblock %}



