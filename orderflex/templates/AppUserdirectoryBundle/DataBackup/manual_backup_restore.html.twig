{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

{% set extendStr = "AppUserdirectoryBundle/Default/base.html.twig" %}
{% extends extendStr %}


{% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}


{% block title %}
    {{ title }}
{% endblock %}



{% block content %}

    <input type="hidden" id="formcycle" value="{{ cycle }}" />
    <input type="hidden" id="fileId" value="" />
    <input type="hidden" id="disableIdleTimeout" value="1" />


    <input type="hidden" id="dbFreeSpaceBytes" value="{{ dbFreeSpaceBytes }}" />
    <input type="hidden" id="uploadFreeSpaceBytes" value="{{ uploadFreeSpaceBytes }}" />

    <h4 class="text-info" align="center">{{ title }}</h4>
    <p>Backup files location: <strong>{{ networkDrivePath }}</strong><br>
        DB backup files will have the format: <strong>backupdb-***.dump.gz</strong><br>
        Upload folder backup file will have the format: <strong>backupfiles-***.tar.gz</strong>
    </p>
    <p>{{ estimateTimeMsg|raw }}</p>
    <p>{{ freeSpace|raw }}</p>
    {#<p>Refresh this page to see the uploaded files in the select box below.</p>#}

    {#Backup panel#}
    <div class="panel panel-default">
        <div class="panel-heading">Create Backups</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-1"></div>
                <div class="col-xs-2" align="right">
                    <a  id="btn-create-backup"
                        general-data-confirm="Are you sure you want to create a database backup?"
                        class="btn btn-info" href="{{ path(employees_sitename~'_create_backup') }}"
                    >Create DB Backup</a>
                </div>
                <div class="col-xs-2" align="left">
                    <a  id="btn-create-backup-upload"
                        general-data-confirm="Are you sure you want to create a upload folder backup?"
                        class="btn btn-info" href="{{ path(employees_sitename~'_create_backup_upload') }}"
                    >Create Upload Folder Backup</a>
                </div>

                <div class="col-xs-7" align="left">
                    {#FineUploader#}
                    <div id="fine-uploader"></div>
                    {#Uppu.io#}
                    {#<div id="files-drag-drop"></div>#}
                </div>
            </div>

            <br>
            <div class="row">
                <div class="col-xs-2" align="left"></div>
                <div class="col-xs-8" align="left">
                    <select id="create-backup-file-id" class="combobox-backup create-backup-required" style="width: 30%;">
                        <option value=""></option>
                        {% for  backupFile in backupFiles %}
                            <option value="{{ backupFile.id }}">{{ backupFile.name }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-xs-2" align="left"></div>
            </div>

            <div class="row" style="margin-top: 3px;">
                <a  id="btn-download-backup-href"
                    target="_blank"
                    disabled
                    class="btn btn-info"
                    href="{{ path(employees_sitename~'_download_backup_file', {'filename': null}) }}"
                >Download selected backup</a>

                <a  id="btn-delete-file-href"
                    general-data-confirm="Are you sure you want to delete selected file?"
                    disabled
                    class="btn btn-warning"
                    href="{{ path(employees_sitename~'_delete_file', {'filename': null}) }}"
                >Delete selected file</a>
            </div>

        </div>
    </div>

    <br>

    {#Restore panel#}
    <div class="panel panel-default">
        <div class="panel-heading">Restore</div>

        <div class="panel-body">

            <div class="row">
                {#<div class="col-xs-1" align="left"></div>#}
                <div class="col-xs-8" align="left">
                    <p>
                        <select id="backup-file-id" class="combobox-backup backup-required" style="width: 30%;">
                            <option value=""></option>
                            {% for  backupFile in backupFiles %}
                                <option value="{{ backupFile.id }}">{{ backupFile.name }}</option>
                            {% endfor %}
                        </select>
                    </p>
                </div>
                <div class="col-xs-4" align="left">
                    <p>
                        <select id="backup-env-id" class="combobox backup-required" style="width: 30%;">
                            <option value=""></option>
                            {% for  environment in environments %}
                                <option value="{{ environment.id }}">{{ environment.name }}</option>
                            {% endfor %}
                        </select>
                    </p>
                </div>

                {#<div class="col-xs-2" align="right">#}
                    {#Download selected file /order/index_dev.php/directory/download/printable-lab-directory#}
                    {#<a  id="btn-download-backup-href"#}
                        {#target="_blank"#}
                        {#disabled#}
                        {#class="btn btn-info"#}
                        {#href="{{ path(employees_sitename~'_download_backup_file', {'filename': null}) }}"#}
                    {#>Download selected backup</a>#}
                    {#<button#}
                            {#id="btn-download-backup"#}
                            {#class="btn"#}
                            {#type="button"#}
                            {#target="_blank"#}
                            {#disabled#}
                            {#onclick="return userDownloadBackup()"#}
                    {#>Download selected backup file</button>#}
                    {#</span>#}
                {#</div>#}
                {#<div class="col-xs-2" align="left">#}
                    {#<a  id="btn-delete-file-href"#}
                        {#general-data-confirm="Are you sure you want to delete selected file?"#}
                        {#disabled#}
                        {#class="btn btn-warning"#}
                        {#href="{{ path(employees_sitename~'_delete_file', {'filename': null}) }}"#}
                    {#>Delete selected file</a>#}
                {#</div>#}
            </div>

            <br>


            {% set disabledFalg = 'disabled' %}
            {#{% if backupFiles|length > 0 %}#}
                {#{% set disabledFalg = '' %}#}
            {#{% endif %}#}
            {#<p>#}
                {#<a#}
                    {#id="btn-restore-backup"#}
                    {#class="btn btn-danger"#}
                    {#general-data-confirm="Are you sure you want to restore DB from backup? This action will overwrite all existing data."#}
                    {#href="{{ path(employees_sitename~'_restore_backup',{'backupFilePath': document.getElementById("fileId").val()}) }}"#}
                    {#href="#"#}
                    {#{{ disabledFalg }}#}
                    {#onclick="return restoreBackup();"#}
                {#>Restore Backup</a>#}
            {#</p>#}

            {#Prevent trigger saved logins in the preceding field#}
            <div class="input-group" style="display: none">
                <input class="form-control"/>
            </div>

            <div class="row">
                <div class="col-lg-3"></div>
                <div class="col-lg-6" align="left">
                    <p>
                    <div class="input-group">
                        <input
                            type="password"
                            id="backup-user-token"
                            class="form-control"
                            autocomplete="off"
                            placeholder="Enter your login password"
                            style="min-width: 100%"
                            required
                            readonly onfocus="this.removeAttribute('readonly');"
                        >
                        <span class="input-group-btn" style="padding-left: 3px;">
                            <button
                                    id="btn-restore-backup"
                                    class="btn btn-danger"
                                    type="button"
                                    {{ disabledFalg }}
                                    onclick="userVerifyRestoreBackup(this,'db')"
                            >Restore DB Backup</button>
                        </span>
                        <span class="input-group-btn" style="padding-left: 3px;">
                            <button
                                    id="btn-restore-files-backup"
                                    class="btn btn-danger"
                                    type="button"
                                    {{ disabledFalg }}
                                    onclick="userVerifyRestoreBackup(this,'files')"
                            >Restore Upload Files Backup</button>
                        </span>
                    </div><!-- /input-group -->
                    </p>
                </div>
                <div class="col-lg-3"></div>
            </div>

            {#<div class="row">#}
                {#<div class="col-lg-4"></div>#}
                {#<div class="col-lg-4" align="left">#}
                    {#<p>#}
                    {#<div class="input-group">#}
                        {#<input#}
                                {#type="password"#}
                                {#id="backup-user-token"#}
                                {#class="form-control"#}
                                {#autocomplete="off"#}
                                {#placeholder="Enter password"#}
                                {#style="min-width: 100%"#}
                                {#required#}
                                {#readonly onfocus="this.removeAttribute('readonly');"#}
                        {#>#}
                        {#<span class="input-group-btn">#}
                            {#<button#}
                                    {#id="btn-restore-uploadfiles-backup"#}
                                    {#class="btn btn-danger"#}
                                    {#type="button"#}
                                    {#{{ disabledFalg }}#}
                                    {#onclick="userVerifyRestoreUploadfilesBackup(this)"#}
                            {#>Restore Upload Files Backup</button>#}
                        {#</span>#}
                    {#</div><!-- /input-group -->#}
                    {#</p>#}
                {#</div>#}
                {#<div class="col-lg-4"></div>#}
            {#</div>#}

        </div> {#panel-body#}
    </div> {#panel#}

    <br>

    <div id="backup-msg-danger-box" class="alert alert-danger" style="display: none; margin-top: 5px; margin-bottom: 5px;"></div>
    <div id="backup-msg-success-box" class="alert alert-success" style="display: none; margin-top: 5px; margin-bottom: 5px;"></div>

{% endblock %}


{% block additionalcss %}
    {#FineUploader#}
    <link rel="stylesheet" type="text/css" href="{{ asset('orderassets/AppUserdirectoryBundle/fine-uploader/fine-uploader-new.css') }}" />
    <link rel="stylesheet" type="text/css" href="{{ asset('orderassets/AppUserdirectoryBundle/fine-uploader/fine-uploader-gallery.css') }}" />

    {#Uppy#}
    {#{{ encore_entry_link_tags('user-uppy-css') }}#}

    {#jQuery File Upload#}
    {#<link rel="stylesheet" type="text/css" href="{{ asset('orderassets/AppUserdirectoryBundle/jquery-file-upload/css/jquery.fileupload.css') }}" />#}
{% endblock %}
{% block additionaljs %}

    {#FineUploader#}
    {#https://docs.fineuploader.com/quickstart/01-getting-started.html#}
    {#https://docs.fineuploader.com/branch/master/quickstart/02-setting_options.html#}
    {% include 'AppUserdirectoryBundle/DataBackup/gallery.html' %}
    <script src="{{ asset('orderassets/AppUserdirectoryBundle/fine-uploader/fine-uploader.js') }}"></script>

    {#Uppy#}
    {#{{ encore_entry_script_tags('user-uppy') }}#}


    <script language="Javascript">

        var _backupAjaxTimeout = 1800000; //millisec 1000 = 1 sec

        $(document).ready(function () {


            $('.combobox-backup').select2({
                placeholder: "Select a file",
                allowClear: true,
                width: '100%',
                dropdownAutoWidth: true,
                selectOnBlur: false,
                dataType: 'json',
                quietMillis: 100,
                //multiple: false,
                //data: data,
                //createSearchChoice: null,
                //matcher: null
            });


            userFineUploader();

            $('.create-backup-required').on("change", function(e) {
                var fileId = $('#create-backup-file-id').select2('val'); //$(this).select2('val');

                //var origHref = $('#btn-download-backup-href').attr('href');
                var origHref = Routing.generate('employees_download_backup_file');
                var origDeleteHref = Routing.generate('employees_delete_file');

                if( fileId ) {
                    //var href = $('#btn-download-backup-href').attr('href');
                    href = origHref + "/" + fileId;
                    $('#btn-download-backup-href').removeAttr('disabled');
                    $('#btn-download-backup-href').attr("href", href);

                    //btn-delete-file-href
                    href = origDeleteHref + "/" + fileId;
                    $('#btn-delete-file-href').removeAttr('disabled');
                    $('#btn-delete-file-href').attr("href", href);
                } else {
                    $('#btn-download-backup-href').attr('disabled', true);
                    $('#btn-download-backup-href').attr("href", origHref);

                    $('#btn-delete-file-href').attr('disabled', true);
                    $('#btn-delete-file-href').attr("href", origDeleteHref);
                }
            });

            $('.backup-required').on("change", function(e) {
                var fileId = $('#backup-file-id').select2('val'); //$(this).select2('val');
                var env = $('#backup-env-id').select2('val');

                //var origHref = $('#btn-download-backup-href').attr('href');
                //var origHref = Routing.generate('employees_download_backup_file');
                //var origDeleteHref = Routing.generate('employees_delete_file');

                if( fileId && env ) {
                    console.log('fileId=' + fileId + '; env=' + env);
                    //$('#fileId').val(fileId);
                    if( fileId.includes('backupdb') && fileId.includes('.gz') ) {
                        $('#btn-restore-backup').removeAttr('disabled');
                    } else {
                        $('#btn-restore-backup').attr('disabled', true);
                    }
                } else {
                    //console.log('No file selected');
                    $('#btn-restore-backup').attr('disabled', true);
                }

                if( fileId ) {
                    //var href = $('#btn-download-backup-href').attr('href');
                    //href = origHref + "/" + fileId;
                    //$('#btn-download-backup-href').removeAttr('disabled');
                    //$('#btn-download-backup-href').attr("href", href);

                    //btn-delete-file-href
                    //href = origDeleteHref + "/" + fileId;
                    //$('#btn-delete-file-href').removeAttr('disabled');
                    //$('#btn-delete-file-href').attr("href", href);

                    if( fileId.includes('backupfiles') && fileId.includes('.tar.gz') ) {
                        $('#btn-restore-files-backup').removeAttr('disabled');
                    } else {
                        $('#btn-restore-files-backup').attr('disabled', true);
                    }
                } else {
                    //$('#btn-download-backup-href').attr('disabled', true);
                    //$('#btn-download-backup-href').attr("href", origHref);

                    //$('#btn-delete-file-href').attr('disabled', true);
                    //$('#btn-delete-file-href').attr("href", origDeleteHref);

                    $('#btn-restore-files-backup').attr('disabled', true);
                }
            });

//            $('#upload_single_file_submit').click(function(e) {
//                $(this).text("Please wait...").attr('disabled', true);
//            });

        });

        //https://github.com/FineUploader/server-examples/tree/3.8.0/php
        //Use this:
        //FineUploader/server-examples: 4.0.0 (t12ung/php-traditional-server https://github.com/t12ung/php-traditional-server/tree/master)
        //https://docs.fineuploader.com/branch/master/quickstart/03-setting_up_server.html
        //https://github.com/FineUploader/server-examples/blob/4.0.0/php/traditional/endpoint.php
        //"/vendor/fineuploader/php-traditional-server/endpoint.php"
        // /src/App/UploadBundle/endpoint.php
        //src/App/UploadBundle/endpoint.php
        function userFineUploader() {
            //var endpointUrl = Routing.generate('employees_upload_chunk_file');
            var endpointUrl = Routing.generate('fineuploader_upload_chunk_file');

            var uploader = new qq.FineUploader({
                //debug: true,
                element: document.getElementById('fine-uploader'),
                request: {
                    endpoint: endpointUrl
                },
                deleteFile: {
                    //enabled: true,
                    endpoint: endpointUrl
                },
                chunking: {
                    enabled: true,
                    concurrent: {
                        enabled: true
                    },
                    success: {
                        endpoint: endpointUrl+'?done' //"/vendor/fineuploader/php-traditional-server/endpoint.php?done"
                    }
                },
                resume: {
                    enabled: true
                },
                retry: {
                    enableAuto: true
                },
                callbacks: {
//                    onDelete: function(id) {
//                        // ...
//                    },
//                    onDeleteComplete: function(id, xhr, isError) {
//                        //...
//                    },
                    onAllComplete: function(succeeded, failed) {
                        if( failed.length > 0 ) {
                            alert("Error: Some files were not uploaded");
                        } else {
                            window.location.reload();
                        }
                    },
                }
            });

        }

//        $('#btn-download-backup').click(function(e) {
//            userDownloadBackup(e);
//        });
//        function userDownloadBackup(e) {
//            console.log("userDownloadBackup start");
//
//            //disable btn-download-backup buttons
//            $('#btn-create-backup').attr('disabled', true);
//            $('#btn-create-backup-upload').attr('disabled', true);
//            $('#btn-download-backup').attr('disabled', true);
//
//            var fileId = $('#backup-file-id').select2('val');
//
//            var url = Routing.generate('employees_download_backup_file');
//            url = url + '?filename=' + fileId;
//            console.log("url="+url);
//
//            e.preventDefault();  //stop the browser from following
//            window.location.href = url;
//            return false;
//        }

        var _origBtnTitle = "Restore Backup";

        function userVerifyRestoreBackup(btn,type) {
            console.log("userVerifyRestoreBackup start");

            $('#backup-msg-danger-box').html("");
            $('#backup-msg-danger-box').hide();

            //disable backup buttons
            $('#btn-create-backup').attr('disabled', true);
            $('#btn-create-backup-upload').attr('disabled', true);
            $('#btn-download-backup-href').attr('disabled', true);
            $('#btn-delete-file-href').attr('disabled', true);

            var typeStr = type.toUpperCase();

            var result = confirm("Warning!!! Are you sure you want to load/restore backup "+typeStr+"? This action will overwrite all existing data!");
            if (result) {
                //Logic to delete the item
            } else {
                return;
            }

            var lbtn = null;
            //var lbtn = Ladda.create( btn );
            userStartBtn(btn,lbtn);
            setTimeout(function(){
                //do what you need here
                userVerifyRestoreBackupAction(btn,lbtn,type);

                //enable backup buttons
                console.log("enable backup buttons");
                $('#btn-create-backup').removeAttr('disabled');
                $('#btn-create-backup-upload').removeAttr('disabled');
                $('#btn-download-backup-href').removeAttr('disabled');
                $('#btn-delete-file-href').removeAttr('disabled');

            }, 1000);
        }

        function userVerifyRestoreBackupAction(btn,lbtn,type) {
            //disable btn does not work here, therefore use userVerifyRestoreBackup with setTimeout
            //console.log("Disable btn");
            //var lbtn = '';
            //var lbtn = Ladda.create( btn );
            //userStartBtn(btn,lbtn);

            var file = $('#backup-file-id').select2('data');
            if( file ) {

                //Verify password
                var token = $('#backup-user-token').val();
                var error = "Incorrect password. Please try again.";

                var url = Routing.generate('employees_authenticate_user');
                $.ajax({
                    url: url,
                    timeout: _backupAjaxTimeout,
                    type: "POST",
                    async: true,
                    data: {token: token}
                }).success(function(data) {
                    //console.log("data="+data);
                    if( data == "OK" ) {
                        $('#backup-msg-danger-box').html("");
                        $('#backup-msg-danger-box').hide();
                        //userStopBtn(btn,lbtn);
                        //userDirectRestoreBackup(btn,lbtn);
                        userRestoreBackupAjax(btn,lbtn,type);
                    } else {
                        $('#backup-msg-danger-box').html(error);
                        $('#backup-msg-danger-box').show();
                        userStopBtn(btn,lbtn);
                    }
                }).fail(function(jqXHR, exception) {
                    //alert(error);
                    userStopBtn(btn,lbtn);
                    $('#backup-msg-danger-box').html(exception);
                    $('#backup-msg-danger-box').show();
                }).done(function() {
                    //userStopBtn(btn,lbtn);
                    console.log("token verification done");
                });

                //userDirectRestoreBackup(btn,lbtn);

            } else {
                console.log("no backup file");
            }
        }

        function userRestoreBackupAjax(btn,lbtn,type) {

            $('#backup-msg-danger-box').html("");
            $('#backup-msg-danger-box').hide();

            var file = $('#backup-file-id').select2('data');
            if( !file ) {
                console.log("no backup file");
                alert("no backup file selected");
            }

            //var lbtn = Ladda.create( btn );
            //userStartBtn(btn,lbtn);

            var fileId = file.id;
            console.log("fileId=" + fileId);

            var env = null;
            var envBox = $('#backup-env-id').select2('data');
            if( envBox ) {
                env = envBox.text;
            }
            console.log("env=" + env);

            var url = null;
            if( type == 'db' ) {
                url = Routing.generate('employees_restore_backup_ajax');
            } else if( type == 'files' ) {
                url = Routing.generate('employees_restore_backup_files_ajax');
            } else {
                $('#backup-msg-danger-box').html('Invalid restore type='+type);
                $('#backup-msg-danger-box').show();
                return;
            }

            $.ajax({
                url: url,
                timeout: _backupAjaxTimeout,
                type: "POST",
                //async: false, //true,
                async: true, //true,
                data: {fileId: fileId, env: env},
                dataType: 'json'
            }).success(function(data) {
                //console.log("data="+data);
                console.log("userRestoreBackupAjax data.status="+data.status);
                console.log("userRestoreBackupAjax data.message="+data.message);
                if( data.status == 'OK' ) {
                    console.log("restore ok");
                    $('#backup-msg-danger-box').html("");
                    $('#backup-msg-danger-box').hide();
                    //backup-msg-success-box
                    $('#backup-msg-success-box').html(data.message);
                    $('#backup-msg-success-box').show();

                    //userPostRestoreAjax(btn,lbtn,type);
                    //userPostRestoreEventLogAjax(btn,lbtn,type,"restored");

                    if( type == 'db' ) {
                        var redirectUrl = Routing.generate('employees_post_restore_eventlog', {
                            type: type,
                            msg: "restored"
                        });
                        window.location.replace(redirectUrl);
                    }
                } else {
                    console.log("restore error");
                    $('#backup-msg-danger-box').html(data.message);
                    $('#backup-msg-danger-box').show();
                }
            })
            .fail(function(jqXHR, textStatus, error) {
                //alert(error);
                var failMsg = "restore might fail. jqXHR.status="+jqXHR.status+", textStatus="+textStatus+", error="+error;
                console.log(failMsg);
                if( error == 'Gateway Timeout' ) {
                    var timeoutMsg = "Restore completed. Reloading ...";
                    $('#backup-msg-success-box').html(timeoutMsg);
                    $('#backup-msg-success-box').show();

                    //userPostRestoreEventLogAjax(btn,lbtn,type,"restore might fail");

                    var redirectUrl = Routing.generate('employees_post_restore_eventlog',{type: type, msg: "timeout"});
                    window.location.replace(redirectUrl);
                    //location.reload();
                } else {
                    $('#backup-msg-danger-box').html(failMsg);
                    $('#backup-msg-danger-box').show();
                }
            })
            .done(function() {
                userStopBtn(btn,lbtn);
                console.log("restore done");
            });
        }

        //NOT USED
        function userPostRestoreAjax(btn,lbtn,type) {

            if( type != 'db' ) {
                return;
            }

            $('#backup-msg-danger-box').html("");
            $('#backup-msg-danger-box').hide();

            var url = Routing.generate('employees_post_restore_ajax');

            $.ajax({
                url: url,
                timeout: _backupAjaxTimeout,
                type: "POST",
                async: false, //true,
                //data: {fileId: fileId, env: env},
                dataType: 'json'
            }).success(function(data) {
                console.log("user PostRestoreAjax data="+data);
                console.log("user PostRestoreAjax data.status="+data.status);
                console.log("user PostRestoreAjax data.message="+data.message);
                if( data.status == 'OK' ) {
                    console.log("post restore ok");
                    $('#backup-msg-danger-box').html("");
                    $('#backup-msg-danger-box').hide();
                    //backup-msg-success-box
                    //$('#backup-msg-success-box').html(data.message);
                    //$('#backup-msg-success-box').show();
                } else {
                    console.log("post restore error");
                    $('#backup-msg-danger-box').html(data.message);
                    $('#backup-msg-danger-box').show();
                }
            }).fail(function(jqXHR, textStatus, error) {
                //alert(error);
                var failMsg = "post restore fail. textStatus="+textStatus+", error="+error;
                console.log(failMsg);
                $('#backup-msg-danger-box').html(failMsg);
                $('#backup-msg-danger-box').show();
            }).done(function() {
                userStopBtn(btn,lbtn);
                console.log("post restore done");
            });
        }

        //NOT USED
        function userPostRestoreEventLogAjax(btn,lbtn,type,msg) {
            $('#backup-msg-danger-box').html("");
            $('#backup-msg-danger-box').hide();

            var url = Routing.generate('employees_post_restore_eventlog_ajax');

            $.ajax({
                url: url,
                timeout: _backupAjaxTimeout,
                type: "POST",
                async: false, //true,
                data: {type: type, msg: msg},
                dataType: 'json'
            }).success(function(data) {
                console.log("user PostRestoreEventLogAjax data="+data);
                console.log("user PostRestoreEventLogAjax data.status="+data.status);
                console.log("user PostRestoreEventLogAjax data.message="+data.message);
                if( data.status == 'OK' ) {
                    console.log("post restore EventLog ok");
                    $('#backup-msg-danger-box').html("");
                    $('#backup-msg-danger-box').hide();
                    //backup-msg-success-box
                    //$('#backup-msg-success-box').html(data.message);
                    //$('#backup-msg-success-box').show();
                } else {
                    console.log("post restore EventLog error");
                    $('#backup-msg-danger-box').html(data.message);
                    $('#backup-msg-danger-box').show();
                }
            }).fail(function(jqXHR, textStatus, error) {
                //alert(error);
                var failMsg = "post restore EventLog fail. textStatus="+textStatus+", error="+error;
                console.log(failMsg);
                $('#backup-msg-danger-box').html(failMsg);
                $('#backup-msg-danger-box').show();
            }).done(function() {
                userStopBtn(btn,lbtn);
                console.log("post restore EventLog done");
            });
        }

        function userStartBtn(btn,lbtn) {
            _origBtnTitle = $(btn).text();
            $(btn).prop('disabled',true);
            $(btn).text('Please wait...');
            //lbtn.start();
        }
        function userStopBtn(btn,lbtn) {
            //lbtn.stop();
            $(btn).prop('disabled',false);
            $(btn).text(_origBtnTitle); //'Restore Backup'
        }





        //NOT USED
        //call restore directly
        function userDirectRestoreBackup(btn,lbtn) {
            var file = $('#backup-file-id').select2('data');
            if( file ) {
                var fileId = file.id;
                console.log("fileId=" + fileId);

                var url = Routing.generate('employees_restore_backup');
                url = url + "/" + fileId;
                console.log("url=" + url);

                window.location.replace(url);
            } else {
                console.log("no backup file");
            }
        }

//        function restoreBackup_ORIG() {
//            var result = confirm("Warning!!! Are you sure you want to load backup DB? This action will overwrite all existing data!");
//            if (result) {
//                //Logic to delete the item
//            } else {
//                return;
//            }
//
//            var file = $('#backup-file-id').select2('data');
//            if( file ) {
//                var fileId = file.id;
//                console.log("fileId=" + fileId);
//
//                var url = Routing.generate('employees_restore_backup');
//                url = url + "/" + fileId;
//                console.log("url=" + url);
//
//                window.location.replace(url);
//            } else {
//                console.log("no backup file");
//            }
//        }

    </script>

{% endblock %}
