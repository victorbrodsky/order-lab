{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

{% macro nonLiveSiteRedirect() %}
    {% if app.environment == 'prod' %}
        {#Since the Live site variable is not set (right?) it should not show the last sentence at all.#}
        {% set environmentServer = user_security_utility.getSiteSettingParameter('environment') %}
        {% if environmentServer %}
            {% if environmentServer != 'live' %}
                {% if environmentServer != 'dev' %}
                    {#redirect for non admin users#}
                    {% if app.user and is_granted('IS_AUTHENTICATED_FULLY') and not (is_granted('ROLE_PLATFORM_DEPUTY_ADMIN') or is_granted('ROLE_TESTER')) %}
                        {% if "test" not in app.user.primaryPublicUserId %}
                            <meta http-equiv="refresh" content="0; url={{ user_security_utility.getSiteSettingParameter('liveSiteRootUrl') }}" />
                        {% endif %}
                    {% endif %}
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}
{% endmacro %}
{% macro nonLiveSiteWarning() %}
    {% if user_security_utility.getSiteSettingParameter(null) == "[Site Settings is not initialized]" %}
        <p>
        <div class="alert alert-danger text-center">
            Please complete the installation as per instructions.
        </div>
        </p>
    {% endif %}
    {% if user_security_utility.getSiteSettingParameter('maintenance') == true %}
        <p>
        <div class="alert alert-danger text-center">
        The site is in maintenance mode. You may not be able to log in. Please come back when the updates are complete.
        </div>
        </p>
    {% endif %}
    {% if user_security_utility.getSiteSettingParameter('environment') != 'live' %}
        <p>
        <div class="alert alert-danger text-center">
            THIS IS A TEST SERVER. USE ONLY FOR TESTING.&nbsp;
            {% set liveSiteRootUrl = user_security_utility.getSiteSettingParameter('liveSiteRootUrl') %}
            {% if liveSiteRootUrl %}
                LIVE SITE IS <a href="{{ user_security_utility.getSiteSettingParameter('liveSiteRootUrl') }}">HERE</a>.
            {% else %}
                {% if is_granted('ROLE_PLATFORM_DEPUTY_ADMIN') %}
                    ADD LINK TO THE LIVE SITE <a href="{{ path('employees_siteparameters') }}">HERE</a> OR SET THE "ENVIRONMENT" TO "live".
                {% endif %}
            {% endif %}
        </div>
        </p>
    {% endif %}
{% endmacro %}


{% macro browserCheck() %}
    {#{% set browserCheck = user_service_utility.browserCheck() %}#}
    {#session has been set in loginPage method in SecurityController#}
    {% set browserCheck = app.session.get('browserWarningInfo') %}
    {% if browserCheck %}
        <p>
        <div class="alert alert-danger" role="alert">
            {{ browserCheck|raw }}
        </div>
        </p>
    {% endif %}
{% endmacro %}


{% macro siteSwitch() %}

    {% import _self as usermacros %}

    <li id="nav-bar-siteswitch" class="dropdown">
        {#bug:https://github.com/twbs/bootstrap/issues/13657 style="font-size:18px;" or multiple by 12#}
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" style="padding-bottom:12px;">
            <span class="glyphicon glyphicon-th" style="font-size:18px;"></span>
            <b class="caret"></b>
        </a>
        <ul class="dropdown-menu">

            {% set iconScan = '<img src="'~asset('favicon.ico')~'" alt="Glass Slide Scan Orders" height="18" width="18">' %}
            {{ usermacros.siteSingleSwitchElement(scan_sitename,iconScan,'Glass Slide Scan Orders') }}

            {% set iconEmployees = '<img src="'~asset('orderassets/AppUserdirectoryBundle/form/img/users-1-64x64.png')~'" alt="Employee Directory" height="18" width="18">' %}
            {{ usermacros.siteSingleSwitchElement(employees_sitename,iconEmployees,'Employee Directory') }}

            {{ usermacros.siteSingleSwitchElement(fellapp_sitename,'<span class="glyphicon glyphicon-file"></span>','Fellowship Applications') }}
            {{ usermacros.siteSingleSwitchElement(resapp_sitename,'<span class="glyphicon glyphicon-certificate"></span>','Residency Applications') }}
            {{ usermacros.siteSingleSwitchElement(deidentifier_sitename,'<span class="glyphicon glyphicon-retweet"></span>','Deidentifier') }}
            {{ usermacros.siteSingleSwitchElement(vacreq_sitename,'<span class="glyphicon glyphicon-plane"></span>','Vacation Request') }}
            {{ usermacros.siteSingleSwitchElement(calllog_sitename,'<span class="glyphicon glyphicon-phone-alt"></span>','Call Log Book') }}
            {{ usermacros.siteSingleSwitchElement(crn_sitename,'<span class="glyphicon glyphicon-pencil"></span>','Critical Result Notifications') }}
            {{ usermacros.siteSingleSwitchElement(translationalresearch_sitename,'<span class="glyphicon glyphicon-briefcase"></span>','Translational Research') }}
            {{ usermacros.siteSingleSwitchElement(dashboard_sitename,'<span class="glyphicon glyphicon-stats"></span>','Dashboards') }}

        </ul>
    </li>
{% endmacro %}
{% macro siteSingleSwitchElement(sitename,icon,name) %}
    {% if user_security_utility.isSiteShowLinkNavbar(sitename) %}
        <li>
            <a href="{{ path(sitename~'_home') }}">
                <div class="row" style="margin-right: 0px; margin-left: 0px;">
                    <div class="col-xs-1" align='left' style="margin-right: 0px; margin-left: -15px;">
                        {{ icon|raw }}
                    </div>
                    <div class="col-xs-10" align='left'>
                        <span>{{ name }}</span>
                    </div>
                </div>
            </a>
        </li>
    {% endif %}
{% endmacro %}

{#constract full input element with label and dropzone; Currently, used only by comments macros#}
{% macro fileuploadLabelField( container, documents, cycle, classname, prototype ) %}

    {% import _self as usermacros %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    <p>
    {#style="height: 50px"#}
    <div class="row files-upload-holder">
        <div class="col-xs-6" align="right">
            <strong>Attached Document(s):</strong>
        </div>
        <div class="col-xs-6" align="left">

            {{ usermacros.documentsContainer(container,documents,cycle,prototype,20,'default','Comment Document') }}

        </div>
    </div>
    </p>

{% endmacro %}

{#Use array based parameters#}
{% macro documentsContainerWrapper(documentsContainerData) %}
    {% set container = documentsContainerData.container %}
    {% set documents = documentsContainerData.documents %}
    {% set cycle = documentsContainerData.cycle %}
    {% set prototype = documentsContainerData.prototype %}
    {% set maxFiles = documentsContainerData.maxFiles %}
    {% set maxFilesize = documentsContainerData.maxFilesize %}
    {% set dropzoneInit = documentsContainerData.dropzoneInit %}
    {% set documentType = documentsContainerData.documentType %}
    {% set asFormOrEntity = documentsContainerData.asFormOrEntity %}
    {% set formRest = documentsContainerData.formRest %}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}
    {{ usermacros.documentsContainer(
        container,
        documents,
        cycle,
        prototype,
        maxFiles,
        dropzoneInit,
        documentType,
        asFormOrEntity,
        formRest,
        maxFilesize
        )
    }}
{% endmacro %}
{#dropzoneInit = 'inactive':    inactive by default#}
{#dropzoneInit = 'active':      active by default#}
{#dropzoneInit = 'default':     inactive if show or active otherwise#}
{% macro documentsContainer(container,documents,cycle,prototype,maxFiles,dropzoneInit,documentType,asFormOrEntity,formRest,maxFilesize) %}
{#{% macro documentsContainer(documentsContainerData) %}#}

    {#{% set container = documentsContainerData.container %}#}
    {#{% set documents = documentsContainerData.documents %}#}
    {#{% set cycle = documentsContainerData.cycle %}#}
    {#{% set prototype = documentsContainerData.prototype %}#}
    {#{% set maxFiles = documentsContainerData.maxFiles %}#}
    {#{% set maxFilesize = documentsContainerData.maxFilesize %}#}
    {#{% set dropzoneInit = documentsContainerData.dropzoneInit %}#}
    {#{% set documentType = documentsContainerData.documentType %}#}
    {#{% set asFormOrEntity = documentsContainerData.asFormOrEntity %}#}
    {#{% set formRest = documentsContainerData.formRest %}#}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if formRest is not defined or formRest is null %}
        {% set formRest = true %}
    {% endif %}

    {% if asFormOrEntity is not defined or not asFormOrEntity or asFormOrEntity == "" or asFormOrEntity is null %}
        {% set asFormOrEntity = "asForm" %}
    {% endif %}

    {% if documents is defined or prototype == 'prototype' %}

        {% if "show" in cycle %}
            {% set showFlag = true %}
        {% else %}
            {% set showFlag = false %}
        {% endif %}

        {% if maxFiles is not defined or maxFiles == "" or maxFiles == 0 or maxFiles is null %}
            {% set dz_maxFiles = 6 %}
        {% else %}
            {% set dz_maxFiles = maxFiles %}
        {% endif %}
        {#maxFiles:{{ maxFiles }}#}

        {% if maxFilesize is not defined or maxFilesize == "" or maxFilesize == 0 or maxFilesize is null %}
            {#Default max file size 64 MB#}
            {% set dz_maxFilesize = 64 %}
        {% else %}
            {% set dz_maxFilesize = maxFilesize %}
        {% endif %}

        {% if documentType is not defined %}
            {% set dz_documentType = "" %}
        {% else %}
            {% set dz_documentType = documentType %}
        {% endif %}

        {#dropzoneInit:{{ dropzoneInit }}<br>#}
        {% if dropzoneInit is not defined %}
            {#dropzoneInit is not defined<br>#}
            {% set dropzoneInit = 'default' %}
            {% set addRemoveLink = 'default' %}
        {% endif %}

        {% if dropzoneInit == 'inactive' %}
            {#dropzoneInit == true<br>#}
            {% set dropzoneActiveClass = "file-upload-dropzone-inactive" %}
            {% set addRemoveLink = false %}
        {% elseif dropzoneInit == 'active' %}
            {#dropzoneInit == false<br>#}
            {% set dropzoneActiveClass = "file-upload-dropzone-active" %}
            {% set addRemoveLink = true %}
        {% elseif dropzoneInit == 'default' or dropzoneInit is null %}
            {#dropzoneInit == 'default'<br>#}
            {% if showFlag %}
                {% set dropzoneActiveClass = "file-upload-dropzone-inactive" %}
                {% set addRemoveLink = false %}
            {% else %}
                {% set dropzoneActiveClass = "file-upload-dropzone-active" %}
                {% set addRemoveLink = true %}
            {% endif %}
        {% else %}
            {#dropzoneInactive else<br>#}
            {% if showFlag %}
                {% set dropzoneActiveClass = "file-upload-dropzone-inactive" %}
                {% set addRemoveLink = false %}
            {% else %}
                {% set dropzoneActiveClass = "file-upload-dropzone-active" %}
                {% set addRemoveLink = true %}
            {% endif %}
        {% endif %}


        <div class="dropzone file-upload-dropzone {{ dropzoneActiveClass }}" style="min-height: 150px; margin-bottom: 5px;">

            {% if not showFlag %}

                <input type="hidden" id="documentcontainer-documentspercontainer" value="{{ dz_maxFiles }}">
                <input type="hidden" id="documentcontainer-documentmaxfilesize" value="{{ dz_maxFilesize }}">
                <input type="hidden" id="documentcontainer-document-type" value="{{ dz_documentType }}">
                <div class="dz-message" style="padding-bottom:5px;">
                    <span>Drag and drop files here to upload or click to select a file (Maximum {{ dz_maxFiles }} files, {{ dz_maxFilesize }} MB each)</span>
                </div>

            {% else %}

                <div class="dz-message" style="padding-bottom:5px;"><span></span></div>

            {% endif %}

            {{ usermacros.document( documents, cycle, prototype, addRemoveLink, asFormOrEntity ) }}

            {#render field "other". id of this field will be used to get the containerid in js#}
            {% if container is not null %}
                {% if not showFlag %}
                    {% if container.others is defined %}
                        {{ form_widget(container.others) }}
                    {% endif %}

                    {% if formRest %}
                        {{ form_rest(container) }}
                    {% endif %}
                {% endif %}
            {% endif %}

        </div>

    {% endif %}

{% endmacro %}

{% macro document( documents, cycle, prototype, addRemoveLink, asFormOrEntity, asDocumentArray ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {#get sitename#}
    {% set sitename = employees_sitename %} {#default sitename#}
    {% set requestRoute = app.request.attributes.get('_route') %}
    {% set requestAttributes = app.request.attributes.get('_route_params') %}
    {% if requestRoute and requestAttributes %}
        {% set currentPath = path(requestRoute,requestAttributes) %}
        {#currentPath={{ currentPath }}<br>#}
        {% if '/scan/' in currentPath %}
            {% set sitename = scan_sitename %}
        {% endif %}
        {% if '/directory/' in currentPath %}
            {% set sitename = employees_sitename %}
        {% endif %}
        {% if '/fellowship-applications/' in currentPath %}
            {% set sitename = fellapp_sitename %}
        {% endif %}
        {% if '/residency-applications/' in currentPath %}
            {% set sitename = resapp_sitename %}
        {% endif %}
        {% if '/deidentifier/' in currentPath %}
            {% set sitename = deidentifier_sitename %}
        {% endif %}
        {% if '/time-away-request/' in currentPath %}
            {% set sitename = vacreq_sitename %}
        {% endif %}
        {% if '/call-log-book/' in currentPath %}
            {% set sitename = calllog_sitename %}
        {% endif %}
        {% if '/critical-result-notifications/' in currentPath %}
            {% set sitename = crn_sitename %}
        {% endif %}
        {% if '/translational-research/' in currentPath %}
            {% set sitename = translationalresearch_sitename %}
        {% endif %}
        {% if '/dashboards/' in currentPath %}
            {% set sitename = dashboard_sitename %}
        {% endif %}
    {% endif %}
    {#EOF get sitename#}

    {% if asFormOrEntity is not defined or not asFormOrEntity or asFormOrEntity == "" %}
        {% set asFormOrEntity = "asForm" %}
    {% endif %}

    {% if asDocumentArray is not defined or not asDocumentArray or asDocumentArray == "" %}
        {% set asDocumentArray = "asDocumentArray" %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% for document in documents %}

        {% if asFormOrEntity == "asForm" %}
            {% set documentObj = document.vars.value %}
        {% else %}
            {% set documentObj = document %}
        {% endif %}

        {% if documentObj %}
            {#document:{{ documentObj.id }}#}

            <div class="dz-preview dz-file-preview" style="width:100%; height:220px; margin-left:1px; margin-right:0px;">
                <div class="dz-details">
                    {#<div class="dz-filename"><span data-dz-name>{{ documentObj.uniquename }}</span></div>#}
                    <div class="dz-size" data-dz-size><strong>{{ documentObj.getSizeStr() }}</strong></div>
                    {#{{ usermacros.showDocumentAsImage(documentObj,'Document','data-dz-thumbnail') }}#}
                    {{ usermacros.showDocumentAsImage(documentObj,'Document','data-dz-thumbnail',null,null,'snapshot-small') }}
                </div>
                <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>
                <div class="dz-success-mark"><span>✔</span></div>
                <div class="dz-error-mark"><span>✘</span></div>
                <div class="dz-error-message"><span data-dz-errormessage></span></div>


                {#link to open/download file#}
                {#show not just the date and time in the user’s local time zone (NYC) but append to it the UTC date and time as follows: “ - MM/DD/YYYY HH:MM UTC)#}
                <div class="file-upload-showlink">
                    <div style="overflow:hidden; white-space:nowrap;">
                        {% if documentObj.id %}
                            <a target="_blank"
                               href="{{ path(sitename~'_file_download', { 'id': documentObj.id }) }}">
                                {{ documentObj.originalname }} (uploaded {{ documentObj.createdate|date('m/d/Y H:i:s T') }}, {{ documentObj.createdate|date('m/d/Y H:i:s T','UTC') }})
                            </a>
                        {% endif %}
                    </div>
                </div>

                {% if addRemoveLink or addRemoveLink == 'default' %}
                    <a data-dz-remove="" href="javascript:void(0);" class="dz-remove" onclick="removeUploadedFile(this)">Remove file</a>
                {% endif %}

                {% if asFormOrEntity == "asForm" %}
                    {{ formmacros.field(document.id) }}
                    {{ formmacros.field(document.dummyprototypefield) }}
                {% endif %}
            </div>

            {% if asFormOrEntity == "asForm" %}
                {% do document.setRendered %}
            {% endif %}

        {% endif %}

    {% endfor %}

    {% if asFormOrEntity == "asForm" %}
        {% if asDocumentArray == "asDocumentArray" %}
            {#use dummy-prototype-field to get id and name prototype for adding new document#}
            {{ formmacros.field(documents.vars.prototype.dummyprototypefield) }}
            {% do documents.setRendered %}
        {% else %}
            {#For single document without prototype: use dummy field to get id and name for adding new document#}
            {% set document = documents[0] %}
            {{ formmacros.field(document.dummyprototypefield) }}
            {% do document.setRendered %}
        {% endif %}
    {% endif %}

{% endmacro %}

{% macro singleDocumentContainer(container,document,cycle,prototype,dropzoneInit,documentType,asFormOrEntity,formRest) %}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if formRest is not defined %}
        {% set formRest = true %}
    {% endif %}

    {% if asFormOrEntity is not defined or not asFormOrEntity or asFormOrEntity == "" %}
        {% set asFormOrEntity = "asForm" %}
    {% endif %}

    {% if document is defined or prototype == 'prototype' %}

        {% if "show" in cycle %}
            {% set showFlag = true %}
        {% else %}
            {% set showFlag = false %}
        {% endif %}

        {% set dz_maxFiles = 1 %}
        {#Default max file size 64 MB#}
        {% set dz_maxFilesize = 64 %}

        {% if documentType is not defined %}
            {% set dz_documentType = "" %}
        {% else %}
            {% set dz_documentType = documentType %}
        {% endif %}

        {#dropzoneInit:{{ dropzoneInit }}<br>#}
        {% if dropzoneInit is not defined %}
            {#dropzoneInit is not defined<br>#}
            {% set dropzoneInit = 'default' %}
            {% set addRemoveLink = 'default' %}
        {% endif %}

        {% if dropzoneInit == 'inactive' %}
            {#dropzoneInit == true<br>#}
            {% set dropzoneActiveClass = "file-upload-dropzone-inactive" %}
            {% set addRemoveLink = false %}
        {% elseif dropzoneInit == 'active' %}
            {#dropzoneInit == false<br>#}
            {% set dropzoneActiveClass = "file-upload-dropzone-active" %}
            {% set addRemoveLink = true %}
        {% elseif dropzoneInit == 'default' %}
            {#dropzoneInit == 'default'<br>#}
            {% if showFlag %}
                {% set dropzoneActiveClass = "file-upload-dropzone-inactive" %}
                {% set addRemoveLink = false %}
            {% else %}
                {% set dropzoneActiveClass = "file-upload-dropzone-active" %}
                {% set addRemoveLink = true %}
            {% endif %}
        {% else %}
            {#dropzoneInactive else<br>#}
            {% if showFlag %}
                {% set dropzoneActiveClass = "file-upload-dropzone-inactive" %}
                {% set addRemoveLink = false %}
            {% else %}
                {% set dropzoneActiveClass = "file-upload-dropzone-active" %}
                {% set addRemoveLink = true %}
            {% endif %}
        {% endif %}


        <div class="dropzone file-upload-dropzone {{ dropzoneActiveClass }}" style="min-height: 150px; margin-bottom: 5px;">

            {% if not showFlag %}

                <input type="hidden" id="documentcontainer-documentspercontainer" value="{{ dz_maxFiles }}">
                <input type="hidden" id="documentcontainer-documentmaxfilesize" value="{{ dz_maxFilesize }}">
                <input type="hidden" id="documentcontainer-document-type" value="{{ dz_documentType }}">
                <div class="dz-message" style="padding-bottom:5px;"><span>Drag and drop files here to upload or click to select a file (Maximum {{ dz_maxFiles }} files, {{ dz_maxFilesize }} MB each)</span></div>

            {% else %}

                <div class="dz-message" style="padding-bottom:5px;"><span></span></div>

            {% endif %}

            {% set documents = [document] %}

            {{ usermacros.document( documents, cycle, prototype, addRemoveLink, asFormOrEntity, "asSingleDocument" ) }}

            {#render field "other". id of this field will be used to get the containerid in js#}
            {% if container is not null %}
                {% if not showFlag %}
                    {% if container.others is defined %}
                        {{ form_widget(container.others) }}
                    {% endif %}

                    {% if formRest %}
                        {{ form_rest(container) }}
                    {% endif %}
                {% endif %}
            {% endif %}

        </div>

    {% endif %}

{% endmacro %}

{% macro getInstitutionalTree( entity, linktype ) %}

    {% import _self as usermacros %}

    {% if linktype is defined and linktype == 'userlink' %}
    {% else %}
        {% set linktype = 'nodelink' %}
    {% endif %}

    <ol class="breadcrumb">

        {#institution#}
        {% if entity.parent.parent.parent is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity.parent.parent.parent,linktype) }}</li>
        {% endif %}
        {#department#}
        {% if entity.parent.parent is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity.parent.parent,linktype) }}</li>
        {% endif %}
        {#division#}
        {% if entity.parent is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity.parent,linktype) }}</li>
        {% endif %}
        {#service#}
        {% if entity is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity,linktype) }}</li>
        {% endif %}

    </ol>

{% endmacro %}

{% macro hrefLinkToNode( node, linktype ) %}
    {% if node and node is defined %}
        {% if is_granted('ROLE_USERDIRECTORY_OBSERVER') %}
            {% if linktype == 'nodelink' %}
                <a href="{{ path(node.getClassName()|lower~'s_show', { 'id': node.id }) }}">{{ node.getOptimalName() }}</a>
            {% endif %}
            {% if linktype == 'userlink' %}
                <a href="{{ path( employees_sitename~'_search_same_object', { 'tablename':node.getClassName()|lower,'id': node.id, 'name': node.getOptimalName() }) }}">{{ node.getOptimalName() }}</a>
            {% endif %}
        {% else %}
            {{ node.getOptimalName() }}
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro getNestedTree( entity, linktype ) %}

    {% if entity %}

        {% import _self as usermacros %}

        {% if linktype is defined and linktype == 'userlink' %}
        {% else %}
            {% set linktype = 'nodelink' %}
        {% endif %}

        <ol class="breadcrumb">
            {{ usermacros.nestedTree(entity,linktype) }}
        </ol>

    {% endif %}

{% endmacro %}

{% macro nestedTree( entity, linktype ) %}

    {% import _self as usermacros %}

    {% if entity and entity.parent and entity.id != entity.parent.id %}
        {{ usermacros.nestedTree(entity.parent, linktype) }}
    {% endif %}

    <li>
        {{ usermacros.hrefLinkToNode(entity,linktype) }}
    </li>
    <br>

{% endmacro %}


{% macro locationObject( field, cycle, classname, prototype, sitename, entity, editable ) %}
    
{% if field %}
    
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import "AppUserdirectoryBundle/Tree/treemacros.html.twig" as treemacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}


    {% if   prototype == "prototype" or
            formfield.vars.value and
            (
                formfield.vars.value.removable == true or
                formfield.vars.value.removable != true and
                formfield.vars.value.name != "Home"
            )
    %}
        {% set homeLocation = false %}
    {% else %}
        {% set homeLocation = true %}
    {% endif %}

    {% if formfield.vars.value and formfield.vars.value.status == constant('App\\UserdirectoryBundle\\Entity\\BaseUserAttributes::STATUS_UNVERIFIED') or prototype == 'prototype' %}
        {% set wellclass = "user-alert-warning" %}
    {% else %}
        {% set wellclass = "" %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {#Consider stanAlone for all cycles with _standalone, except new_standalone. Cycle new_standalone is exception because we don't show list attributes in creation page#}
    {% set standAloneLocation = false %}
    {% if "standalone" in cycle %}
        {% set wellclass = "" %}
        {% set standAloneLocation = true %}
    {% endif %}
    {% if cycle == "new_standalone" %}
        {% set wellclass = "" %}
    {% endif %}

    {#On "Common Location" view pages, (for locations where Inhabitant is not set)#}
    {% if not standAloneLocation or formfield.vars.value.user or cycle != 'show_standalone' %}
        {% set standAloneLocationNotView = true %}
    {% else %}
        {% set standAloneLocationNotView = false %}
    {% endif %}

    {#    Show restrictions for home location:    #}
    {#####Case1: privacy="Administration can see and edit this contact information"#}
    {#Show Home location only to subjectuser, Administrator or Editor; Hide for others.#}
    {#####Case2: privacy="Administration; Those 'on call' can see these phone numbers & email" or default (NULL)#}
    {#Show only to subjectuser, Administrator or Editor #}
    {#Show fields to users with role 'On Call' (ROLE_SCANORDER_ONCALL_TRAINEE, ROLE_SCANORDER_ONCALL_ATTENDING):#}
    {#Phone,Mobile Phone,Pager,Fax,E-Mail#}
    {#####Case3: privacy=others#}
    {#Show it as now (show all non-empty fields)#}

    {% if app.user.getId() == entity.id %}
        {% set subjectuser = true %}
    {% else %}
        {% set subjectuser = false %}
    {% endif %}

    {% if is_granted('ROLE_USERDIRECTORY_EDITOR') or is_granted('ROLE_USERDIRECTORY_ADMIN') %}
        {% set userEditor = true %}
    {% else %}
        {% set userEditor = false %}
    {% endif %}

    {% if is_granted('ROLE_SCANORDER_ONCALL_TRAINEE') or is_granted('ROLE_SCANORDER_ONCALL_ATTENDING') %}
        {% set onCallUser = true %}
    {% else %}
        {% set onCallUser = false %}
    {% endif %}

    {% set privacyCase1 = false %}
    {% set privacyCase2 = false %}
    {% if homeLocation and formfield.vars.value.privacy == "Administration can see and edit this contact information" %}
        {% set privacyCase1 = true %}
    {% endif %}
    {% if homeLocation and (formfield.vars.value.privacy == "Administration; Those 'on call' can see these phone numbers & email" or not formfield.vars.value.privacy) %}
        {% set privacyCase2 = true %}
    {% endif %}

    {% set showRegularFields1 = true %}
    {% set showRegularFields2 = true %}

    {% if privacyCase1 %}
        {% set showRegularFields1 = false %}
        {% set showRegularFields2 = false %}

        {% if userEditor or subjectuser %}
            {% set showRegularFields1 = true %}
            {% set showRegularFields2 = true %}
        {% endif %}
    {% endif %}

    {% if privacyCase2 %}
        {% set showRegularFields1 = false %}
        {% set showRegularFields2 = false %}

        {% if onCallUser %}
            {% set showRegularFields2 = true %}
        {% endif %}

        {% if userEditor or subjectuser %}
            {% set showRegularFields1 = true %}
            {% set showRegularFields2 = true %}
        {% endif %}
    {% endif %}

    {#don't use alert class for standAloneLocation#}
    {% if standAloneLocation %}
        {% set alertClass = "" %}
    {% else %}
        {% set alertClass = "alert" %}
    {% endif %}

    {% if showRegularFields1 or showRegularFields2 %}
        <div class="user-collection-holder {{ alertClass }} {{ classname }} {{ wellclass }}">

            {% if not showFlag and (prototype == "prototype" or formfield.vars.value and formfield.vars.value.removable == true) %}
                {% if not standAloneLocation and cycle != "new_standalone" %}
                    <div class="text-right">
                        <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" >
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </div>
                {% endif %}
            {% endif %}

            {% if showRegularFields1 %}
                {{ formmacros.field(formfield.id) }}
                {{ usermacros.statusVerifiedField(formfield,cycle) }}

                {% if formfield.user is defined %}
                    {#On "Common Location" view pages, (for locations where Inhabitant is not set) hide "Inhabitant" field and value (still show it on the Edit page).#}
                    {% if standAloneLocationNotView %}
                        {{ formmacros.field(formfield.user) }}
                    {% endif %}
                {% endif %}

                {% if standAloneLocation and formfield.removable is defined %}
                    {{ formmacros.field(formfield.removable) }}
                {% endif %}

                {% if standAloneLocation or prototype == "prototype" or
                    (formfield.vars.value and formfield.vars.value.removable == true) or
                    (editable is defined and editable == 'editable')
                %}
                    {{ formmacros.field(formfield.name) }}
                {% else %}
                    {{ formmacros.field(formfield.name,"","readonly") }}
                {% endif %}

                {% if homeLocation == true or standAloneLocation %}
                    {#Do not show "Location Privacy (who can see this contact info):" field for orphan locations (locations not connected to any user)#}
                    {% if
                        cycle != 'show_user' or
                        cycle == 'show_user' and (userEditor or subjectuser) and formfield.vars.value.user
                    %}
                        {% if cycle != 'show_standalone' or cycle == 'show_standalone' and (userEditor or subjectuser) and formfield.vars.value.user %}
                            {{ formmacros.field(formfield.privacy) }}
                        {% else %}
                            {#{% do formfield.privacy.setRendered %}#}
                        {% endif %}
                    {% endif %}
                {% else %}
                    {% do formfield.privacy.setRendered %}
                {% endif %}

                {% if formfield.locationTypes is defined %}
                    {{ formmacros.field(formfield.locationTypes) }}
                {% endif %}
            {% endif %}{#showRegularFields1#}

            {% if showRegularFields2 %}
                {{ usermacros.emailPhoneField(formfield.phone,cycle,'phone',"") }}

                {% if formfield.pager is defined %}
                    {{ usermacros.emailPhoneField_notempty(formfield.pager,cycle,'phone',"") }}
                {% endif %}
                {% if formfield.mobile is defined %}
                    {{ usermacros.emailPhoneField_notempty(formfield.mobile,cycle,'phone',"") }}
                {% endif %}

                {% if homeLocation == false and formfield.ic is defined %}
                    {{ formmacros.field_notempty(formfield.ic,cycle) }}
                {% endif %}

                {% if formfield.fax is defined %}
                    {{ formmacros.field_notempty(formfield.fax,cycle) }}
                {% endif %}

                {% if formfield.email is defined %}
                    {{ usermacros.emailPhoneField_notempty(formfield.email,cycle,'email',"") }}
                {% endif %}

            {% endif %}{#showRegularFields2#}

            {% if showRegularFields1 %}
                {% if homeLocation == false %}

                    {#On "Common Location" view pages, (for locations where Inhabitant is not set) hide "Assistant(s):" field and value.#}
                    {#{% if standAloneLocationNotView %}#}

                        {#assistant field#}
                        {% if formfield.assistant is defined %}
                            {% if not showFlag %}
                                {{ formmacros.field(formfield.assistant) }}
                            {% else %}
                                {% if formfield.vars.value.assistant is defined and formfield.vars.value.assistant != NULL and formfield.vars.value.assistant|length > 0 %}
                                        <div style="text-align: center;">
                                            <p>
                                                <strong>Assistant(s):</strong>
                                            </p>
                                        </div>
                                        {% for assistant in formfield.vars.value.assistant %}
                                            {{ usermacros.personInfo(assistant,cycle,sitename) }}
                                        {% endfor %}

                                {% endif %}
                            {% endif %}
                        {% endif %}

                    {#{% endif %}#}

                {% endif %}

                {% if homeLocation == false %}

                    {#if the "Institution or Collaboration" field is empty, do not show this field/child fields on the View page to anyone#}
                    {% if formfield.institution is defined %}
                        {{ treemacros.compositeTreeNode_notempty(formfield.institution,cycle,prototype) }}
                    {% endif %}

                    {% if formfield.mailbox is defined %}
                        {{ formmacros.field_notempty(formfield.mailbox,cycle) }}
                    {% endif %}

                    {% if formfield.room is defined %}
                        {{ formmacros.field_notempty(formfield.room,cycle) }}
                    {% endif %}
                    {% if formfield.suite is defined %}
                        {{ formmacros.field_notempty(formfield.suite,cycle) }}
                    {% endif %}
                    {% if formfield.floor is defined %}
                        {{ formmacros.field(formfield.floor) }}
                    {% endif %}
                    {% if formfield.floorSide is defined %}
                        {{ formmacros.field(formfield.floorSide) }}
                    {% endif %}

                    {{ formmacros.field(formfield.building) }}

                {% endif %}

                {#Location GeoLocation#}
                {{ usermacros.geoLocation(field,cycle,prototype) }}

                {% if homeLocation == false and formfield.associatedCode is defined %}
                    {{ formmacros.field_notempty(formfield.associatedCode,cycle) }}
                {% endif %}

                {#In Locations, show the CLIA, and PFI fields only to Administrators and the user himself.#}
                {% if formfield.associatedClia is defined %}
                    {{ formmacros.field_notempty(formfield.associatedClia,cycle) }}
                    {{ formmacros.fieldDateLabel_notempty(formfield.associatedCliaExpDate,cycle,'allow-future-date') }}
                    {{ formmacros.field_notempty(formfield.associatedPfi,cycle) }}
                {% endif %}

                {{ formmacros.field_notempty(formfield.comment,cycle) }}
            {% endif %} {#showRegularFields1#}

        </div>
    {% endif %}

    {#show list properties: it's empty for location#}
    {#{% if standAloneLocation %}#}
        {#{{ usermacros.listProperties(formfield) }}#}
    {#{% endif %}#}

    {% do formfield.setRendered %}
    
{% endif %}
{% endmacro %}


{#entity is a location object#}
{% macro geoLocation( entity, cycle, prototype ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% if prototype == "prototype" %}
        {% set formfield = entity.vars.prototype.geoLocation %}
    {% else %}
        {% set formfield = entity.geoLocation %}
    {% endif %}

    {{ formmacros.field_notempty(formfield.street1,cycle) }}
    {{ formmacros.field_notempty(formfield.street2,cycle) }}
    {{ formmacros.field_notempty(formfield.city,cycle) }}
    {{ formmacros.field_notempty(formfield.state,cycle) }}
    {{ formmacros.field_notempty(formfield.zip,cycle) }}

    {% if formfield.county is defined %}
        {{ formmacros.field_notempty(formfield.county,cycle) }}
    {% endif %}

    {{ formmacros.field_notempty(formfield.country,cycle) }}
{% endmacro %}

{% macro statusVerifiedField( entity, cycle, isEntity ) %}

    {% if isEntity is not defined %}
        {% set isEntity = false %}
    {% endif %}

    {% set statusValueDefined = false %}

    {% if isEntity %}
        {% set statusValueDefined = true %}
        {% set statusValue = entity.status %}
    {% else %}
        {% if entity.status is defined %}
            {% set statusValueDefined = true %}
            {% set statusValue = entity.status.vars.value %}
        {% endif %}
    {% endif %}

    {% if statusValueDefined %}

        {#On "Common Location" view pages, (for locations where Inhabitant is not set) hide "Status" field and value if it is equal to "Verified by Administration"#}
        {% if "show" in cycle %}
            {% set showFlag = true %}
        {% else %}
            {% set showFlag = false %}
        {% endif %}

        {% if not showFlag or statusValue != constant('App\\UserdirectoryBundle\\Entity\\BaseUserAttributes::STATUS_VERIFIED') %}
            {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
            {% if isEntity %}
                {{ formmacros.simplefield( "Status:", entity.getStatusStr, "", "disabled" ) }}
            {% else %}
                {{ formmacros.field(entity.status) }}
            {% endif %}
        {% else %}
            {% if not isEntity %}
                {% do entity.status.setRendered %}
            {% endif %}
        {% endif %}

    {% endif %}

{% endmacro %}


{% macro checkbox_notempty(field,value,cycle) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if value == 1 or not showFlag %}
        {{ formmacros.checkbox(field) }}
    {% else %}
        {% do field.setRendered %}
    {% endif %}
{% endmacro %}

{% macro emailPhoneField_notempty(field,cycle,type,label) %}
    {% import _self as formuser %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if field.vars.value or not showFlag %}
        {{ formuser.emailPhoneField(field,cycle,type,label) }}
    {% else %}
        {% do field.setRendered %}
    {% endif %}
{% endmacro %}

{% macro emailPhoneField(field,cycle,type,label) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if label == "" %}
        {% set value = field.vars.value %}
    {% else %}
        {% set value = field %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if showFlag %}
        <p>
        <div class="row">
            <div class="col-xs-6" align="right">
                {% if label == "" %}
                    {{ form_label(field) }}
                {% else %}
                    <strong>{{ label }}</strong>
                {% endif %}
            </div>
            <div class="col-xs-6" align="left">
                <div class="form-control form-control-modif" disabled>
                    {% if type == "email" %}
                        <a href="mailto:{{ value }}" target="_top">{{ value }}</a>
                    {% endif %}
                    {% if type == "phone" %}
                        {{ usermacros.phoneHref(value) }}
                    {% endif %}
                    {% if type == "link" %}
                        {% set scheme = app.request.scheme %}
                        {% if scheme not in value %}
                            {% set weburl = scheme~"://"~value %}
                        {% else %}
                            {% set weburl = value %}
                        {% endif %}
                        <a href="{{ weburl }}" target="_top">{{ weburl }}</a>
                    {% endif %}
                </div>
            </div>
        </div>
        </p>
        {% if label == "" %}
            {% do field.setRendered %}
        {% endif %}
    {% else %}
        {{ formmacros.field(field) }}
    {% endif %}
{% endmacro %}


{% macro phoneHref(phone) %}
    {% set valueclean = phone|replace({('+'): "", (' '): "", (')'): "", ('('): "", ('-'): ""}) %}
    <a href="tel:{{ valueclean }}" target="_top">{{ phone }}</a>
{% endmacro %}

{% macro mobilePhoneField(userInfo,cycle,label) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% set field = null %}
    {% if userInfo.preferredMobilePhone is defined %}
        {% set field = userInfo.preferredMobilePhone %}
    {% endif %}
    {% if userInfo.mobilePhone is defined %}
        {% set field = userInfo.mobilePhone %}
    {% endif %}

    {% if label == "" %}
        {% set value = field.vars.value %}
    {% else %}
        {% set value = field %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {#{% set showFlag = true %}#}

    {#cycle={{ cycle }}<br>#}
    {#showFlag={{ showFlag }}<br>#}

    {% if showFlag %}
        <p>
        <div class="row">
            <div class="col-xs-6" align="right">
                {% if label == "" %}
                    {{ form_label(field) }}
                {% else %}
                    <strong>{{ label }}</strong>
                {% endif %}
            </div>
            {% if userInfo.vars.value.preferredMobilePhone %}
                <div class="col-xs-5" align="left">
                    <div class="form-control form-control-modif" disabled>
                        {{ usermacros.phoneHref(value) }}
                    </div>
                </div>
                <div class="col-xs-1" align="left">
                    {% if userInfo.vars.value.preferredMobilePhoneVerified  %}
                        <span id="phone-number-verify-status" class="phone-number-verify-status">
                            <span class="text-success">Verified</span>
                        </span>
                    {% else %}
                        {#Only can verify its own mobile phone number#}
                        {% if app.user.getId() == userInfo.vars.value.user.id and user_security_utility.getSiteSettingParameter('phoneNumberVerification','Telephony') %}
                            {#<button class="btn btn-primary" type="button" onclick="verifyMobilePhoneNumber(userInfo.vars.value.user.id,userInfo.vars.value.preferredMobilePhone)">Verify</button>#}
                            {#<a class="btn btn-primary" href="{{ path('employees_verify_mobile_phone', {'phoneNumber': userInfo.vars.value.preferredMobilePhone }) }}" target="_blank">Verify</a>#}
                            <button type="button"
                                    id="verify-phone-number-button"
                                    class="btn btn-sm btn-primary verify-phone-number-button"
                                    href="" data-toggle="modal"
                                    data-target="#verifyMobilePhoneModal">Verify</button>
                            <span id="phone-number-verify-status" class="phone-number-verify-status"></span>
                            {% include "AppUserdirectoryBundle/Telephony/verify-mobile-phone-modal.html.twig" with {phoneNumber:userInfo.vars.value.preferredMobilePhone, mobilePhoneVerified:userInfo.vars.value.getPreferredMobilePhoneVerified } %}
                        {% else %}
                            <span id="phone-number-verify-status" class="phone-number-verify-status">
                                <span class="text-danger">Unverified</span>
                            </span>
                        {% endif %}
                    {% endif %}
                </div>
            {% else %}
                <div class="col-xs-6" align="left">
                    <div class="form-control form-control-modif" disabled>
                        {{ usermacros.phoneHref(value) }}
                    </div>
                </div>
            {% endif %}
        </div>
        </p>
        {% if label == "" %}
            {% do field.setRendered %}
        {% endif %}
    {% else %}
        {{ formmacros.field(field) }}
        {% if userInfo.preferredMobilePhoneVerified is defined %}
            {{ formmacros.checkbox(userInfo.preferredMobilePhoneVerified) }}
        {% endif %}
        {% if userInfo.mobilePhoneVerified is defined %}
            {{ formmacros.checkbox(userInfo.mobilePhoneVerified) }}
        {% endif %}
        {#{{ usermacros.phoneFieldWithVerified(userInfo,field) }}#}
    {% endif %}
{% endmacro %}
{% macro phoneFieldWithVerified( userInfo, field, label, attr ) %}
    {% if field is defined %}
        {% form_theme field 'AppOrderformBundle/Default/collection_widget.html.twig' %}
        <p>
        <div class="row">
            {{ form_errors(field) }}
            <div class="col-xs-6" align="right">
                {{ form_label(field,label) }}
            </div>
            <div class="col-xs-5" align="left">
                {% if attr == "disabled" %}
                    {#value of disabled field will be ignored#}
                    {{ form_widget(field,{ 'disabled':'disabled' }) }}
                {% elseif attr == "readonly" %}
                    {{ form_widget(field, { 'attr': {'readonly': 'readonly'} }) }}
                {% elseif attr == "required" %}
                    {{ form_widget(field, { 'attr': {'required': 'true'} }) }}
                {% else %}
                    {{ form_widget(field) }}
                {% endif %}
            </div>
            <div class="col-xs-1" align="right">
                {% if userInfo.vars.value.preferredMobilePhoneVerified  %}
                    <span id="phone-number-verify-status" class="phone-number-verify-status">
                            <span class="text-success">Verified</span>
                        </span>
                {% else %}
                    {#Only can verify its own mobile phone number#}
                    {% if app.user.getId() == userInfo.vars.value.user.id and user_security_utility.getSiteSettingParameter('phoneNumberVerification','Telephony') %}
                        {#<button class="btn btn-primary" type="button" onclick="verifyMobilePhoneNumber(userInfo.vars.value.user.id,userInfo.vars.value.preferredMobilePhone)">Verify</button>#}
                        {#<a class="btn btn-primary" href="{{ path('employees_verify_mobile_phone', {'phoneNumber': userInfo.vars.value.preferredMobilePhone }) }}" target="_blank">Verify</a>#}
                        <button type="button"
                                id="verify-phone-number-button"
                                class="btn btn-sm btn-primary verify-phone-number-button"
                                href="" data-toggle="modal"
                                data-target="#verifyMobilePhoneModal">Verify</button>
                        <span id="phone-number-verify-status" class="phone-number-verify-status"></span>
                        {% include "AppUserdirectoryBundle/Telephony/verify-mobile-phone-modal.html.twig" with {phoneNumber:userInfo.vars.value.preferredMobilePhone, mobilePhoneVerified:userInfo.vars.value.getPreferredMobilePhoneVerified } %}
                    {% else %}
                        <span id="phone-number-verify-status" class="phone-number-verify-status">
                                <span class="text-danger">Unverified</span>
                            </span>
                    {% endif %}
                {% endif %}
            </div>
            {{ form_rest(field) }}
        </div>
        </p>
    {% endif %}
{% endmacro %}

{% macro personInfo( person, cycle, sitename, wellLabel ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}
    <p>
    <div class="well well-sm user-margin-block">
        {% if wellLabel is defined and wellLabel %}
            {{ wellLabel|raw }}
        {% endif %}

        {% if person and person.id %}
            {% set personurl = path(sitename~'_showuser',{'id':person.id}) %}
            {% set personlink = '<a href="'~personurl~'">'~person.getUsernameOptimal()~'</a>'  %}
            {{ formmacros.simplefield( "Name:", personlink, "", "disabled" ) }}
        {% endif %}

        {% if person %}
            {{ usermacros.emailPhoneField(person.getSinglePhone,cycle,'phone',"Preferred Phone Number:") }}
            {{ usermacros.emailPhoneField(person.getPreferredMobilePhone,cycle,'phone',"Preferred Mobile Phone Number:") }}
            {{ usermacros.emailPhoneField(person.getSingleEmail,cycle,'email',"Preferred Email:") }}
        {% endif %}
    </div>
    </p>
{% endmacro %}


{% macro listProperties(formfield) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    <div class="well well-sm">
        <p>
        <h4 class="text-muted" align="center">List properties:</h4>
        </p>

        {% if formfield.list.name is defined %}
            {{ formmacros.field(formfield.list.name) }}
        {% endif %}

        {% if formfield.list.abbreviation is defined %}
            {{ formmacros.field(formfield.list.abbreviation) }}
        {% endif %}

        {% if formfield.list.shortname is defined %}
            {{ formmacros.field(formfield.list.shortname) }}
        {% endif %}

        {% if formfield.list.description is defined %}
            {{ formmacros.field(formfield.list.description) }}
        {% endif %}

        {% if formfield.list.original is defined %}
            {{ formmacros.field(formfield.list.original) }}
        {% endif %}

        {% if formfield.list.synonyms is defined %}
            {{ formmacros.field(formfield.list.synonyms) }}
        {% endif %}

        {% if formfield.list.type is defined %}
            {{ formmacros.field(formfield.list.type) }}
        {% endif %}

        {% if formfield.list.creator is defined %}
            {{ formmacros.field(formfield.list.creator) }}
        {% endif %}

        {% if formfield.list.createdate is defined %}
            {{ formmacros.field(formfield.list.createdate) }}
        {% endif %}

        {% if formfield.list.orderinlist is defined %}
            {{ formmacros.field(formfield.list.orderinlist) }}
        {% endif %}

        {% if formfield.list.updatedby is defined %}
            {{ formmacros.field(formfield.list.updatedby) }}
            {{ formmacros.field(formfield.list.updatedon) }}
        {% endif %}
    </div>
{% endmacro %}

{% macro buildingObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% set standAloneLocation = false %}
    {% if "standalone" in cycle %}
        {% set wellclass = "" %}
        {% set standAloneLocation = true %}
    {% endif %}

    {{ formmacros.field(formfield.name) }}
    {{ formmacros.field(formfield.abbreviation) }}

    {#Location GeoLocation#}
    {{ usermacros.geoLocation(field,cycle,prototype) }}

    {{ formmacros.field(formfield.institutions) }}
    {#{{ treemacros.compositeTreeNode(formfield.institution) }}#}

    <br>

    {#show list properties#}
    {% if standAloneLocation %}
        {{ usermacros.listProperties(formfield) }}
    {% endif %}

    {% do formfield.setRendered %}

{% endmacro %}


{% macro researchlabObject( field, cycle, classname, prototype, sitename, user ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% set standAloneObject = false %}
    {% if "standalone" in cycle %}
        {% set standAloneObject = true %}
    {% endif %}

    <div class="user-collection-holder well {{ classname }}">

        {% if cycle != 'show_user' %}
            <div class="text-right">
                {#btn-remove-minimumone-collection#}
                <button type="button" class="btn btn-default btn-sm  confirm-delete-with-expired" onClick="removeExistingObject(this,'{{ classname }}')" ><span class="glyphicon glyphicon-remove"></span></button>
            </div>
        {% endif %}

        {{ formmacros.field(formfield.id) }}

        {{ formmacros.field(formfield.institution) }}

        {% if formfield.name is defined %}
            {{ formmacros.field(formfield.name) }}
        {% endif %}

        {#pi#}
        {% if formfield.piDummy is defined %}
            {{ formmacros.checkbox(formfield.piDummy) }}
        {% endif %}
        {#{% if prototype == "prototype" %}#}
            {#{{ formmacros.checkbox(formfield.piDummy) }}#}
        {#{% else %}#}
            {#{% for pi in formfield.pis %}#}
                {#{{ formmacros.field(pi.isPi) }}#}
            {#{% endfor %}#}
        {#{% endif %}#}

        {% if formfield.foundedDate is defined %}
            {{ formmacros.fieldDateLabel(formfield.foundedDate,'allow-future-date no-datepicker-events') }}
        {% endif %}
        {% if formfield.dissolvedDate is defined %}
            {{ formmacros.fieldDateLabel_notempty(formfield.dissolvedDate,cycle,'allow-future-date no-datepicker-events') }}
        {% endif %}

        {#comment#}
        {% if formfield.commentDummy is defined %}
            {{ formmacros.field(formfield.commentDummy) }}
        {% endif %}
        {#{% if prototype == "prototype" %}#}
            {#{{ formmacros.field(formfield.commentDummy) }}#}
        {#{% else %}#}
            {#{% for comment in formfield.comments %}#}
                {#{{ formmacros.field(comment.comment) }}#}
            {#{% endfor %}#}
        {#{% endif %}#}

        {{ formmacros.field(formfield.location) }}
        {{ usermacros.emailPhoneField_notempty(formfield.weblink,cycle,'link',"") }}

    </div>

    {#show list properties#}
    {% if standAloneObject %}
        {{ usermacros.listProperties(formfield) }}
    {% endif %}

    {% do formfield.setRendered %}

{% endmacro %}


{% macro grantObject( field, cycle, classname, prototype, sitename, user ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% set standAloneObject = false %}
    {% if "standalone" in cycle %}
        {% set standAloneObject = true %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% set dropzoneInit = 'inactive' %}
    {% if standAloneObject %}
        {% if showFlag %}
            {% set dropzoneInit = 'inactive' %}
        {% else %}
            {% set dropzoneInit = 'active' %}
        {% endif %}
    {% endif %}

    <div class="user-collection-holder well {{ classname }}">

        {% if not standAloneObject and not showFlag %}
            <div class="text-right">
                {#btn-remove-minimumone-collection#}
                <button type="button" class="btn btn-default btn-sm  confirm-delete-with-expired" onClick="removeExistingObject(this,'{{ classname }}')" ><span class="glyphicon glyphicon-remove"></span></button>
            </div>
        {% endif %}

        {{ formmacros.field(formfield.id) }}

        {{ formmacros.field(formfield.name) }}
        {{ formmacros.field(formfield.sourceOrganization) }}
        {{ formmacros.field(formfield.grantid) }}

        {% if not showFlag %}
            {{ formmacros.field_notempty(formfield.grantLink,cycle) }}
        {% else %}
            {% if formfield.vars.value and formfield.vars.value.grantLink %}
                {{ usermacros.htmlLink(formfield.vars.value.grantLink,"Link to a page with more information:") }}
            {% endif %}
            {% do formfield.grantLink.setRendered %}
        {% endif %}

        {% if formfield.effortDummy is defined %}
            {{ formmacros.field(formfield.effortDummy) }}
        {% endif %}

        {{ formmacros.fieldDateLabel(formfield.startDate,'allow-future-date no-datepicker-events') }}
        {{ formmacros.fieldDateLabel_notempty(formfield.endDate,cycle,'allow-future-date no-datepicker-events') }}

        {{ formmacros.field(formfield.currentYearDirectCost) }}
        {{ formmacros.field(formfield.currentYearIndirectCost) }}
        {{ formmacros.field(formfield.totalCurrentYearCost) }}
        {{ formmacros.field(formfield.amount) }}
        {{ formmacros.field(formfield.amountLabSpace) }}

        {% if formfield.commentDummy is defined %}
            {{ formmacros.field(formfield.commentDummy) }}
        {% endif %}

        {#grant's attachmentContainer#}
        {#grant dropzoneInit:{{ dropzoneInit }}#}
        {#documentContainers|length:{{ formfield.attachmentContainer.documentContainers|length }}#}
        {% if formfield.attachmentContainer is defined %}
            {% set count = 0 %}
            {#documentContainers|length:{{ formfield.attachmentContainer.documentContainers|length }}#}
            {% for documentContainer in formfield.attachmentContainer.documentContainers %}
                {% set count = count + 1 %}
                {% set uniqueId = count~"-"~"now"|date("mdYHisu") %}
                {{ formmacros.fieldDocumentContainer(documentContainer,cycle,'grant'~uniqueId,"",20,dropzoneInit) }}
            {% endfor %}

            {% if prototype == "prototype" %}
                {% set uniqueId = "1-"~"now"|date("mdYHisu") %}
                {{ formmacros.fieldDocumentContainer(formfield.attachmentContainer.documentContainers.vars.prototype,cycle,'grant'~uniqueId,"",20,dropzoneInit) }}
            {% endif %}

        {% endif %}

    </div>

    {#show list properties#}
    {% if standAloneObject %}
        {{ usermacros.listProperties(formfield) }}
    {% endif %}

    {% do formfield.setRendered %}

{% endmacro %}

{% macro publicationObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% set wellclass = "" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {% if cycle != 'show_user' %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" >
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </div>
        {% endif %}

        {{ formmacros.field(formfield.id) }}

        {{ formmacros.field(formfield.citation) }}
        {{ formmacros.field(formfield.pubmedid) }}

        {% if not showFlag %}
            {{ formmacros.field_notempty(formfield.link,cycle) }}
        {% else %}
            {% if formfield.vars.value and formfield.vars.value.link %}
                {{ usermacros.htmlLink(formfield.vars.value.link,"PubMed or Relevant Link:") }}
            {% endif %}
            {% do formfield.link.setRendered %}
        {% endif %}

        {{ formmacros.field(formfield.importance) }}
        {{ formmacros.fieldDateLabel(formfield.publicationDate,'datepicker-only-month-year') }}

        {% if formfield.updatedate is defined %}
            {{ formmacros.fieldDateLabel(formfield.updatedate,'allow-future-date') }}
        {% endif %}

    </div>

    {% do formfield.setRendered %}

{% endmacro %}


{% macro bookObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% set wellclass = "" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {% if cycle != 'show_user' %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')">
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </div>
        {% endif %}

        {{ formmacros.field(formfield.id) }}

        {{ formmacros.field(formfield.citation) }}
        {{ formmacros.field(formfield.isbn) }}

        {% if not showFlag %}
            {{ formmacros.field_notempty(formfield.link,cycle) }}
        {% else %}
            {% if formfield.vars.value and formfield.vars.value.link %}
                {{ usermacros.htmlLink(formfield.vars.value.link,"Relevant Link:") }}
            {% endif %}
            {% do formfield.link.setRendered %}
        {% endif %}

        {{ formmacros.field(formfield.authorshipRole) }}
        {{ formmacros.field(formfield.comment) }}

        {{ formmacros.fieldDateLabel(formfield.publicationDate,'datepicker-only-month-year') }}

        {% if formfield.updatedate is defined %}
            {{ formmacros.fieldDateLabel(formfield.updatedate,'allow-future-date') }}
        {% endif %}

    </div>

    {% do formfield.setRendered %}

{% endmacro %}

{% macro lectureObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {#{% if "show" in cycle %}#}
        {#{% set showFlag = true %}#}
    {#{% else %}#}
        {#{% set showFlag = false %}#}
    {#{% endif %}#}

    {% set wellclass = "" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {% if cycle != 'show_user' %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" >
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </div>
        {% endif %}

        {{ formmacros.field(formfield.id) }}

        {{ formmacros.field(formfield.title) }}
        {{ formmacros.fieldDateLabel(formfield.lectureDate,'allow-future-date') }}
        {{ formmacros.field(formfield.organization) }}
        {{ formmacros.field(formfield.city) }}
        {{ formmacros.field(formfield.state) }}
        {{ formmacros.field(formfield.country) }}
        {{ formmacros.field(formfield.importance) }}

    </div>

    {% do formfield.setRendered %}

{% endmacro %}

{% macro fellowshipApplicationObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% set wellclass = "" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {% if cycle != 'show_user' %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" >
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </div>
        {% endif %}

        {{ formmacros.field(formfield.fellowshipSubspecialty) }}
        {{ formmacros.fieldDateLabel(formfield.timestamp,'allow-future-date') }}
        {{ formmacros.fieldDateLabel(formfield.startDate,'allow-future-date') }}
        {{ formmacros.fieldDateLabel(formfield.endDate,'allow-future-date') }}

    </div>

    {% do formfield.setRendered %}

{% endmacro %}




{% macro htmlLink(linkvalue,label) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% set scheme = app.request.scheme %}
    {% if scheme in linkvalue %}
        {% set href = linkvalue %}
    {% else %}
        {% set href = scheme~"://"~linkvalue %}
    {% endif %}
    {% set hreflink = '<a href="'~href|raw~'">'~linkvalue~'</a>' %}
    {{ formmacros.simplefield( label, hreflink, "", "disabled" ) }}
{% endmacro %}


{########################### Team #############################}
{% macro userTeamAjax( userid, teamType, title, sitename ) %}
    {#{% set currentPath = path(app.request.attributes.get('_route'),app.request.attributes.get('_route_params')) %}#}
    {#'currentPath':currentPath, 'postData':postData#}
    {% set teamurl = path(sitename~'_my_team',{'userid':userid, 'teamType':teamType}) %}
    {#<button id="userTeamAjaxDetailsBtn" type="button" class="btn btn-primary" onclick="userTeamTwigMacro('{{ teamurl }}');">#}
    {#Team#}
    {#</button><br>#}
    <div id="userTeamAjaxDetails">

        <div id="userTeamAjaxDetailsPanel-{{ userid }}" class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title text-left">
                    <a
                            id="userTeamAjaxDetailsLink-{{ userid }}"
                            data-toggle="collapse"
                            href="#userTeamAjax"
                            onclick="userTeamTwigMacro('{{ teamurl }}','userTeamAjaxDetailsLink-{{ userid }}','userTeamAjaxDetails');"
                    >
                        {{ title }}
                    </a>
                </h4>
            </div>
            <div id="userTeamAjax" class="panel-collapse collapse in">
            </div>
        </div>

    </div>
{% endmacro %}
{% macro userTeam( user, type, sitename, postData, collapsein ) %}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {#postData:{{ dump(postData) }}#}

    {% if type == "home" %}
        {% set boxnamePrefix = "My " %}
    {% else %}
        {% set boxnamePrefix = "" %}
    {% endif %}

    {% set threshold = 50 %}

    {% set myreportsShow = false %}
    {% set mygroupsShow = false %}
    {% set myservicesShow = false %}
    {% set mydepartmentsShow = false %}
    {% set mydivisionsShow = false %}
    {% set mylabsShow = false %}
    {% set myassistancesShow = false %}

    {#Reports#}
    {% set myreports = controller( 'App\\UserdirectoryBundle\\Controller\\UserController::myObjectsAction', {'postData':postData,'subjectUserId':user.id,'tablename':'myreports','id':null,'name':null} ) %}
    {% if render(myreports)|length > threshold %}
        {% set myreportsShow = true %}     
    {% endif %}

    {#Assistants#}
    {% set myassistants = controller( 'App\\UserdirectoryBundle\\Controller\\UserController::myObjectsAction', {'postData':postData,'subjectUserId':user.id,'tablename':'assistances','id':null,'name':null} ) %}
    {% if render(myassistants)|length > threshold %}
        {% set myassistancesShow = true %} 
    {% endif %}

    {#Group#}
    {% set titleBosses = user.getBosses() %}
    {% set mygroupsArr = {} %}
    {% set myTitleBossesArr = {} %}
    {% for title in titleBosses %}
        {% for myboss in title['bosses'] %}
            {% if myboss and myboss.getId() %}
                {% set table = controller( 'App\\UserdirectoryBundle\\Controller\\UserController::myObjectsAction', {'postData':postData,'subjectUserId':user.id,'tablename':'myboss','id':myboss.getId(),'name':myboss} ) %}
                {% set element = {'table': table, 'element':myboss} %}
                {% set mygroupsArr = mygroupsArr|merge({ (loop.index0): element}) %}
                {% if render(table)|length > threshold %}
                    {% set mygroupsShow = true %} 
                {% endif %}
            {% endif %}
        {% endfor %}
        {% set element = {'title':title['titleobject'],'bosses': title['bosses']} %}
        {% set myTitleBossesArr = myTitleBossesArr|merge({ (loop.index0): element}) %}
    {% endfor %}  

    {#Service#}
    {#{% set services = user.getServices() %}#}
    {#{% set myservicesArr = {} %}#}
    {#{% for service in services %}#}
        {#{% if service and service.getId() %}#}
            {#{% set table = controller( 'AppUserdirectoryBundle:User:myObjects', {'postData':postData,'tablename':'service','id':service.getId(),'name':service} ) %}#}
            {#&#123;&#35;table:{{ dump(render(table)) }}&#35;&#125;#}
            {#&#123;&#35;{% set rowArr = render(table)|split('<tr>') %}&#35;&#125;#}
            {#&#123;&#35;rowArr length:{{ rowArr|length }}&#35;&#125;#}
            {#{% set element = {'table': table, 'element':service} %}#}
            {#{% set myservicesArr = myservicesArr|merge({ (loop.index0): element}) %}#}
            {#{% if render(table)|length > threshold %}#}
                {#{% set myservicesShow = true %}#}
            {#{% endif %}#}
        {#{% endif %}#}
    {#{% endfor %}#}

    {#Research Lab#}
    {% set labs = user.getResearchLabs() %}
    {% set mylabsArr = {} %}
    {% for lab in labs %}
        {% if lab and lab.getId() %}
            {% set table = controller( 'App\\UserdirectoryBundle\\Controller\\UserController::myObjectsAction', {'postData':postData,'tablename':'researchlabs','id':lab.getId(),'name':lab} ) %}
            {% set element = {'table': table, 'element':lab} %}
            {% set mylabsArr = mylabsArr|merge({ (loop.index0): element}) %}
            {% if render(table)|length > threshold %}
                {% set mylabsShow = true %}
            {% endif %}
        {% endif %}
    {% endfor %}

    {#myreports:{{ render(myreports)|length }}#}
    {#mygroupsArr|length:{{ mygroupsArr|length }}#}
    {#myservicesArr|length:{{ myservicesArr|length }}#}

    {#Team#} {#render(myreports)|length should be more than sitename#}
    {% if myreportsShow or mygroupsShow or myservicesShow or mylabsShow or myassistancesShow %}
        <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">

                    <div class="row">
                        <div class="col-xs-6" align="left">
                            <a data-toggle="collapse" href="#myteam" style="color:#fff;">{{ boxnamePrefix }}Team</a>
                        </div>
                        <div class="col-xs-6" align="right">
                            <button type="button" class="btn btn-default btn-xs panel-collapse-btn" onClick="collapseAll(document.getElementById('myteam'))" >Collapse All</button>
                            <button type="button" class="btn btn-default btn-xs panel-collapse-btn" onClick="extendAll(document.getElementById('myteam'))" >Expand All</button>
                        </div>
                    </div>

            </h4>
        </div>
        <div id="myteam" class="panel-collapse collapse {{ collapsein }}">
            <div id="myteam-panel-body" class="panel-body">

                {#Assistance(s)#}
                {% if myassistancesShow %}
                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#myassistances">
                                    {{ boxnamePrefix }}Assistant(s)
                                </a>
                            </h4>
                        </div>
                        <div id="myassistances" class="panel-collapse collapse {{ collapsein }}">
                            <div class="panel-body">
                                {{ render( myassistants ) }}
                            </div>
                        </div>
                    </div>
                {% endif %}

                {#Report(s)#}
                {% if myreportsShow %}
                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#myreports">
                                    {{ boxnamePrefix }}Report(s)
                                </a>
                            </h4>
                        </div>
                        <div id="myreports" class="panel-collapse collapse {{ collapsein }}">
                            <div class="panel-body">
                                {{ render( myreports ) }}
                            </div>
                        </div>
                    </div>
                {% endif %}

                {#Group#}
                {% if mygroupsArr is defined %}
                    {% for mygroup in mygroupsArr %}

                        {% if render( mygroup['table'] )|length > threshold %}
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#mygroups-{{ mygroup['element'].getId() }}">
                                            {{ boxnamePrefix }}Group of <a href="{{ path(sitename~'_showuser',{'id':mygroup['element'].getId()}) }}">{{ mygroup['element'].getUsernameOptimal() }}</a>
                                        </a>
                                    </h4>
                                </div>
                                <div id="mygroups-{{ mygroup['element'].getId() }}" class="panel-collapse collapse {{ collapsein }}">
                                    <div class="panel-body">
                                        {{ render( mygroup['table'] ) }}
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                    {% endfor %}
                {% endif %}


                {#If the user has people she/he reports to, list them here, but separate by the associated title of the user
                ("As a [Medical Director of Informatics] Victor Brodsky reports to: Yao Chen [listed as a search result table]";
                As a [Janitor] Victor Brodsky reports to: John Smith, Mary Jones {listed as lines of the search results table].#}
                {% if myTitleBossesArr is defined and myTitleBossesArr|length > 0 and type == 'profile' %}
                    {% for titleBosses in myTitleBossesArr %}

                        {% set bossArr = {} %}
                        {% set bossidsArr = {} %}
                        {% for boss in titleBosses['bosses'] %}
                            {% set bossHtml = '<a href="'~path(sitename~'_showuser',{'id':boss.getId()})~'">'~boss.getUsernameOptimal()~'</a>' %}
                            {% set bossArr = bossArr|merge([bossHtml]) %}
                            {% set bossidsArr = bossidsArr|merge([boss.getId]) %}
                        {% endfor %}

                        {% set mybosses = controller( 'App\\UserdirectoryBundle\\Controller\\UserController::myObjectsAction', {'postData':postData,'tablename':'mybosses','id':bossidsArr,'name':null} ) %}

                        {% if render( mybosses )|length > threshold  %}

                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#mytitlebosses-{{ titleBosses['title'].getId() }}"
                                                >As a {{ user.getTitleAndNameByTitle(titleBosses['title']) }} reports to:</a> {{ bossArr|join(",")|raw }}

                                    </h4>
                                </div>
                                <div id="mytitlebosses-{{ titleBosses['title'].getId() }}" class="panel-collapse collapse {{ collapsein }}">
                                    <div class="panel-body">
                                        {{ render( mybosses ) }}
                                    </div>
                                </div>
                            </div>

                        {% endif %}

                    {% endfor %}
                {% endif %}


                {#Department(s)#}
                {% if mydepartmentsArr is defined %}
                    {% for mydepartment in mydepartmentsArr %}

                        {% if render( mydepartment['table'] )|length > threshold %}
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#mydepartments-{{ mydepartment['element'].getId() }}">
                                            {{ mydepartment['element'] }} Department
                                        </a>
                                    </h4>
                                </div>
                                <div id="mydepartments-{{ mydepartment['element'].getId() }}" class="panel-collapse collapse {{ collapsein }}">
                                    <div class="panel-body">
                                        {{ render( mydepartment['table'] ) }}
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                    {% endfor %}
                {% endif %}

                {#Division(s)#}
                {% if mydivisionsArr is defined %}
                    {% for mydivision in mydivisionsArr %}

                        {% if render( mydivision['table'] )|length > threshold %}
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#mydivisions-{{ mydivision['element'].getId() }}">
                                            {{ mydivision['element'] }} Division
                                        </a>
                                    </h4>
                                </div>
                                <div id="mydivisions-{{ mydivision['element'].getId() }}" class="panel-collapse collapse {{ collapsein }}">
                                    <div class="panel-body">
                                        {{ render( mydivision['table'] ) }}
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                    {% endfor %}
                {% endif %}


                {#Service(s)#}
                {% if myservicesArr is defined %}
                    {% for myservice in myservicesArr %}

                        {% if render( myservice['table'] )|length > threshold %}
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#myservices-{{ myservice['element'].getId() }}">
                                            {{ myservice['element'] }} Service
                                        </a>
                                    </h4>
                                </div>
                                <div id="myservices-{{ myservice['element'].getId() }}" class="panel-collapse collapse {{ collapsein }}">
                                    <div class="panel-body">
                                        {{ render( myservice['table'] ) }}
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                    {% endfor %}
                {% endif %}


                {#Research Lab(s)#}
                {% if mylabsArr is defined %}
                    {% for mylab in mylabsArr %}

                        {% if render( mylab['table'] )|length > threshold %}
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#mylabs-{{ mylab['element'].getId() }}">
                                            {{ mylab['element'] }} Research Lab
                                        </a>
                                    </h4>
                                </div>
                                <div id="mylabs-{{ mylab['element'].getId() }}" class="panel-collapse collapse {{ collapsein }}">
                                    <div class="panel-body">
                                        {{ render( mylab['table'] ) }}
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                    {% endfor %}
                {% endif %}


            </div> {#myteam-panel-body#}
        </div>{#myteam#}
        </div>{#panel panel-primary#}
    {% else %}
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <div class="row">
                        <div class="col-xs-6" align="left">
                            <a data-toggle="collapse" href="#myteam" style="color:#fff;">{{ boxnamePrefix }}Team</a>
                        </div>
                        <div class="col-xs-6" align="right">
                            {#<button type="button" class="btn btn-default btn-xs panel-collapse-btn" onClick="collapseAll(document.getElementById('myteam'))" >Collapse All</button>#}
                            {#<button type="button" class="btn btn-default btn-xs panel-collapse-btn" onClick="extendAll(document.getElementById('myteam'))" >Expand All</button>#}
                        </div>
                    </div>
                </h4>
            </div>
            <div id="myteam" class="panel-collapse collapse in">
                <div id="myteam-panel-body" class="panel-body">
                    No team members found
                </div> {#myteam-panel-body#}
            </div>{#myteam#}
        </div>{#panel panel-primary#}
    {% endif %}

    {#<br>end of myteam: getMemoryUsage: {{ user.getMemoryUsage }}<br>#}

{% endmacro %}
{########################### EOF My Team #############################}


{% macro userWrapperAjax( userid, sitename, cycle ) %}
    {#userWrapper#}
    <div id="userWrapperAjaxDetails">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title text-left">
                    <a
                        id="userWrapperAjaxBtn"
                        data-toggle="collapse"
                        href="#userWrapperAjax"
                        onclick="userWrapperAjax({{ userid }},'userWrapperAjaxBtn', 'userWrapperAjaxDetails', '{{ cycle }}');"
                    >
                        Associated Identities
                    </a>

                </h4>
            </div>
            <div id="userWrapper" class="panel-collapse collapse">
                <div class="panel-body">

                </div>
            </div>
        </div>
    </div>
{% endmacro %}


{% macro auditLog( user, type, sitename, postData, collapsein ) %}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {#{{ dump(postData) }}#}
    {% if postData and postData['sort'] is defined %}
        {% if ('logger.' in postData['sort']) or ('eventType.' in postData['sort']) %}
            {% set collapsein = "in" %}
        {% endif %}
    {% endif %}

    {% set auditlog = controller( 'App\\UserdirectoryBundle\\Controller\\LoggerController::getAuditLogAction', {'postData':postData,'id':user.id, 'onlyheader':true} ) %}

    {#Audit Log#}
    {#{% set auditlog = true %}#}
    {% if auditlog is defined and auditlog %}
        <div class="panel panel-info">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" href="#auditlog">
                        Audit Log
                    </a>
                </h4>
            </div>
            <div id="auditlog" class="panel-collapse collapse {{ collapsein }}">
                <div class="panel-body">
                    {{ render( auditlog ) }}

                    <br>

                    <div class="text-center col-xs-12">
                        <a href="{{ path(sitename~'_logger_user_all',{'id':user.id}) }}" target="_blank">Event Log</a>
                    </div>

                </div>
            </div>
        </div>
    {% endif %}

{% endmacro %}


{% macro getLoggerTreeByType( logger, treeType, loggeraction ) %}

    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

    {% for tree in logger.getInstitutionTreesByType(treeType) %}
        <div class="well well-sm">
            <div class="text-center col-xs-12">
                {% if treeType == 'AdministrativeTitle' %}
                    Administrative Title
                {% elseif treeType == 'AppointmentTitle' %}
                    Appointment Title
                {% elseif treeType == 'MedicalTitle' %}
                    Medical Title
                {% else %}
                    {{ treeType }}
                {% endif %}
            </div>
            {% if tree.institution %}
                {{ formmacros.simplefield( loggeraction~" by user from Institution:", tree.institution.name, "input", "disabled" ) }}
            {% endif %}
            {#{% if tree.department %}#}
                {#{{ formmacros.simplefield( loggeraction~" by user from Department:", tree.department.name, "input", "disabled" ) }}#}
            {#{% endif %}#}
            {#{% if tree.division %}#}
                {#{{ formmacros.simplefield( loggeraction~" by user from Division:", tree.division.name, "input", "disabled" ) }}#}
            {#{% endif %}#}
            {#{% if tree.service %}#}
                {#{{ formmacros.simplefield( loggeraction~" by user from Service:", tree.service.name, "input", "disabled" ) }}#}
            {#{% endif %}#}
        </div>
    {% endfor %}

{% endmacro %}


{% macro avatarForm(user,cycle) %}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if showFlag %}

        <div class="avatar-view-clean-default">
            {% if user.avatar %}
                {{ usermacros.showDocumentAsImage(user.avatar,'Avatar','') }}
            {% else %}
                {% set avatarImage = asset('orderassets/AppUserdirectoryBundle/fengyuanchen-image-cropper/img/Placeholder-User-Glyph-Icon.png') %}
                <img src="{{ avatarImage }}" alt="Avatar" height="126" width="116">
            {% endif %}

        </div>

    {% else %}

        <div class="container" id="crop-avatar">

            <!-- Current avatar -->
            <div class="avatar-view" title="Change the photo" style="height:126px; width:116px;">
                {#<img src="{{ avatarImage }}" alt="Avatar" height="126" width="116">                #}
                {% if user.avatar %}
                    {{ usermacros.showDocumentAsImage(user.avatar,'Avatar','','objectFull') }}
                {% else %}
                    {% set avatarImage = asset('orderassets/AppUserdirectoryBundle/fengyuanchen-image-cropper/img/Placeholder-User-Glyph-Icon.png') %}
                    <img src="{{ avatarImage }}" alt="Avatar" height="126" width="116">
                {% endif %}
            </div>

            <!-- Cropping modal -->
            <div class="modal fade" id="avatar-modal" aria-hidden="true" aria-labelledby="avatar-modal-label" role="dialog" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        {#<form class="avatar-form" action="crop-avatar.php" enctype="multipart/form-data" method="post">#}
                        <form class="avatar-form" action="{{ path("employees_save_avatar") }}" enctype="multipart/form-data" method="post">
                            <div class="modal-header">
                                <button class="close" data-dismiss="modal" type="button">&times;</button>
                                <h4 class="modal-title" id="avatar-modal-label">Profile Photo</h4>
                            </div>
                            <div class="modal-body">
                                <div class="avatar-body">

                                    <!-- Upload image and data -->
                                    <div class="avatar-upload">
                                        <input class="avatar-userid" name="avatar_userid" type="hidden" value="{{ user.id }}">
                                        <input class="avatar-src" name="avatar_src" type="hidden">
                                        <input class="avatar-data" name="avatar_data" type="hidden">
                                        <label for="avatarInput">Upload:</label>
                                        <input class="avatar-input" id="avatarInput" name="avatar_file" type="file">
                                    </div>

                                    <!-- Crop and preview -->
                                    <div class="row">
                                        <div class="col-md-9">
                                            <div class="avatar-wrapper"></div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="avatar-preview avatar-preview-default"></div>
                                            {#<div class="avatar-preview preview-lg"></div>#}
                                            {#<div class="avatar-preview preview-md"></div>#}
                                            {#<div class="avatar-preview preview-sm"></div>#}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button class="btn btn-default" data-dismiss="modal" type="button">Cancel</button>
                                <button class="btn btn-primary avatar-save" type="button">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div><!-- /.modal -->

            <!-- Loading state -->
            <div class="loading" aria-label="Loading" role="img" tabindex="-1"></div>
        </div>

    {% endif %}

{% endmacro %}


{% macro showAssistantes( user, sitename ) %}

    {% import "AppUserdirectoryBundle/Default/usermacros.html.twig" as usermacros %}

    {% for location in user.locations %}
        {% if location.assistant %}
            {% if location.assistant|length > 0 %}
                <p style="margin-bottom:0;"><i>{{ location.name }}:</i></p>
            {% endif %}
            {% for assistant in location.assistant %}
                <a href="{{ path(sitename~'_showuser', { 'id': assistant.id }) }}">{{ assistant.getUsernameShortest() }}</a>
                {# phones #}
                {% set phones = assistant.getAllPhones() %}
                {% if phones|length > 0 %}
                    {% for phone in phones %}
                        <p style="margin-bottom:0;">{{ phone['prefix'] }}{{ usermacros.phoneHref(phone['phone']) }}</p>
                    {% endfor %}
                {% endif %}
                {# emails #}
                {% set emails = assistant.getAllEmail() %}
                {% if emails|length > 0 %}
                    {% for email in emails %}
                        <p style="margin-bottom:0;">{{ email['prefix'] }}<a href="mailto:{{ email['email'] }}" target="_top">{{ email['email'] }}</a></p>
                    {% endfor %}
                {% endif %}
            {% endfor %}
        {% endif %}
        {% if location.assistant|length > 0 %}
            <br>
        {% endif %}
    {% endfor %}

{% endmacro %}




{% macro trainingObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% if formfield.vars.value and formfield.vars.value.status == constant('App\\UserdirectoryBundle\\Entity\\BaseUserAttributes::STATUS_UNVERIFIED') or prototype == 'prototype' %}
        {% set wellclass = "user-alert-warning" %}
    {% else %}
        {% set wellclass = "" %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}


    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {% if cycle != 'show_user' %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" >
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </div>
        {% endif %}

        {{ formmacros.field(formfield.id) }}

        {{ usermacros.statusVerifiedField(formfield,cycle) }}

        {{ formmacros.field_notempty(formfield.degree,cycle) }}

        {#do not hide if itself is empty/unchecked, however hide on the profile view page if the Degree field is empty#}
        {#if the user selects Degree="MD", this checkmark should get automatically get checked, but allow the user to uncheck it#}
        {#{% if formfield.appendDegreeToName is defined %}#}
            {#{% if formfield.vars.value and (formfield.vars.value.appendDegreeToName == 1 or not formfield.vars.value.degree) %}#}
                {#{% set value = 0 %}#}
            {#{% else %}#}
                {#{% set value = 1 %}#}
            {#{% endif %}#}
            {#{{ usermacros.checkbox_notempty(formfield.appendDegreeToName,value,cycle) }}#}
        {#{% endif %}#}
        {% if not showFlag %}
            {{ formmacros.field(formfield.appendDegreeToName) }}
        {% endif %}

        {#hide residency Specialty on view if fellowship Subspecialty is not empty#}
        {% if not showFlag or (showFlag and formfield.vars.value and not formfield.vars.value.fellowshipSubspecialty) %}
            {{ formmacros.field_notempty(formfield.residencySpecialty,cycle) }}
        {% endif %}

        {{ formmacros.field_notempty(formfield.fellowshipSubspecialty,cycle) }}

        {% if formfield.institution is defined %}
            {{ formmacros.field(formfield.institution) }}
        {% endif %}

        {{ formmacros.fieldDateLabel_notempty(formfield.startDate,cycle,'allow-future-date') }}

        {% if formfield.completionDate is defined %}
            {{ formmacros.fieldDateLabel(formfield.completionDate,'allow-future-date') }}
        {% endif %}

        {% if formfield.completionReason is defined %}
            {{ formmacros.field_notempty(formfield.completionReason,cycle) }}
        {% endif %}

        {% if formfield.majors is defined %}
            {{ formmacros.field_notempty(formfield.majors,cycle) }}
        {% endif %}

        {% if formfield.minors is defined %}
            {{ formmacros.field_notempty(formfield.minors,cycle) }}
        {% endif %}

        {% if formfield.honors is defined %}
            {{ formmacros.field_notempty(formfield.honors,cycle) }}
        {% endif %}

        {% if formfield.fellowshipTitle is defined %}
            {{ formmacros.field(formfield.fellowshipTitle) }}
        {% endif %}

        {#do not hide if itself is empty/unchecked, however hide on the profile view page if the Professional Fellowship field is empty#}
        {#{% if formfield.appendFellowshipTitleToName is defined %}#}
            {#{% if formfield.vars.value and (formfield.vars.value.appendFellowshipTitleToName == 1 or not formfield.vars.value.fellowshipTitle) %}#}
                {#{% set value = 0 %}#}
            {#{% else %}#}
                {#{% set value = 1 %}#}
            {#{% endif %}#}
            {#{{ usermacros.checkbox_notempty(formfield.appendFellowshipTitleToName,value,cycle) }}#}
        {#{% endif %}#}
        {% if not showFlag and formfield.appendFellowshipTitleToName is defined %}
            {{ formmacros.field(formfield.appendFellowshipTitleToName) }}
        {% endif %}

    </div>


    {% do formfield.setRendered %}

{% endmacro %}


{% macro addNewObjectBtn( cycle, classname, title, addClass, callback ) %}
    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if not showFlag %}

        {% set addClassStr = "" %}
        {% if addClass is defined and addClass %}
            {% set addClassStr = addClass %}
        {% endif %}

        {% set callbackStr = 0 %}
        {% if callback is defined and callback %}
            {% set callbackStr = callback %}
        {% endif %}

        <div style="align-content: center;">
            <button class="btn btn-default {{ addClassStr }}" onClick="addNewObject(this,'{{ classname }}',{{ callbackStr }})" type='button'>{{ title }}</button>
        </div>
    {% endif %}
{% endmacro %}


{% macro userUrlLink() %}
    <a href="{{ path(employees_sitename~'_showuser_notstrict', { 'id': 'user_replacement_id' }) }}" target="_blank">{{ 'user_replacement_username' }}</a><br>
{% endmacro %}

{#viewType:
    "snapshot" for avatar and general snapshot (viewing eventlog will not be generated).
    "snapshot-sm" - for small snapshots used in the list.
#}
{% macro showDocumentAsImage( documentEntity, alt, atr, objectClass, sitename, viewType ) %}

    {% if not objectClass or objectClass is not defined %}
        {#Note: objectMaxFull causes avatar not visible on pdf converted file#}
        {% set objectClass = "objectMaxFull" %}
    {% endif %}

    {% if sitename is not defined or not sitename %}
        {#get sitename#}
        {% set sitename = employees_sitename %} {#default sitename#}
        {% set requestRoute = app.request.attributes.get('_route') %}
        {% set requestAttributes = app.request.attributes.get('_route_params') %}
        {% if requestRoute and requestAttributes %}
            {% set currentPath = path(requestRoute,requestAttributes) %}
            {% if '/scan/' in currentPath %}
                {% set sitename = scan_sitename %}
            {% endif %}
            {% if '/directory/' in currentPath %}
                {% set sitename = employees_sitename %}
            {% endif %}
            {% if '/fellowship-applications/' in currentPath %}
                {% set sitename = fellapp_sitename %}
            {% endif %}
            {% if '/residency-applications/' in currentPath %}
                {% set sitename = resapp_sitename %}
            {% endif %}
            {% if '/deidentifier/' in currentPath %}
                {% set sitename = deidentifier_sitename %}
            {% endif %}
            {% if '/time-away-request/' in currentPath %}
                {% set sitename = vacreq_sitename %}
            {% endif %}
            {% if '/call-log-book/' in currentPath %}
                {% set sitename = calllog_sitename %}
            {% endif %}
            {% if '/critical-result-notifications/' in currentPath %}
                {% set sitename = crn_sitename %}
            {% endif %}
            {% if '/translational-research/' in currentPath %}
                {% set sitename = translationalresearch_sitename %}
            {% endif %}
            {% if '/dashboards/' in currentPath %}
                {% set sitename = dashboard_sitename %}
            {% endif %}
        {% endif %}
        {#EOF get sitename#}
    {% endif %}

    {% if viewType is not defined or not viewType %}
        {% set viewType = 'snapshot' %}
    {% endif %}

    {% set docAbsPath = documentEntity.getAbsoluteUploadFullPath() %}
    {#{% set docSnapshotPath = path(sitename~'_file_view', { 'id': documentEntity.id, 'viewType':viewType}) %}#}
    {#docAbsPath={{ docAbsPath }}<br>#}


    {% if '.pdf' in docAbsPath or '.doc' in docAbsPath %}
        {#do not show PDF and DOC preview#}
        {% set docSnapshotPath = docAbsPath %}
    {% else %}
        {% set docSnapshotPath = path(sitename~'_file_view', { 'id': documentEntity.id, 'viewType':viewType}) %}
    {% endif %}

    <a href="{{ path(sitename~'_file_view', { 'id': documentEntity.id}) }}" target="_blank">

        {% if '.pdf' in docAbsPath %}
            {#pdf!!! docAbsPath={{ docAbsPath }}#}
            <object {{ atr }}
                  {#alt="{{ docAlt }}"#}
                  data="{{ docSnapshotPath }}"
                  {#data="{{ docAbsPath }}"#}
                  {#style="display:block; max-width:100%; max-height:100%;"#}
                  {#style="display:block; width:100px; height:100px;"#}
                  type="application/pdf"
                  class="{{ objectClass }}"
            >
            </object>
        {% elseif '.doc' in docAbsPath %}
            <object {{ atr }}
                  {#alt="{{ docAlt }}"#}
                  data="{{ docSnapshotPath }}"
                  {#style="display:block; max-width:100%; max-height:100%;"#}
                  type="application/msword"
                  class="{{ objectClass }}"
            >
            </object>
        {% elseif '.tif' in docAbsPath %}
            {#<embed  {{ atr }} alt="{{ docAlt }}"#}
                              {#src="{{ docSnapshotPath }}"#}
                              {#type="image/tiff"#}
                              {#class="{{ objectClass }}"#}
                              {#negative=yes#}
            {#>#}
            <object {{ atr }}
                    {#alt="{{ docAlt }}"#}
                    data="{{ docSnapshotPath }}"
                    {#style="display:block; max-width:100%; max-height:100%;"#}
                    type="image/tiff"
                    class="{{ objectClass }}"
            >
            </object>
        {% else %}
            {#img!!!#}
            {% set docAlt = alt~" "~documentEntity.getOriginalnameClean ~" "~ documentEntity.getCreatedate|date("'Y-m-d H:i:s'") %}
            <img {{ atr }}
                src="{{ docSnapshotPath }}"
                alt="{{ docAlt }}"
                style="display:block; max-width:100%; max-height:100%;"
                class="{{ objectClass }}"
            />
        {% endif %}

    </a>

{% endmacro %}

{#Cannot extend from a block.#}
{#{% macro extendBase( sitename ) %}#}
    {#default is user base#}
    {#{% set extendStr = "AppUserdirectoryBundle/Default/base.html.twig" %}#}

    {#{% if sitename == 'employees' %}#}
        {#{% set extendStr = "AppUserdirectoryBundle/Default/base.html.twig" %}#}
    {#{% elseif sitename == 'fellapp' %}#}
        {#{% set extendStr = "AppFellAppBundle/Default/base.html.twig" %}#}
    {#{% elseif sitename == 'deidentifier' %}#}
        {#{% set extendStr = "AppDeidentifierBundle/Default/base.html.twig" %}#}
    {#{% elseif sitename == 'scan' %}#}
        {#{% set extendStr = "AppOrderformBundle/Default/base.html.twig" %}#}
    {#{% elseif sitename == 'vacreq' %}#}
        {#{% set extendStr = "AppVacReqBundle/Default/base.html.twig" %}#}
    {#{% elseif sitename == 'calllog' %}#}
        {#{% set extendStr = "AppCallLogBundle/Default/base.html.twig" %}#}
    {#{% elseif sitename == 'translationalresearch' %}#}
        {#{% set extendStr = "AppTranslationalResearchBundle/Default/base.html.twig" %}#}
    {#{% endif %}#}

    {#{% extends extendStr%}#}
{#{% endmacro %}#}
