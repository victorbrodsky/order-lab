{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

{% extends "AppVacReqBundle/Default/base.html.twig" %}

{% block title %}
    Vacation & Business Travel Request Groups
{% endblock %}


{% block content %}


    <h4 class="text-info" align="center">
        Vacation & Business Travel Request Groups
    </h4>


    <p>
        <button type="button" class="btn btn-default btn-sm" onClick="collapseAll()" >Collapse All</button>
        <button type="button" class="btn btn-default btn-sm" onClick="extendAll()" >Expand All</button>
    </p>

    {#<br>#}

    {% for organizationalInstitution in organizationalInstitutions %}
        {#organizationalInstitutionId={{ organizationalInstitution.id }}#}
        <p>
            {{ render(controller('App\\VacReqBundle\\Controller\\ApproverController::organizationalInstitutionAction', { 'institutionId': organizationalInstitution.id })) }}
        </p>

    {% endfor %}


    {% for carryOverRequestGroup in carryOverRequestGroups %}

        <p>
            {{ render(controller('App\\VacReqBundle\\Controller\\ApproverController::carryOverRequestGroupAction', { 'groupId': carryOverRequestGroup.id })) }}
        </p>

    {% endfor %}

    {% if is_granted('ROLE_VACREQ_ADMIN') %}
        <a class="btn-sm btn-warning" href="{{ path('vacreq_group_add') }}">Add Group</a>
    {% endif %}


{% endblock %}

{% block additionaljs %}

    <script language="Javascript">

        $(document).ready(function() {

            $('.user-start-date').on('change', function(event) {
                vacreqActivateDateBtn(this);
            });
//            $('.user-start-date').on("clearDate", function (e) {
//                //var inputField = $(this).find('input.datepicker, input.datepicker-exception');
//                console.log('vacreq on clear Date');
//                vacreqActivateDateBtn(this);
//            });

            $('.user-end-date').on('change', function(event) {
                vacreqActivateDateBtn(this);
            });

        });

        //override datepicker's customClearDatepickerFunction in user-common.js
        function customClearDatepickerFunction(inputField) {
            console.log('vacreq customClearDatepickerFunction');
            vacreqActivateDateBtn(inputField.get(0));
        }

        function vacreqActivateDateBtn(dateField) {
            console.log('vacreqActivateDateBtn btn changed');
            var tr = $(dateField).closest('tr');
            var btn = tr.find('.save-dates-btn');
            btn.html('Save');
            btn.removeClass('btn-default').addClass('btn-primary');
            btn.prop('disabled', false);
        }

        function vacreqDisableBtn(saveBtn) {
            $(saveBtn).removeClass('btn-primary').addClass('btn-default');
            $(saveBtn).prop('disabled', true);
            $(saveBtn).html('Saved');

            //var tr = $(saveBtn).closest('tr');
            //tr.find('.save-dates-btn').prop('disabled', true);
            //saveBtn.disabled = true;
            //tr.find('.save-dates-btn').prop('disabled', true);

            //clearTimeout(timer);
            //button.disabled = false;
            //saveBtn.removeAttribute('data-loading');

            //$(saveBtn).find('span').remove();
            //$(saveBtn).find('div').remove();
            //$(saveBtn).prop('disabled', true);
            //saveBtn.disabled = true;
            //saveBtn.setAttribute("disabled", "");
            //$(saveBtn).addClass("disabled");
        }

        function vacreqSyncUsersInOtherGroups( userId, startDate, endDate ) {
            //class=vacreq_end_date_userId
            $('.vacreq_start_date_'+userId).each(function() {
                vacreqSetEmploymentDate($(this),startDate);
            });
            $('.vacreq_end_date_'+userId).each(function() {
                vacreqSetEmploymentDate($(this),endDate);
            });
        }
        function vacreqSetEmploymentDate( inputEl, date ) {
            console.log('vacreqSetEmploymentDate: date='+date);
            inputEl.datepicker('setDate', date);

            //disable save button
            var tr = inputEl.closest('tr');
            var saveBtn = tr.find('.save-dates-btn').get(0);
            vacreqDisableBtn(saveBtn);
        }

        function vacreqUpdateUserStartEndDate( userId, emplstatusId, saveBtn ) {
            console.log('Save btn clicked');
            //var lbtn = Ladda.create(saveBtn);
            //lbtn.start();

            //$(saveBtn).attr('value', '1Saving...');
            //$(saveBtn).prop('value', '2Saving...');
            $(saveBtn).html('Saving...');

            var tr = $(saveBtn).closest('tr');
            var startDate = tr.find('.user-start-date').val();
            var endDate = tr.find('.user-end-date').val();
            console.log('userId='+userId+', emplstatusId='+emplstatusId+', startDate='+startDate+', endDate='+endDate);

            var url = Routing.generate('employees_update_users_date_vacreq');
            $.ajax({
                type: "POST",
                url: url,
                timeout: _ajaxTimeout,
                //dataType: 'json',
                async: asyncflag,
                //data: {modifiedData: modifiedDataArr},
                data: {'userId': userId, 'emplstatusId': emplstatusId, 'startDate': startDate, 'endDate': endDate}
            }).success(function(response) {
                console.log(response);
                //disable button and set to default
                vacreqDisableBtn(saveBtn);
                //sync in other groups
                vacreqSyncUsersInOtherGroups(userId,startDate,endDate);
            }).done(function() {
                console.log("done");
                //lbtn.stop();
                //lbtn.remove();
                //$(saveBtn).prop('value', 'Saved');
            }).error(function(jqXHR, textStatus, errorThrown) {
                console.log('Error : ' + errorThrown);
                //$("#panel-title-products").show();
                //$("#panel-title-products").html(errorThrown);
            });
        }

    </script>

{% endblock %}
