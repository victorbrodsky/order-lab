{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

{% extends "AppVacReqBundle/Default/base.html.twig" %}



{% block title %}
    Organizational Group Management for {{ organizationalGroupName }}
{% endblock %}



{% block content %}

    <h4 class="text-info" align="center">
        Organizational Group Management for {{ organizationalGroupName }}
    </h4>

    <br>

    {#<div class="panel panel-info">#}
        {#<div class="panel-heading">#}
            {#<h4 class="panel-title">#}
                {#<a data-toggle="collapse" href="#vacreq-organizational-group-approver-type">#}
                    {#Approval Group Type#}
                {#</a>#}
            {#</h4>#}
        {#</div>#}
        {#<div id="vacreq-organizational-group-approver-type" class="panel-collapse collapse in">#}
            {#<div class="panel-body">#}

                {#<div class="well">#}
                    {#{{ render( url('vacreq_orginst_approval_group_type',{'instid':organizationalGroupId})) }}#}
                {#</div>#}

            {#</div> <!-- panel-body -->#}
        {#</div> <!-- panel-collapse -->#}
    {#</div> <!-- panel panel-info -->#}

    {#approvalTypes#}
    <div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#vacreq-organizational-group-approvaltypes">
                    Approval Group Type
                </a>
            </h4>
        </div>
        <div id="vacreq-organizational-group-approvaltypes" class="panel-collapse collapse in">
            <div class="panel-body">

                <div class="well">
                    {{ render( url('vacreq_orginst_approvaltypes',{'instid':organizationalGroupId})) }}
                </div>

            </div> <!-- panel-body -->
        </div> <!-- panel-collapse -->
    </div> <!-- panel panel-info -->


    <div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#vacreq-organizational-group-approver">
                    Approver(s)
                </a>
            </h4>
        </div>
        <div id="vacreq-organizational-group-approver" class="panel-collapse collapse in">
            <div class="panel-body">

                {% for approver in approvers %}
                    <div class="well">
                        {{ render(controller('App\\VacReqBundle\\Controller\\ApproverController::userManagementAction', { 'userid': approver.id, 'instid':organizationalGroupId, 'roleId':approverRoleId})) }}
                    </div>
                {% endfor %}

                {#<form id="add_authorized_user_form" action="{{ path('vacreq_orginst_add_user',{'roleId':approverRoleId}) }}" method="GET">#}

                    {#{{ formmacros.field(form.keytype) }}#}
                    {#{{ formmacros.field(form.primaryPublicUserId) }}#}

                    {#<p>#}
                        {#<button type='submit' class="btn btn-info btn-sm">Add Approver</button>#}
                    {#</p>#}
                {#</form>#}
                {% if not approverRoleId %}
                    {% set approverRoleId = "nonerole" %}
                {% endif %}
                <div class="well">
                    <p><a href="{{ path('employees_new_user') }}" target="_blank">
                        If you do not see the person you are looking for in the drop down menu above,
                        please follow this link to add the new user to the system, then return to this page and reload it.
                    </a></p>
                    {{ render( url('vacreq_orginst_add_user',{'instid':organizationalGroupId,'roleId':approverRoleId,'btnName':'Add Approver(s)'})) }}
                </div>

            </div> <!-- panel-body -->
        </div> <!-- panel-collapse -->
    </div> <!-- panel panel-info -->


    <div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#vacreq-organizational-group-submitter">
                    Submitter(s)
                </a>
            </h4>
        </div>
        <div id="vacreq-organizational-group-submitter" class="panel-collapse collapse in">
            <div class="panel-body">

                {% if not submitterRoleId %}
                    {% set submitterRoleId = "nonerole" %}
                {% endif %}

                {% for submitter in submitters %}
                    <div class="well">
                        {#{{ submitter }}#}
                        {#({{ approver.getSiteRoles('SUBMITTER')|join(', ') }})#}
                        {#the same as render(controller('AppVacReqBundle:Approver:userManagement'#}
                        {{ render( url('vacreq_orginst_user_management',{'userid':submitter.id,'instid':organizationalGroupId, 'roleId':submitterRoleId}), {'default': 'AppUserdirectoryBundle/Default/default-hinclude-content.html.twig'} ) }}
                    </div>
                {% endfor %}

                <div class="well">
                    <p><a href="{{ path('employees_new_user') }}" target="_blank">
                        If you do not see the person you are looking for in the drop down menu above,
                        please follow this link to add the new user to the system, then return to this page and reload it.
                    </a></p>
                    {{ render( url('vacreq_orginst_add_user',{'instid':organizationalGroupId,'roleId':submitterRoleId,'btnName':'Add Submitter(s)'})) }}
                </div>

            </div> <!-- panel-body -->
        </div> <!-- panel-collapse -->
    </div> <!-- panel panel-info -->

    <div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#vacreq-organizational-group-proxysubmitter">
                    Proxy Submitter(s)
                </a>
            </h4>
        </div>
        <div id="vacreq-organizational-group-proxysubmitter" class="panel-collapse collapse in">
            <div class="panel-body">

                {% if proxySubmitterRoleId %}
                {% for proxySubmitter in proxySubmitters %}
                    <div class="well">
                        {{ render( url('vacreq_orginst_user_management',{'userid':proxySubmitter.id,'instid':organizationalGroupId, 'roleId':proxySubmitterRoleId}), {'default': 'AppUserdirectoryBundle/Default/default-hinclude-content.html.twig'} ) }}
                    </div>
                {% endfor %}

                <div class="well">
                    <p><a href="{{ path('employees_new_user') }}" target="_blank">
                            If you do not see the person you are looking for in the drop down menu above,
                            please follow this link to add the new user to the system, then return to this page and reload it.
                        </a></p>
                    {{ render( url('vacreq_orginst_add_user',{'instid':organizationalGroupId,'roleId':proxySubmitterRoleId,'btnName':'Add Proxy Submitter(s)'})) }}
                </div>
                {% else %}
                    <p>Associated role ROLE_VACREQ_PROXYSUBMITTER does not exist</p>
                {% endif %}

            </div> <!-- panel-body -->
        </div> <!-- panel-collapse -->
    </div> <!-- panel panel-info -->


    {#Time Away Group Request Submitter#}
    {#They should be able to submit only on behalf of those who belong as submitters #}
    {#to the same groups + see statistics on the “My Group” page for those same groups, #}
    {#but NOT approve requests.#}
    {#<div class="panel panel-info">#}
        {#<div class="panel-heading">#}
            {#<h4 class="panel-title">#}
                {#<a data-toggle="collapse" href="#vacreq-organizational-group-proxysubmitterusers">#}
                    {#Proxy Submitter(s)#}
                {#</a>#}
            {#</h4>#}
        {#</div>#}
        {#<div id="vacreq-organizational-group-proxysubmitterusers" class="panel-collapse collapse in">#}
            {#<div class="panel-body">#}

                {#<div class="well">#}
                    {#{{ render( url('vacreq_orginst_proxysubmitterusers',{'instid':organizationalGroupId})) }}#}
                {#</div>#}

            {#</div> <!-- panel-body -->#}
        {#</div> <!-- panel-collapse -->#}
    {#</div> <!-- panel panel-info -->#}


    {#informUsers#}
    <div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#vacreq-organizational-group-defaultinformusers">
                    Default Individuals to Inform
                </a>
            </h4>
        </div>
        <div id="vacreq-organizational-group-defaultinformusers" class="panel-collapse collapse in">
            <div class="panel-body">

                <div class="well">
                    {{ render( url('vacreq_orginst_defaultinformusers',{'instid':organizationalGroupId})) }}
                </div>

            </div> <!-- panel-body -->
        </div> <!-- panel-collapse -->
    </div> <!-- panel panel-info -->

    <div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#vacreq-organizational-group-emails">
                    Confirmation Email List
                </a>
            </h4>
        </div>
        <div id="vacreq-organizational-group-emails" class="panel-collapse collapse in">
            <div class="panel-body">

                <div class="well">
                    {{ render( url('vacreq_orginst_emailusers',{'instid':organizationalGroupId})) }}
                </div>

            </div> <!-- panel-body -->
        </div> <!-- panel-collapse -->
    </div> <!-- panel panel-info -->



    <br>
    {#<p>#}
        {#<a class="btn-sm btn-danger" href="#">Update</a>#}
    {#</p>#}
    {% if is_granted('ROLE_VACREQ_ADMIN') %}
        <p>
            <a
                general-data-confirm="Are you sure you want to remove this organizational group by removing approver and submitter roles?"
                class="btn-sm btn-danger" href="{{ path('vacreq_group_remove',{'instid':organizationalGroupId}) }}"
            >
                Delete Group
            </a>
        </p>
    {% endif %}

    <br>

{% endblock %}



{% block additionaljs %}

    <script>

        $(document).ready(function() {


        });

        //We don't need to update the roles from the Group Management page. We need only add or remove user.
        function updateVacReqGroupUser(btn,userid,instid,roleId) {
            var formid = "vacreq_orginst_user_management_"+userid+"_"+roleId;
            //console.log('formid='+formid);

            var form = $('#'+formid);

            //get roles by class vacreq-roles
            var roles = form.find('.vacreq-roles').select2('val');
            //console.log('roles='+roles);

            if( !roles || roles == '' ) {
                roles = 0;
            }

            var updateUserUrl = Routing.generate('vacreq_orginst_user_update', {userid: userid, instid:instid, roleIds:roles});
            //console.log('updateUserUrl='+updateUserUrl);

            //$('#'+formid).submit();
            $.get(updateUserUrl, function(data, status){
                //console.log("Data: " + data + "\nStatus: " + status);
                if( status == "success" ) {
                    //reload page
                    location.reload();
                }
            });
        }

        function updateVacReqGroupEmailUsers(btn,instid) {

            var lbtn = Ladda.create(btn);
            lbtn.start();

            var formid = "vacreq_orginst_emailusers";
            //console.log('formid='+formid);

            var form = $('#'+formid);

            //get roles by class vacreq-roles
            var users = form.find('.vacreq-emailusers').select2('val');
            //console.log('users='+users);

            if( !users || users == '' ) {
                users = 0;
            }

            var updateUserUrl = Routing.generate('vacreq_orginst_emailusers_update', {instid:instid,users:users});
            //console.log('updateUserUrl='+updateUserUrl);

            //$('#'+formid).submit();
            $.get(updateUserUrl, function(data, status){
                lbtn.stop();
                //console.log("Data: " + data + "\nStatus: " + status);
                if( status == "success" ) {
                    //reload page
                    location.reload();
                }
            });
        }

//        //OLD
//        function updateVacReqApprovalGroupType(btn,instid) {
//
//            var lbtn = Ladda.create(btn);
//            lbtn.start();
//
//            var formid = "vacreq_orginst_approvalgrouptype";
//            //console.log('formid='+formid);
//
//            var form = $('#'+formid);
//
//            //get roles by class vacreq-roles
//            var approvalGroupTypeId = 0;
//            var approvalGroupType = form.find('#oleg_vacreqbundle_approval_group_type_approvalGroupTypes').select2('data');
//            if( approvalGroupType ) {
//                approvalGroupTypeId = approvalGroupType.id;
//            }
//            console.log('approvalGroupTypeId='+approvalGroupTypeId);
//
//            if( !approvalGroupTypeId || approvalGroupTypeId == '' ) {
//                approvalGroupTypeId = 0;
//            }
//
//            var updateApprovalGroupUrl = Routing.generate(
//                    'vacreq_orginst_approval_group_type_update',
//                    {instid:instid, approvalgrouptypeid:approvalGroupTypeId}
//            );
//            //console.log('updateUserUrl='+updateUserUrl);
//
//            //$('#'+formid).submit();
//            $.get(updateApprovalGroupUrl, function(data, status){
//                lbtn.stop();
//                console.log("Data: " + data + "\nStatus: " + status);
//                if( status == "success" ) {
//                    //reload page
//                    location.reload();
//                }
//            });
//        }
        function updateVacReqGroupApprovalTypes(btn,instid) {

            var lbtn = Ladda.create(btn);
            lbtn.start();

            var formid = "vacreq_orginst_approvaltypes";
            //console.log('formid='+formid);

            var form = $('#'+formid);

            //get roles by class vacreq-roles
            var approvalGroupTypeId = 0;
            var approvalGroupType = form.find('#oleg_vacreqbundle_settings_approvaltypes').select2('data');
            if( approvalGroupType ) {
                approvalGroupTypeId = approvalGroupType.id;
            }
            console.log('approvalGroupTypeId='+approvalGroupTypeId);

            if( !approvalGroupTypeId || approvalGroupTypeId == '' ) {
                approvalGroupTypeId = 0;
            }

            var updateApprovalGroupUrl = Routing.generate(
                    'vacreq_orginst_approvaltypes_update',
                    {instid:instid, approvaltypeid:approvalGroupTypeId}
            );
            //console.log('updateUserUrl='+updateUserUrl);

            //$('#'+formid).submit();
            $.get(updateApprovalGroupUrl, function(data, status){
                lbtn.stop();
                console.log("Data: " + data + "\nStatus: " + status);
                if( status == "success" ) {
                    //reload page
                    location.reload();
                }
            });
        }
        function updateVacReqDefaultInformUsers(btn,instid) {

            var lbtn = Ladda.create(btn);
            lbtn.start();

            var formid = "vacreq_orginst_defaultinformusers";
            //console.log('formid='+formid);

            var form = $('#'+formid);

            //get roles by class vacreq-roles
            var users = form.find('.vacreq-defaultinformusers').select2('val');
            //console.log('users='+users);

            if( !users || users == '' ) {
                users = 0;
            }

            var updateUserUrl = Routing.generate('vacreq_orginst_defaultinformusers_update', {instid:instid,users:users});
            //console.log('updateUserUrl='+updateUserUrl);

            //$('#'+formid).submit();
            $.get(updateUserUrl, function(data, status){
                lbtn.stop();
                //console.log("Data: " + data + "\nStatus: " + status);
                if( status == "success" ) {
                    //reload page
                    location.reload();
                }
            });
        }
        function updateVacReqProxySubmitterUsers(btn,instid) {

            var lbtn = Ladda.create(btn);
            lbtn.start();

            var formid = "vacreq_orginst_proxysubmitterusers";
            //console.log('formid='+formid);

            var form = $('#'+formid);

            //get roles by class vacreq-roles
            var users = form.find('.vacreq-proxysubmitterusers').select2('val');
            //console.log('users='+users);

            if( !users || users == '' ) {
                users = 0;
            }

            var updateUserUrl = Routing.generate('vacreq_orginst_proxysubmitterusers_update', {instid:instid,users:users});
            //console.log('updateUserUrl='+updateUserUrl);

            //$('#'+formid).submit();
            $.get(updateUserUrl, function(data, status){
                lbtn.stop();
                //console.log("Data: " + data + "\nStatus: " + status);
                if( status == "success" ) {
                    //reload page
                    location.reload();
                }
            });
        }

    </script>

{% endblock %}


