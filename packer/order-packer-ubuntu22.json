{

  "variables": {
        "ssh_name": "root"
  },	

  "builders": [{
    "type": "digitalocean",
    "api_token": "api_token_bash_value",
    "region": "nyc3",
    "size": "2gb",
    "image": "ubuntu-22-04-x64",
    "ssh_username": "{{user `ssh_name`}}"  
  }],

  "provisioners": [
  
     {
        "type": "shell",
		"expect_disconnect": "true",
		"environment_vars": [
			"bashdbuser=bash_dbuser",
			"bashdbpass=bash_dbpass",
            "bashprotocol=bash_protocol",
			"bashdomainname=bash_domainname",
            "bashsslcertificate=bash_sslcertificate",
			"bashemail=bash_email"
		],
        "script": "ubuntu22_install.sh"
    },
	
	{
        "type": "shell",
        "inline": [ 
           "echo @### Copy parameters file [parameters_bash_file] to [/usr/local/bin/order-lab/orderflex/config/parameters_bash_file] ###"
         ]    
	},
	
	{
		"type": "file",
		"source": "parameters_bash_file",
		"destination": "/usr/local/bin/order-lab/orderflex/config/parameters_bash_file"         
	},
	
	{
        "type": "shell",
        "inline": [ 
           "echo @### Create ssl folder /usr/local/bin/order-lab/ssl ###",		
		   "sudo mkdir /usr/local/bin/order-lab/ssl"
         ]    
	},
	  
	  {
          "type": "file",
          "source": "bash_sslcertificate",
          "destination": "/usr/local/bin/order-lab/ssl/apache2.crt"         
       },
	   
	   {
          "type": "file",
          "source": "bash_sslprivatekey",
          "destination": "/usr/local/bin/order-lab/ssl/apache2.key"         
       },
	  
	  {
        "type": "shell",
        "inline": [ 
		   "echo @### Restart apache in the final step ###",
		   "sudo systemctl restart apache2.service",
		   "sudo systemctl status apache2.service",
		   "echo @### Restart postgresql ###",
		   "sudo systemctl restart postgresql",	
		   "sudo systemctl status postgresql",			   
		   "echo @### Go to orderflex folder  ###",
           "cd /usr/local/bin/order-lab/orderflex",			   		   
		   "echo @### Composer and deploy using orderflex ###",				   
		   "composer self-update",   
           "yes | composer install",
		   "echo @### Install yarn package.json ###",
		   "sudo yarn install --frozen-lockfile",	

		   "echo @### Install additional.sh. env for python ###",
		   "bash /usr/local/bin/order-lab/packer/additional-ubuntu.sh",
		   
	       "sudo chmod +x /usr/local/bin/order-lab/orderflex/deploy_prod.sh",
	       "bash /usr/local/bin/order-lab/orderflex/deploy_prod.sh -withdb",
	       "sudo chown -R www-data:www-data /usr/local/bin/order-lab",		           
           "sudo chown -R www-data:www-data /usr/local/bin/order-lab/.git/",
		   "sudo chown -R www-data:www-data /usr/local/bin/order-lab/orderflex/var/cache",
		   "sudo chown -R www-data:www-data /usr/local/bin/order-lab/orderflex/var/log",
           "sudo chown -R www-data:www-data /usr/local/bin/order-lab/orderflex/public",
		   "echo @### PostgreSQL Version end of installation ###",
		   "echo @### Check OS Info end of installation ###",
		   "sudo hostnamectl",		   
		   "psql --version",
		   
		   "echo @### Create system DB ###",
		   "bash /usr/local/bin/order-lab/orderflex/deploy_prod.sh",
		   "php bin/console doctrine:database:create --connection=systemdb",
		   "php bin/console doctrine:schema:update --em=systemdb --complete --force",
		   "bash /usr/local/bin/order-lab/orderflex/deploy_prod.sh"
         ]    
      },

      {
		"type": "file",
		"source": "sshkey.pub",
		"destination": "/root/.ssh/sshkey.pub"
	   },

	  {
        "type": "shell",
        "inline": [
            "echo @### Copy public key to authorized_keys: cat ~/.ssh/sshkey.pub >> ~/.ssh/authorized_keys ###",
		    "cat ~/.ssh/sshkey.pub >> ~/.ssh/authorized_keys",
			"chmod 700 ~/.ssh",
			"chmod 600 ~/.ssh/authorized_keys",
			"echo 'PubkeyAuthentication yes' >> /etc/ssh/sshd_config",
			"echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config",
			"echo 'RSAAuthentication yes' >> /etc/ssh/sshd_config",
			"echo @### Restart ssh ###",
		    "sudo systemctl restart sshd",
			"sudo service sshd restart"
         ]
	   }
      
   ]

}
